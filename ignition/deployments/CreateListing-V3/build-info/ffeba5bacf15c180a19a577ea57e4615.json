{
  "id": "ffeba5bacf15c180a19a577ea57e4615",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.24",
  "solcLongVersion": "0.8.24+commit.e11b9ed9",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(msg.sender);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/BeatFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"./BEATListings.sol\";\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing MAAL721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n\ncontract BEATFactory is Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter private _counter;\n\n    uint256 public platformFee = 25; // 25%\n    address public platformWallet = 0xcc4Ef3FC58Aa1EE91626f50037734b5f3cA1358a;\n\n    address public DOTB;\n\n    address[] public contractsList;\n\n    event ProjectCreated(address listing);\n    event PlatformFeeUpdated(uint256 fee);\n    event PlatformWalletUpdated(address wallet);\n\n    mapping(address => address[]) private ListedProjects;\n\n    // mapping(uint256 => address) public indexToOwner; //index to NFT owner address\n\n    constructor() {\n        DOTB = msg.sender;\n    }\n\n    function createListing(\n        IERC20 _stableCoin,\n        string memory _name,\n        string memory _projectSymbol,\n        uint256 _fundraisingGoal,\n        uint256 _contributionAmnt,\n        uint256 _projectStartTime,\n        uint256 _projectEndTime,\n        address _projectOwner,\n        uint256 _projectAPY\n    ) external onlyOwner returns (address newProjectAddress) {\n        BEATListings newProject = new BEATListings(\n        _stableCoin,\n        _name,\n        _projectSymbol,\n        _fundraisingGoal,\n        _contributionAmnt,\n        _projectStartTime,\n        _projectEndTime,\n        _projectOwner,\n        platformFee,\n        platformWallet,\n        _projectAPY\n        );\n        contractsList.push(address(newProject));\n        _counter.increment();\n\n        // Mapping NFT IDs to the investor address\n        ListedProjects[msg.sender].push(address(newProject));\n\n        emit ProjectCreated(address(newProject));\n        return address(newProject);\n    }\n\n    function deployedCounter() public view returns (uint256 __counter) {\n        return _counter.current();\n    }\n\n    function deployedContracts() public view returns (address[] memory) {\n        return contractsList;\n    }\n\n    // Return all NFT addresses held by an address\n    function getUserProjects(address deployer)\n        external\n        view\n        returns (address[] memory contracts)\n    {\n        address[] memory arr = ListedProjects[deployer];\n        return arr;\n    }\n\n    function modifyPlatformFee(uint256 _platformFee) external onlyOwner{\n        platformFee = _platformFee;\n\n        emit PlatformFeeUpdated(_platformFee);\n    }\n\n    function updatePlatformWallet(address _newWallet) external {\n        require(msg.sender == DOTB, \"only DOTB can update\");\n\n        platformWallet = _newWallet;\n\n        emit PlatformWalletUpdated(_newWallet);\n    }\n}"
      },
      "contracts/BEATListings.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from ReentrancyGuard will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single nonReentrant guard, functions marked as\n * nonReentrant may not call one another. This can be worked around by making\n * those functions private, and then adding external nonReentrant entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a nonReentrant function from another nonReentrant\n     * function is not supported. It is possible to prevent this from happening\n     * by making the nonReentrant function external, and make it call a\n     * private function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n\n/// @title A contract for holding a fundraising project\n/// @author Arrnaya (t.me/arrnaya)\ncontract BEATListings is Ownable, ERC20, ReentrancyGuard {\n    IERC20 public stableCoin;\n\n    uint256 public platformFee;\n    address public platformWallet;\n\n    uint256 public projectStartTime;\n    uint256 public projectEndTime;\n    uint256 public fundraisingGoal;\n    uint256 public totalRaised;\n    uint256 public totalSharesSold;\n    uint256 public projectAPY; // Rate of return on investment\n    uint256 public APYStartTime; // The reference time from when APY gets calculated\n\n    uint256 public refundableShares;\n    uint256 public totalAmountRefunded;\n    uint256 public totalTokensMinted;\n\n    bool public isCancelled;\n    bool public isFinished;\n    bool public isFinalized;\n\n    mapping(address => uint256) public addressToContributions;\n    mapping(address => uint256) public investorToLastClaimTime;\n    mapping(address => uint256) public investorClaimCount;\n    mapping(address => uint256) public investorToShare;\n    mapping(address => uint256) public addressToMintedTokens;\n\n    uint256 public contributionAmnt;\n    uint256 public maxAllowedSharesPerWallet;\n\n    event Contribution(\n        address indexed from,\n        address indexed project,\n        uint256 amount\n    );\n    event SharesClaimed(address to, uint256 amount);\n    event Refund(address indexed to, address indexed project, uint256 amount);\n    event Withdraw(address indexed to, address indexed project, uint256 amount);\n    event ListingFinalized(uint256 timestamp);\n    event ReturnClaimed(address investor, uint256 claimedAmount);\n    event AnnualAPRDeposited(uint256 depositAmount);\n\n    // constructor (IERC20 _stableCoin) {\n    //   stableCoin = _stableCoin;\n    // }\n\n    modifier isNotCancelledProject() {\n        require(!isCancelled, \"Project: project is cancelled\");\n        _;\n    }\n\n    modifier isNotExpiredProject() {\n        require(\n            block.timestamp >= projectStartTime &&\n                block.timestamp < projectEndTime,\n            \"Project: Either it has not started or the time limit for project expired\"\n        );\n        _;\n    }\n\n    modifier isNotFinishedProject() {\n        require(!isFinished, \"Project: project has finished\");\n        _;\n    }\n\n    /// @notice Instantiates a new fundraising project and instantly transfers ownership\n    /// to the _projectOwner address provided\n    /// @param _name The name of the fundraising project to be used in the NFT badges\n    /// given to contributors of >= 1 ether\n    /// @param _symbol The NFT token symbol\n    /// @param _fundraisingGoal The total ether goal of the new fundraising project\n    /// @param _projectOwner The true owner of the project (and which instantly gains\n    /// ownership on completion of instantiating the contract)\n    /// @dev The project expiration time will always be 30 days from creation\n    constructor(\n        IERC20 _stableCoin,\n        string memory _name,\n        string memory _symbol,\n        uint256 _fundraisingGoal,\n        uint256 _contributionAmnt,\n        uint256 _projectStartTime,\n        uint256 _projectEndTime,\n        address _projectOwner,\n        uint256 _platformFee,\n        address _platformWallet,\n        uint256 _projectAPY\n    ) ERC20(_name, _symbol) {\n        require(\n            _projectEndTime > _projectStartTime,\n            \"End time can't be before start time\"\n        );\n        require(address(_stableCoin) != address(0), \"Can't set zero address\");\n        stableCoin = _stableCoin;\n        transferOwnership(_projectOwner);\n        fundraisingGoal = _fundraisingGoal;\n        contributionAmnt = _contributionAmnt;\n        maxAllowedSharesPerWallet = _fundraisingGoal / 10;\n        projectStartTime = _projectStartTime;\n        projectEndTime = _projectEndTime;\n        platformFee = _platformFee;\n        platformWallet = _platformWallet;\n        projectAPY = _projectAPY;\n    }\n\n    // fallbacks\n    receive() external payable {}\n\n    /// @notice Allows any address to contribute to the contract if the project has not\n    /// been cancelled, is not expired, and has not already been finished successfully\n    /// @dev If an address' contributions put the contract over or equal the fundraising limit,\n    /// it's a valid contribution but the fundraising project is finished immediately\n    function _participate(uint256 _numberOfShares)\n        external\n        isNotCancelledProject\n        isNotExpiredProject\n        isNotFinishedProject\n        nonReentrant\n    {\n        require(\n            _numberOfShares > 0 && _numberOfShares <= maxAllowedSharesPerWallet,\n            \"Shares can't be less than zero and more than max allowed\"\n        );\n        require(\n            (contributionAmnt * _numberOfShares) +\n                stableCoin.balanceOf(address(this)) <=\n                fundraisingGoal,\n            \"Exceeding total fund raising goal!\"\n        );\n        require(\n            investorToShare[msg.sender] + _numberOfShares <=\n                maxAllowedSharesPerWallet,\n            \"Can't buy more than the max share allowed!\"\n        );\n\n        uint256 _finalContributionAmnt = contributionAmnt * _numberOfShares;\n\n        if (_numberOfShares == maxAllowedSharesPerWallet) {\n            isFinished = true;\n        } else if (\n            (contributionAmnt * _numberOfShares) +\n                stableCoin.balanceOf(address(this)) >=\n            fundraisingGoal\n        ) {\n            isFinished = true;\n        }\n\n        stableCoin.transferFrom(\n            msg.sender,\n            address(this),\n            _finalContributionAmnt\n        );\n\n        //mapping contribution amount to investor address\n        addressToContributions[msg.sender] += _finalContributionAmnt;\n        // Mapping shares to the investor address\n        investorToShare[msg.sender] += _numberOfShares;\n        // Mapping total raised & total shares sold\n        totalRaised += _finalContributionAmnt;\n        totalSharesSold += _numberOfShares;\n\n        emit Contribution(msg.sender, address(this), _finalContributionAmnt);\n    }\n\n    function _claim_Shares() external isNotCancelledProject nonReentrant {\n        require(isFinalized, \"Project: Sale is not finished yet!\");\n        require(\n            addressToContributions[msg.sender] > 0,\n            \"Project: address has no contributions\"\n        );\n        // Mints nft to the contributor's address\n        uint256 tokensAllocated = investorToShare[msg.sender];\n\n        // Mapping NFT Balance to the investor address\n        addressToMintedTokens[msg.sender] += tokensAllocated;\n\n        _mint(msg.sender, tokensAllocated);\n\n        totalTokensMinted += tokensAllocated;\n\n        emit SharesClaimed(msg.sender, tokensAllocated);\n    }\n\n    /// @notice Allows the owner of the project to cancel it if the project has not\n    /// been cancelled, is not expired, and has not already been finished successfully\n    function cancel_Project()\n        external\n        onlyOwner\n        isNotCancelledProject\n        isNotExpiredProject\n        isNotFinishedProject\n    {\n        isCancelled = true;\n        refundableShares = totalSharesSold;\n    }\n\n    /// @notice Refunds an address' funds if the project is either cancelled or has\n    /// expired without finishing successfully\n    function _claim_Refund_on_cancellation() external nonReentrant {\n        require(\n            isCancelled || (block.timestamp >= projectEndTime && !isFinished),\n            \"Project: cannot refund project funds\"\n        );\n        require(\n            addressToContributions[msg.sender] > 0,\n            \"Project: address has no contributions\"\n        );\n        require(\n            refundableShares > 0 &&\n                stableCoin.balanceOf(address(this)) >=\n                addressToContributions[msg.sender],\n            \"No shares remaining for refund\"\n        );\n\n        uint256 addressContributions = addressToContributions[msg.sender];\n        totalAmountRefunded += addressContributions;\n        addressToContributions[msg.sender] = 0;\n        totalSharesSold -= investorToShare[msg.sender];\n        refundableShares -= investorToShare[msg.sender];\n        investorToShare[msg.sender] = 0;\n\n        stableCoin.transfer(msg.sender, addressContributions);\n\n        emit Refund(msg.sender, address(this), addressContributions);\n    }\n\n    function finalize() external onlyOwner {\n        processFunds();\n        isFinalized = true;\n\n        APYStartTime = block.timestamp;\n\n        emit ListingFinalized(block.timestamp);\n    }\n\n    /// @notice Allows the owner of the contract to withdraw a successfully completed\n    /// fundraising project's ether\n    function processFunds() internal {\n        require(isFinished, \"Project: project is not finished\");\n\n        uint256 annualReturnAmount = (totalRaised * projectAPY) / 100;\n        uint256 platformFeeAmount = ((totalRaised - annualReturnAmount) *\n            platformFee) / 100;\n        uint256 listingTransferAmount = totalRaised -\n            annualReturnAmount -\n            platformFeeAmount;\n\n        stableCoin.transfer(platformWallet, platformFeeAmount);\n        stableCoin.transfer(msg.sender, listingTransferAmount);\n        emit Withdraw(msg.sender, address(this), fundraisingGoal);\n    }\n\n    function recoverETH() external onlyOwner {\n        require(address(this).balance > 0, \"Nothing to recover\");\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    function claimReturn() external {\n\n        uint256 eligibleCalls = (block.timestamp - APYStartTime) / 30 days;\n        require(eligibleCalls > investorClaimCount[msg.sender], \"You have already claimed for this period or it is not yet time.\");\n\n        uint256 missedCalls = eligibleCalls - investorClaimCount[msg.sender];\n        investorClaimCount[msg.sender] = eligibleCalls; // Update call count to the current eligible period\n        \n        // Multiply missedCalls with the amount they can claim each period\n        // For example: send or process funds here\n        // Assume claim() is your function that processes the claims for each missed period\n        for (uint256 i = 0; i < missedCalls; i++) {\n            processClaim(msg.sender);\n        }\n    }\n\n    function processClaim(address _investor) internal {\n        uint256 claimAmount = calculateClaimableAPYForInvestor(_investor);\n        stableCoin.transfer(_investor, claimAmount);\n\n        emit ReturnClaimed(_investor, claimAmount);\n    }\n\n    function calculateClaimableAPYForInvestor(address _investor) public view returns(uint256){\n        require(\n            addressToContributions[_investor] > 0,\n            \"Project: address has no contributions\"\n        );\n\n        uint256 duration;\n\n        if(investorToLastClaimTime[_investor] == 0) {\n            duration = block.timestamp - APYStartTime;\n        } else {\n            duration = block.timestamp - investorToLastClaimTime[_investor];\n        }\n\n        uint256 returnAmount = (addressToContributions[_investor] * projectAPY * duration) / (365 * 86400);\n\n        return returnAmount;\n    }\n\n    function rescueERC20(address tokenAdd) external onlyOwner {\n        require(\n            IERC20(tokenAdd) != stableCoin,\n            \"Can't claim fund raising tokens using this method!\"\n        );\n        uint256 amount = IERC20(tokenAdd).balanceOf(address(this));\n        IERC20(tokenAdd).transfer(owner(), amount);\n    }\n\n    function depositAPR() external onlyOwner {\n        uint256 depositAmount = (totalRaised * projectAPY) / 100;\n        stableCoin.transferFrom(msg.sender, address(this), depositAmount);\n\n        emit AnnualAPRDeposited(depositAmount);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              917
            ],
            "Ownable": [
              131
            ]
          },
          "id": 132,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 132,
              "sourceUnit": 918,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 917,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 917,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 131,
              "linearizedBaseContracts": [
                131,
                917
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 33,
                    "nodeType": "Block",
                    "src": "1239:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 29,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1268:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 30,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1272:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1268:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 28,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "1249:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1249:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32,
                        "nodeType": "ExpressionStatement",
                        "src": "1249:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 34,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1236:2:0"
                  },
                  "returnParameters": {
                    "id": 27,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1239:0:0"
                  },
                  "scope": 131,
                  "src": "1225:61:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 41,
                    "nodeType": "Block",
                    "src": "1395:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "1405:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1405:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39,
                        "nodeType": "ExpressionStatement",
                        "src": "1405:13:0"
                      },
                      {
                        "id": 40,
                        "nodeType": "PlaceholderStatement",
                        "src": "1428:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 35,
                    "nodeType": "StructuredDocumentation",
                    "src": "1292:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 42,
                  "name": "onlyOwner",
                  "nameLocation": "1383:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 36,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1392:2:0"
                  },
                  "src": "1374:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 50,
                    "nodeType": "Block",
                    "src": "1567:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 48,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1584:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 47,
                        "id": 49,
                        "nodeType": "Return",
                        "src": "1577:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 43,
                    "nodeType": "StructuredDocumentation",
                    "src": "1442:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 51,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1521:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1526:2:0"
                  },
                  "returnParameters": {
                    "id": 47,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 46,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 51,
                        "src": "1558:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 45,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1558:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1557:9:0"
                  },
                  "scope": 131,
                  "src": "1512:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 67,
                    "nodeType": "Block",
                    "src": "1715:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 55,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "1729:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1729:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 57,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "1740:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1740:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1729:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 66,
                        "nodeType": "IfStatement",
                        "src": "1725:101:0",
                        "trueBody": {
                          "id": 65,
                          "nodeType": "Block",
                          "src": "1754:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 61,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 899,
                                      "src": "1802:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 62,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1802:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 60,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1775:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 63,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1775:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 64,
                              "nodeType": "RevertStatement",
                              "src": "1768:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 52,
                    "nodeType": "StructuredDocumentation",
                    "src": "1603:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 68,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1679:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1690:2:0"
                  },
                  "returnParameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1715:0:0"
                  },
                  "scope": 131,
                  "src": "1670:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "2221:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 77,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2258:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 76,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2250:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 75,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2250:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2250:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 74,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "2231:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2231:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "2231:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 69,
                    "nodeType": "StructuredDocumentation",
                    "src": "1838:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 82,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 72,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 71,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2211:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "2211:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2211:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2176:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2193:2:0"
                  },
                  "returnParameters": {
                    "id": 73,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2221:0:0"
                  },
                  "scope": 131,
                  "src": "2167:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 109,
                    "nodeType": "Block",
                    "src": "2487:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 90,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "2501:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 93,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2521:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 92,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2513:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2513:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2513:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2501:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 104,
                        "nodeType": "IfStatement",
                        "src": "2497:91:0",
                        "trueBody": {
                          "id": 103,
                          "nodeType": "Block",
                          "src": "2525:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 99,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2574:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 98,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2566:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 97,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2566:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2566:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 96,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2546:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2546:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 102,
                              "nodeType": "RevertStatement",
                              "src": "2539:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 106,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "2616:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 105,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "2597:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2597:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 108,
                        "nodeType": "ExpressionStatement",
                        "src": "2597:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 83,
                    "nodeType": "StructuredDocumentation",
                    "src": "2274:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 110,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2477:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "2477:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2477:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2426:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 85,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2452:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 110,
                        "src": "2444:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2444:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2443:18:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:0:0"
                  },
                  "scope": 131,
                  "src": "2417:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 129,
                    "nodeType": "Block",
                    "src": "2849:124:0",
                    "statements": [
                      {
                        "assignments": [
                          117
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 117,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2867:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 129,
                            "src": "2859:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 116,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2859:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 119,
                        "initialValue": {
                          "id": 118,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "2878:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2859:25:0"
                      },
                      {
                        "expression": {
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 120,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "2894:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 121,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "2903:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2894:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 123,
                        "nodeType": "ExpressionStatement",
                        "src": "2894:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 125,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "2947:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 126,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "2957:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 124,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2926:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2926:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 128,
                        "nodeType": "EmitStatement",
                        "src": "2921:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 111,
                    "nodeType": "StructuredDocumentation",
                    "src": "2638:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 130,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2795:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2822:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 130,
                        "src": "2814:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2814:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2813:18:0"
                  },
                  "returnParameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2849:0:0"
                  },
                  "scope": 131,
                  "src": "2786:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 132,
              "src": "663:2312:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:2874:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              268
            ],
            "IERC20Errors": [
              173
            ],
            "IERC721Errors": [
              221
            ]
          },
          "id": 269,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 133,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 134,
                "nodeType": "StructuredDocumentation",
                "src": "138:139:1",
                "text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
              },
              "fullyImplemented": true,
              "id": 173,
              "linearizedBaseContracts": [
                173
              ],
              "name": "IERC20Errors",
              "nameLocation": "288:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 135,
                    "nodeType": "StructuredDocumentation",
                    "src": "307:309:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 143,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "627:24:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 137,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "660:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "652:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "676:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "668:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "668:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "693:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "685:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "651:49:1"
                  },
                  "src": "621:80:1"
                },
                {
                  "documentation": {
                    "id": 144,
                    "nodeType": "StructuredDocumentation",
                    "src": "707:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 148,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "870:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "897:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 148,
                        "src": "889:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "889:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "888:16:1"
                  },
                  "src": "864:41:1"
                },
                {
                  "documentation": {
                    "id": 149,
                    "nodeType": "StructuredDocumentation",
                    "src": "911:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 153,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1081:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 151,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1110:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "1102:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 150,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1102:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1101:18:1"
                  },
                  "src": "1075:45:1"
                },
                {
                  "documentation": {
                    "id": 154,
                    "nodeType": "StructuredDocumentation",
                    "src": "1126:345:1",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 162,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1482:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 156,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1517:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "1509:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 155,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1509:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1534:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "1526:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1526:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 160,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1553:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "1545:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 159,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1545:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1508:52:1"
                  },
                  "src": "1476:85:1"
                },
                {
                  "documentation": {
                    "id": 163,
                    "nodeType": "StructuredDocumentation",
                    "src": "1567:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 167,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1752:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1781:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 167,
                        "src": "1773:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:18:1"
                  },
                  "src": "1746:45:1"
                },
                {
                  "documentation": {
                    "id": 168,
                    "nodeType": "StructuredDocumentation",
                    "src": "1797:195:1",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 172,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2003:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 170,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2031:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "2023:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2023:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2022:17:1"
                  },
                  "src": "1997:43:1"
                }
              ],
              "scope": 269,
              "src": "278:1764:1",
              "usedErrors": [
                143,
                148,
                153,
                162,
                167,
                172
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 174,
                "nodeType": "StructuredDocumentation",
                "src": "2044:141:1",
                "text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
              },
              "fullyImplemented": true,
              "id": 221,
              "linearizedBaseContracts": [
                221
              ],
              "name": "IERC721Errors",
              "nameLocation": "2196:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 175,
                    "nodeType": "StructuredDocumentation",
                    "src": "2216:219:1",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 179,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2446:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2473:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 179,
                        "src": "2465:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2465:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2464:15:1"
                  },
                  "src": "2440:40:1"
                },
                {
                  "documentation": {
                    "id": 180,
                    "nodeType": "StructuredDocumentation",
                    "src": "2486:132:1",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 184,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2629:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 183,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 182,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2660:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 184,
                        "src": "2652:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2652:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2651:17:1"
                  },
                  "src": "2623:46:1"
                },
                {
                  "documentation": {
                    "id": 185,
                    "nodeType": "StructuredDocumentation",
                    "src": "2675:289:1",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 193,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2975:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3004:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "2996:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2996:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 189,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3020:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "3012:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3012:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 191,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3037:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "3029:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3029:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2995:48:1"
                  },
                  "src": "2969:75:1"
                },
                {
                  "documentation": {
                    "id": 194,
                    "nodeType": "StructuredDocumentation",
                    "src": "3050:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 198,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3213:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 196,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3241:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "3233:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 195,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3233:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3232:16:1"
                  },
                  "src": "3207:42:1"
                },
                {
                  "documentation": {
                    "id": 199,
                    "nodeType": "StructuredDocumentation",
                    "src": "3255:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 203,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3425:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3455:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "3447:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3447:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3446:18:1"
                  },
                  "src": "3419:46:1"
                },
                {
                  "documentation": {
                    "id": 204,
                    "nodeType": "StructuredDocumentation",
                    "src": "3471:247:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 210,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3729:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3764:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 210,
                        "src": "3756:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3756:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 208,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3782:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 210,
                        "src": "3774:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 207,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3755:35:1"
                  },
                  "src": "3723:68:1"
                },
                {
                  "documentation": {
                    "id": 211,
                    "nodeType": "StructuredDocumentation",
                    "src": "3797:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 215,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3982:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 213,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4012:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "4004:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4004:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4003:18:1"
                  },
                  "src": "3976:46:1"
                },
                {
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "4028:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 220,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4236:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4266:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "4258:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4258:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4257:18:1"
                  },
                  "src": "4230:46:1"
                }
              ],
              "scope": 269,
              "src": "2186:2092:1",
              "usedErrors": [
                179,
                184,
                193,
                198,
                203,
                210,
                215,
                220
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 222,
                "nodeType": "StructuredDocumentation",
                "src": "4280:143:1",
                "text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
              },
              "fullyImplemented": true,
              "id": 268,
              "linearizedBaseContracts": [
                268
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4434:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 223,
                    "nodeType": "StructuredDocumentation",
                    "src": "4455:361:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 233,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4827:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4862:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "4854:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4854:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4878:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "4870:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4870:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4895:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "4887:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4887:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4911:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "4903:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4903:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4853:66:1"
                  },
                  "src": "4821:99:1"
                },
                {
                  "documentation": {
                    "id": 234,
                    "nodeType": "StructuredDocumentation",
                    "src": "4926:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 238,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5089:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5118:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "5110:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5110:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5109:16:1"
                  },
                  "src": "5083:43:1"
                },
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "5132:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 243,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5302:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5333:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 243,
                        "src": "5325:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5325:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5324:18:1"
                  },
                  "src": "5296:47:1"
                },
                {
                  "documentation": {
                    "id": 244,
                    "nodeType": "StructuredDocumentation",
                    "src": "5349:256:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 250,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5616:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 246,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5653:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "5645:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5645:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5671:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "5663:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5663:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5644:33:1"
                  },
                  "src": "5610:68:1"
                },
                {
                  "documentation": {
                    "id": 251,
                    "nodeType": "StructuredDocumentation",
                    "src": "5684:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 255,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5869:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 253,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5900:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "5892:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 252,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5892:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5891:18:1"
                  },
                  "src": "5863:47:1"
                },
                {
                  "documentation": {
                    "id": 256,
                    "nodeType": "StructuredDocumentation",
                    "src": "5916:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 260,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6124:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6155:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "6147:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6147:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6146:18:1"
                  },
                  "src": "6118:47:1"
                },
                {
                  "documentation": {
                    "id": 261,
                    "nodeType": "StructuredDocumentation",
                    "src": "6171:280:1",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 267,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6462:25:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 263,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6496:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 267,
                        "src": "6488:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 262,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6488:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 265,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6515:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 267,
                        "src": "6507:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 264,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6507:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6487:41:1"
                  },
                  "src": "6456:73:1"
                }
              ],
              "scope": 269,
              "src": "4424:2107:1",
              "usedErrors": [
                233,
                238,
                243,
                250,
                255,
                260,
                267
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6420:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              917
            ],
            "ERC20": [
              783
            ],
            "IERC20": [
              861
            ],
            "IERC20Errors": [
              173
            ],
            "IERC20Metadata": [
              887
            ]
          },
          "id": 784,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 270,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 272,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 784,
              "sourceUnit": 862,
              "src": "131:36:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 271,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 861,
                    "src": "139:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 274,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 784,
              "sourceUnit": 888,
              "src": "168:63:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 273,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 887,
                    "src": "176:14:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 276,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 784,
              "sourceUnit": 918,
              "src": "232:48:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 275,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 917,
                    "src": "240:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 278,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 784,
              "sourceUnit": 269,
              "src": "281:65:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 277,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 173,
                    "src": "289:12:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 280,
                    "name": "Context",
                    "nameLocations": [
                      "1428:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 917,
                    "src": "1428:7:2"
                  },
                  "id": 281,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1428:7:2"
                },
                {
                  "baseName": {
                    "id": 282,
                    "name": "IERC20",
                    "nameLocations": [
                      "1437:6:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 861,
                    "src": "1437:6:2"
                  },
                  "id": 283,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1437:6:2"
                },
                {
                  "baseName": {
                    "id": 284,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1445:14:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 887,
                    "src": "1445:14:2"
                  },
                  "id": 285,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1445:14:2"
                },
                {
                  "baseName": {
                    "id": 286,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1461:12:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 173,
                    "src": "1461:12:2"
                  },
                  "id": 287,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1461:12:2"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 279,
                "nodeType": "StructuredDocumentation",
                "src": "348:1052:2",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
              },
              "fullyImplemented": true,
              "id": 783,
              "linearizedBaseContracts": [
                783,
                173,
                887,
                861,
                917
              ],
              "name": "ERC20",
              "nameLocation": "1419:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1524:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "1480:53:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 290,
                    "keyName": "account",
                    "keyNameLocation": "1496:7:2",
                    "keyType": {
                      "id": 288,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1488:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1480:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 289,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1507:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1612:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "1540:83:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 296,
                    "keyName": "account",
                    "keyNameLocation": "1556:7:2",
                    "keyType": {
                      "id": 292,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1548:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1540:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 295,
                      "keyName": "spender",
                      "keyNameLocation": "1583:7:2",
                      "keyType": {
                        "id": 293,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1575:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1567:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1594:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1646:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "1630:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1630:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1680:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "1665:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1706:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "1691:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 319,
                    "nodeType": "Block",
                    "src": "1952:57:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 311,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "1962:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 312,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "1970:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1962:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 314,
                        "nodeType": "ExpressionStatement",
                        "src": "1962:13:2"
                      },
                      {
                        "expression": {
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 315,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "1985:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 316,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "1995:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1985:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 318,
                        "nodeType": "ExpressionStatement",
                        "src": "1985:17:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 304,
                    "nodeType": "StructuredDocumentation",
                    "src": "1720:171:2",
                    "text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
                  },
                  "id": 320,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 309,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 306,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1922:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "1908:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1908:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1943:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "1929:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1929:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1907:44:2"
                  },
                  "returnParameters": {
                    "id": 310,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1952:0:2"
                  },
                  "scope": 783,
                  "src": "1896:113:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    874
                  ],
                  "body": {
                    "id": 328,
                    "nodeType": "Block",
                    "src": "2134:29:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 326,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "2151:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 325,
                        "id": 327,
                        "nodeType": "Return",
                        "src": "2144:12:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 321,
                    "nodeType": "StructuredDocumentation",
                    "src": "2015:54:2",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 329,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "2083:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 322,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2087:2:2"
                  },
                  "returnParameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 329,
                        "src": "2119:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2119:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2118:15:2"
                  },
                  "scope": 783,
                  "src": "2074:89:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    880
                  ],
                  "body": {
                    "id": 337,
                    "nodeType": "Block",
                    "src": "2338:31:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 335,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "2355:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 334,
                        "id": 336,
                        "nodeType": "Return",
                        "src": "2348:14:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 330,
                    "nodeType": "StructuredDocumentation",
                    "src": "2169:102:2",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 338,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "2285:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 331,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2291:2:2"
                  },
                  "returnParameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "2323:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2323:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2322:15:2"
                  },
                  "scope": 783,
                  "src": "2276:93:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    886
                  ],
                  "body": {
                    "id": 346,
                    "nodeType": "Block",
                    "src": "3058:26:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3075:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 343,
                        "id": 345,
                        "nodeType": "Return",
                        "src": "3068:9:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 339,
                    "nodeType": "StructuredDocumentation",
                    "src": "2375:622:2",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 347,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "3011:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3019:2:2"
                  },
                  "returnParameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 347,
                        "src": "3051:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3051:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3050:7:2"
                  },
                  "scope": 783,
                  "src": "3002:82:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    810
                  ],
                  "body": {
                    "id": 355,
                    "nodeType": "Block",
                    "src": "3205:36:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 353,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 299,
                          "src": "3222:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 352,
                        "id": 354,
                        "nodeType": "Return",
                        "src": "3215:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 348,
                    "nodeType": "StructuredDocumentation",
                    "src": "3090:49:2",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 356,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "3153:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3164:2:2"
                  },
                  "returnParameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "3196:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3196:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3195:9:2"
                  },
                  "scope": 783,
                  "src": "3144:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    818
                  ],
                  "body": {
                    "id": 368,
                    "nodeType": "Block",
                    "src": "3373:42:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 364,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "3390:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 366,
                          "indexExpression": {
                            "id": 365,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "3400:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3390:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 363,
                        "id": 367,
                        "nodeType": "Return",
                        "src": "3383:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 357,
                    "nodeType": "StructuredDocumentation",
                    "src": "3247:47:2",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 369,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "3308:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 359,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3326:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "3318:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3318:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3317:17:2"
                  },
                  "returnParameters": {
                    "id": 363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 362,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "3364:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 361,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3364:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3363:9:2"
                  },
                  "scope": 783,
                  "src": "3299:116:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    828
                  ],
                  "body": {
                    "id": 392,
                    "nodeType": "Block",
                    "src": "3685:103:2",
                    "statements": [
                      {
                        "assignments": [
                          380
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 380,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3703:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 392,
                            "src": "3695:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 379,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3695:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 383,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 381,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "3711:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3711:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3695:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 385,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 380,
                              "src": "3743:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 386,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "3750:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 387,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "3754:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 384,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "3733:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3733:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 389,
                        "nodeType": "ExpressionStatement",
                        "src": "3733:27:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3777:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 378,
                        "id": 391,
                        "nodeType": "Return",
                        "src": "3770:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "3421:184:2",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 393,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3619:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3636:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "3628:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3628:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3648:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "3640:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3640:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3627:27:2"
                  },
                  "returnParameters": {
                    "id": 378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 377,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "3679:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 376,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3679:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3678:6:2"
                  },
                  "scope": 783,
                  "src": "3610:178:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    838
                  ],
                  "body": {
                    "id": 409,
                    "nodeType": "Block",
                    "src": "3935:51:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 403,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 297,
                              "src": "3952:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 405,
                            "indexExpression": {
                              "id": 404,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "3964:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3952:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 407,
                          "indexExpression": {
                            "id": 406,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "3971:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3952:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 402,
                        "id": 408,
                        "nodeType": "Return",
                        "src": "3945:34:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 394,
                    "nodeType": "StructuredDocumentation",
                    "src": "3794:47:2",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 410,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3855:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3873:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "3865:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3865:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3888:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "3880:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3880:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3864:32:2"
                  },
                  "returnParameters": {
                    "id": 402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 401,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "3926:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3926:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3925:9:2"
                  },
                  "scope": 783,
                  "src": "3846:140:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    848
                  ],
                  "body": {
                    "id": 433,
                    "nodeType": "Block",
                    "src": "4372:107:2",
                    "statements": [
                      {
                        "assignments": [
                          421
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 421,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4390:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 433,
                            "src": "4382:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 420,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4382:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 424,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 422,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "4398:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4398:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4382:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 426,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "4429:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 427,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "4436:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 428,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "4445:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 425,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              674,
                              734
                            ],
                            "referencedDeclaration": 674,
                            "src": "4420:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4420:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 430,
                        "nodeType": "ExpressionStatement",
                        "src": "4420:31:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4468:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 419,
                        "id": 432,
                        "nodeType": "Return",
                        "src": "4461:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 411,
                    "nodeType": "StructuredDocumentation",
                    "src": "3992:296:2",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 434,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4302:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 413,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4318:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 434,
                        "src": "4310:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4310:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 415,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4335:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 434,
                        "src": "4327:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4327:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4309:32:2"
                  },
                  "returnParameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 418,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 434,
                        "src": "4366:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 417,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4366:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4365:6:2"
                  },
                  "scope": 783,
                  "src": "4293:186:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    860
                  ],
                  "body": {
                    "id": 465,
                    "nodeType": "Block",
                    "src": "5132:151:2",
                    "statements": [
                      {
                        "assignments": [
                          447
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 447,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "5150:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 465,
                            "src": "5142:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 446,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5142:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 450,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 448,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "5160:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5160:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5142:30:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 452,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "5198:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 453,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 447,
                              "src": "5204:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 454,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "5213:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 451,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 782,
                            "src": "5182:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5182:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 456,
                        "nodeType": "ExpressionStatement",
                        "src": "5182:37:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 458,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "5239:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 459,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "5245:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 460,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "5249:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 457,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "5229:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5229:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 462,
                        "nodeType": "ExpressionStatement",
                        "src": "5229:26:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5272:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 445,
                        "id": 464,
                        "nodeType": "Return",
                        "src": "5265:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 435,
                    "nodeType": "StructuredDocumentation",
                    "src": "4485:549:2",
                    "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 466,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "5048:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 437,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5069:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 466,
                        "src": "5061:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5061:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 439,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5083:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 466,
                        "src": "5075:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 438,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5075:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 441,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5095:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 466,
                        "src": "5087:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 440,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5087:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5060:41:2"
                  },
                  "returnParameters": {
                    "id": 445,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 444,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 466,
                        "src": "5126:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 443,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5126:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5125:6:2"
                  },
                  "scope": 783,
                  "src": "5039:244:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 512,
                    "nodeType": "Block",
                    "src": "5725:231:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 476,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "5739:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5755:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5747:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 477,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5747:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5747:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5739:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 490,
                        "nodeType": "IfStatement",
                        "src": "5735:86:2",
                        "trueBody": {
                          "id": 489,
                          "nodeType": "Block",
                          "src": "5759:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 485,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5807:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 484,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5799:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 483,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5799:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 486,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5799:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 482,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "5780:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5780:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 488,
                              "nodeType": "RevertStatement",
                              "src": "5773:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 491,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "5834:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5848:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5840:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 492,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5840:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5840:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5834:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 505,
                        "nodeType": "IfStatement",
                        "src": "5830:86:2",
                        "trueBody": {
                          "id": 504,
                          "nodeType": "Block",
                          "src": "5852:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 500,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5902:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 499,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5894:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 498,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5894:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 501,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5894:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 497,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 153,
                                  "src": "5873:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5873:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 503,
                              "nodeType": "RevertStatement",
                              "src": "5866:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 507,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 469,
                              "src": "5933:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 508,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "5939:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 509,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 473,
                              "src": "5943:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 506,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "5925:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5925:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 511,
                        "nodeType": "ExpressionStatement",
                        "src": "5925:24:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 467,
                    "nodeType": "StructuredDocumentation",
                    "src": "5289:362:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 513,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5665:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 474,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 469,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5683:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 513,
                        "src": "5675:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5675:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 471,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5697:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 513,
                        "src": "5689:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5689:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 473,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5709:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 513,
                        "src": "5701:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5701:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5674:41:2"
                  },
                  "returnParameters": {
                    "id": 475,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5725:0:2"
                  },
                  "scope": 783,
                  "src": "5656:300:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 589,
                    "nodeType": "Block",
                    "src": "6346:1032:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 523,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "6360:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6376:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6368:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 524,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6368:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6368:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6360:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 560,
                          "nodeType": "Block",
                          "src": "6534:362:2",
                          "statements": [
                            {
                              "assignments": [
                                535
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 535,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6556:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 560,
                                  "src": "6548:19:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 534,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6548:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 539,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 536,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 291,
                                  "src": "6570:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 538,
                                "indexExpression": {
                                  "id": 537,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 516,
                                  "src": "6580:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6570:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6548:37:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 540,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 535,
                                  "src": "6603:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 541,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 520,
                                  "src": "6617:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6603:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 550,
                              "nodeType": "IfStatement",
                              "src": "6599:115:2",
                              "trueBody": {
                                "id": 549,
                                "nodeType": "Block",
                                "src": "6624:90:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 544,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 516,
                                          "src": "6674:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 545,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 535,
                                          "src": "6680:11:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 546,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 520,
                                          "src": "6693:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 543,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 143,
                                        "src": "6649:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256) pure"
                                        }
                                      },
                                      "id": 547,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6649:50:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 548,
                                    "nodeType": "RevertStatement",
                                    "src": "6642:57:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 559,
                              "nodeType": "UncheckedBlock",
                              "src": "6727:159:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 551,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 291,
                                        "src": "6834:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 553,
                                      "indexExpression": {
                                        "id": 552,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 516,
                                        "src": "6844:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6834:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 556,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 554,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 535,
                                        "src": "6852:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 555,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "6866:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6852:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6834:37:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 558,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6834:37:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 561,
                        "nodeType": "IfStatement",
                        "src": "6356:540:2",
                        "trueBody": {
                          "id": 533,
                          "nodeType": "Block",
                          "src": "6380:148:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 529,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "6496:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 530,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 520,
                                  "src": "6512:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6496:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 532,
                              "nodeType": "ExpressionStatement",
                              "src": "6496:21:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 562,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "6910:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6924:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6916:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 563,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6916:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6916:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6910:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 581,
                          "nodeType": "Block",
                          "src": "7125:206:2",
                          "statements": [
                            {
                              "id": 580,
                              "nodeType": "UncheckedBlock",
                              "src": "7139:182:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 574,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 291,
                                        "src": "7284:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 576,
                                      "indexExpression": {
                                        "id": 575,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 518,
                                        "src": "7294:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7284:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 577,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 520,
                                      "src": "7301:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7284:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 579,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7284:22:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 582,
                        "nodeType": "IfStatement",
                        "src": "6906:425:2",
                        "trueBody": {
                          "id": 573,
                          "nodeType": "Block",
                          "src": "6928:191:2",
                          "statements": [
                            {
                              "id": 572,
                              "nodeType": "UncheckedBlock",
                              "src": "6942:167:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 570,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 568,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "7073:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 569,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 520,
                                      "src": "7089:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7073:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 571,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7073:21:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 584,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "7355:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 585,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 518,
                              "src": "7361:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 586,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "7365:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 583,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "7346:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7346:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 588,
                        "nodeType": "EmitStatement",
                        "src": "7341:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 514,
                    "nodeType": "StructuredDocumentation",
                    "src": "5962:304:2",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 590,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "6280:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6296:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "6288:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6288:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 518,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6310:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "6302:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 517,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6302:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 520,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6322:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "6314:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 519,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6314:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6287:41:2"
                  },
                  "returnParameters": {
                    "id": 522,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6346:0:2"
                  },
                  "scope": 783,
                  "src": "6271:1107:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 622,
                    "nodeType": "Block",
                    "src": "7777:152:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 598,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 593,
                            "src": "7791:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7810:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7802:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 599,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7802:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7802:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7791:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 612,
                        "nodeType": "IfStatement",
                        "src": "7787:91:2",
                        "trueBody": {
                          "id": 611,
                          "nodeType": "Block",
                          "src": "7814:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 607,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7864:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 606,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7856:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 605,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7856:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 608,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7856:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 604,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 153,
                                  "src": "7835:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7835:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 610,
                              "nodeType": "RevertStatement",
                              "src": "7828:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 616,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7903:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7895:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 614,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7895:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7895:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 618,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 593,
                              "src": "7907:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 619,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 595,
                              "src": "7916:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 613,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "7887:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7887:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 621,
                        "nodeType": "ExpressionStatement",
                        "src": "7887:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 591,
                    "nodeType": "StructuredDocumentation",
                    "src": "7384:332:2",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 623,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7730:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7744:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 623,
                        "src": "7736:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7736:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 595,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7761:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 623,
                        "src": "7753:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7753:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7735:32:2"
                  },
                  "returnParameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7777:0:2"
                  },
                  "scope": 783,
                  "src": "7721:208:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "8303:150:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 631,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "8317:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8336:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8328:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 632,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8328:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8328:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8317:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 645,
                        "nodeType": "IfStatement",
                        "src": "8313:89:2",
                        "trueBody": {
                          "id": 644,
                          "nodeType": "Block",
                          "src": "8340:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 640,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8388:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 639,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8380:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 638,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8380:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 641,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8380:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 637,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "8361:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8361:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 643,
                              "nodeType": "RevertStatement",
                              "src": "8354:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 647,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "8419:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 650,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8436:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8428:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 648,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8428:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8428:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 652,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 628,
                              "src": "8440:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 646,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "8411:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8411:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 654,
                        "nodeType": "ExpressionStatement",
                        "src": "8411:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 624,
                    "nodeType": "StructuredDocumentation",
                    "src": "7935:307:2",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 656,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "8256:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 629,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "8270:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "8262:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 628,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8287:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "8279:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 627,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8279:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8261:32:2"
                  },
                  "returnParameters": {
                    "id": 630,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8303:0:2"
                  },
                  "scope": 783,
                  "src": "8247:206:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 673,
                    "nodeType": "Block",
                    "src": "9063:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 667,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "9082:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 668,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 661,
                              "src": "9089:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 669,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "9098:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9105:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 666,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              674,
                              734
                            ],
                            "referencedDeclaration": 734,
                            "src": "9073:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9073:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 672,
                        "nodeType": "ExpressionStatement",
                        "src": "9073:37:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 657,
                    "nodeType": "StructuredDocumentation",
                    "src": "8459:525:2",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 674,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8998:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 664,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 659,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9015:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 674,
                        "src": "9007:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9007:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 661,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9030:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 674,
                        "src": "9022:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9022:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9047:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 674,
                        "src": "9039:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9039:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9006:47:2"
                  },
                  "returnParameters": {
                    "id": 665,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9063:0:2"
                  },
                  "scope": 783,
                  "src": "8989:128:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 733,
                    "nodeType": "Block",
                    "src": "10047:334:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 686,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "10061:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10078:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10070:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 687,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10070:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10070:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10061:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 700,
                        "nodeType": "IfStatement",
                        "src": "10057:89:2",
                        "trueBody": {
                          "id": 699,
                          "nodeType": "Block",
                          "src": "10082:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 695,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10132:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 694,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10124:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 693,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10124:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10124:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 692,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 167,
                                  "src": "10103:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10103:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 698,
                              "nodeType": "RevertStatement",
                              "src": "10096:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 701,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "10159:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10178:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10170:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 702,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10170:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10170:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10159:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 715,
                        "nodeType": "IfStatement",
                        "src": "10155:90:2",
                        "trueBody": {
                          "id": 714,
                          "nodeType": "Block",
                          "src": "10182:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 710,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10231:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 709,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10223:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 708,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10223:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 711,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10223:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 707,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 172,
                                  "src": "10203:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10203:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 713,
                              "nodeType": "RevertStatement",
                              "src": "10196:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 716,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 297,
                                "src": "10254:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 719,
                              "indexExpression": {
                                "id": 717,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 677,
                                "src": "10266:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10254:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 720,
                            "indexExpression": {
                              "id": 718,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "10273:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10254:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 721,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "10284:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10254:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 723,
                        "nodeType": "ExpressionStatement",
                        "src": "10254:35:2"
                      },
                      {
                        "condition": {
                          "id": 724,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 683,
                          "src": "10303:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 732,
                        "nodeType": "IfStatement",
                        "src": "10299:76:2",
                        "trueBody": {
                          "id": 731,
                          "nodeType": "Block",
                          "src": "10314:61:2",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 726,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 677,
                                    "src": "10342:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 727,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 679,
                                    "src": "10349:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 728,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 681,
                                    "src": "10358:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 725,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 804,
                                  "src": "10333:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10333:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 730,
                              "nodeType": "EmitStatement",
                              "src": "10328:36:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 675,
                    "nodeType": "StructuredDocumentation",
                    "src": "9123:821:2",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 734,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9958:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9975:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "9967:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9967:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9990:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "9982:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9982:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10007:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "9999:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9999:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "10019:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "10014:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10014:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9966:63:2"
                  },
                  "returnParameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10047:0:2"
                  },
                  "scope": 783,
                  "src": "9949:432:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 781,
                    "nodeType": "Block",
                    "src": "10752:388:2",
                    "statements": [
                      {
                        "assignments": [
                          745
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 745,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10770:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 781,
                            "src": "10762:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 744,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10762:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 750,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 747,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 737,
                              "src": "10799:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 748,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 739,
                              "src": "10806:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 746,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "10789:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10789:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10762:52:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 751,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "10828:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 754,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10853:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 753,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10853:7:2",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 752,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10848:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10848:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10862:3:2",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10848:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10828:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 780,
                        "nodeType": "IfStatement",
                        "src": "10824:310:2",
                        "trueBody": {
                          "id": 779,
                          "nodeType": "Block",
                          "src": "10867:267:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 758,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 745,
                                  "src": "10885:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 759,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 741,
                                  "src": "10904:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10885:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 768,
                              "nodeType": "IfStatement",
                              "src": "10881:130:2",
                              "trueBody": {
                                "id": 767,
                                "nodeType": "Block",
                                "src": "10911:100:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 762,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 739,
                                          "src": "10963:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 763,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 745,
                                          "src": "10972:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 764,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 741,
                                          "src": "10990:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 761,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 162,
                                        "src": "10936:26:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256) pure"
                                        }
                                      },
                                      "id": 765,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10936:60:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 766,
                                    "nodeType": "RevertStatement",
                                    "src": "10929:67:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 778,
                              "nodeType": "UncheckedBlock",
                              "src": "11024:100:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 770,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 737,
                                        "src": "11061:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 771,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 739,
                                        "src": "11068:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 774,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 772,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 745,
                                          "src": "11077:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 773,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 741,
                                          "src": "11096:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11077:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 775,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11103:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 769,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        674,
                                        734
                                      ],
                                      "referencedDeclaration": 734,
                                      "src": "11052:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 776,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11052:57:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 777,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11052:57:2"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 735,
                    "nodeType": "StructuredDocumentation",
                    "src": "10387:271:2",
                    "text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 782,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10672:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 737,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10696:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "10688:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10688:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 739,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10711:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "10703:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 738,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10703:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 741,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10728:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "10720:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10720:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10687:47:2"
                  },
                  "returnParameters": {
                    "id": 743,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10752:0:2"
                  },
                  "scope": 783,
                  "src": "10663:477:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 784,
              "src": "1401:9741:2",
              "usedErrors": [
                143,
                148,
                153,
                162,
                167,
                172
              ],
              "usedEvents": [
                795,
                804
              ]
            }
          ],
          "src": "105:11038:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              861
            ]
          },
          "id": 862,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 785,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 786,
                "nodeType": "StructuredDocumentation",
                "src": "132:70:3",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 861,
              "linearizedBaseContracts": [
                861
              ],
              "name": "IERC20",
              "nameLocation": "213:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 787,
                    "nodeType": "StructuredDocumentation",
                    "src": "226:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 795,
                  "name": "Transfer",
                  "nameLocation": "395:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 789,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "420:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 795,
                        "src": "404:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 788,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 791,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 795,
                        "src": "426:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 790,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 793,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "454:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 795,
                        "src": "446:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 792,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:57:3"
                  },
                  "src": "389:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 796,
                    "nodeType": "StructuredDocumentation",
                    "src": "467:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 804,
                  "name": "Approval",
                  "nameLocation": "626:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 803,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 798,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "651:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 804,
                        "src": "635:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 797,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 800,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "674:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 804,
                        "src": "658:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 799,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 802,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "691:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 804,
                        "src": "683:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 801,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:63:3"
                  },
                  "src": "620:78:3"
                },
                {
                  "documentation": {
                    "id": 805,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:3",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 810,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 806,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:3"
                  },
                  "returnParameters": {
                    "id": 809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 808,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "820:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 807,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:3"
                  },
                  "scope": 861,
                  "src": "774:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 811,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:71:3",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 818,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "920:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 814,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 813,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "938:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 818,
                        "src": "930:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 812,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:3"
                  },
                  "returnParameters": {
                    "id": 817,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 816,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 818,
                        "src": "970:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 815,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:9:3"
                  },
                  "scope": 861,
                  "src": "911:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 819,
                    "nodeType": "StructuredDocumentation",
                    "src": "985:213:3",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 828,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1212:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 824,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 821,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1229:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 828,
                        "src": "1221:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 820,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 823,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1241:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 828,
                        "src": "1233:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 822,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:27:3"
                  },
                  "returnParameters": {
                    "id": 827,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 826,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 828,
                        "src": "1266:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 825,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:6:3"
                  },
                  "scope": 861,
                  "src": "1203:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 829,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 838,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1556:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 831,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1574:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 838,
                        "src": "1566:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 830,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 833,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1589:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 838,
                        "src": "1581:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 832,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:32:3"
                  },
                  "returnParameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 836,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 838,
                        "src": "1621:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1620:9:3"
                  },
                  "scope": 861,
                  "src": "1547:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 839,
                    "nodeType": "StructuredDocumentation",
                    "src": "1636:667:3",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 848,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2317:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 841,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2333:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "2325:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 840,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 843,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "2342:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:32:3"
                  },
                  "returnParameters": {
                    "id": 847,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 846,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "2375:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 845,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:3"
                  },
                  "scope": 861,
                  "src": "2308:73:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 849,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:297:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 860,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2698:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 856,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 851,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2719:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 860,
                        "src": "2711:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 850,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2711:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2733:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 860,
                        "src": "2725:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 855,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2745:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 860,
                        "src": "2737:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 854,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:41:3"
                  },
                  "returnParameters": {
                    "id": 859,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 858,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 860,
                        "src": "2770:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 857,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:6:3"
                  },
                  "scope": 861,
                  "src": "2689:87:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 862,
              "src": "203:2575:3",
              "usedErrors": [],
              "usedEvents": [
                795,
                804
              ]
            }
          ],
          "src": "106:2673:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              861
            ],
            "IERC20Metadata": [
              887
            ]
          },
          "id": 888,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 863,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 865,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 888,
              "sourceUnit": 862,
              "src": "151:37:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 864,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 861,
                    "src": "159:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 867,
                    "name": "IERC20",
                    "nameLocations": [
                      "305:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 861,
                    "src": "305:6:4"
                  },
                  "id": 868,
                  "nodeType": "InheritanceSpecifier",
                  "src": "305:6:4"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 866,
                "nodeType": "StructuredDocumentation",
                "src": "190:86:4",
                "text": " @dev Interface for the optional metadata functions from the ERC20 standard."
              },
              "fullyImplemented": false,
              "id": 887,
              "linearizedBaseContracts": [
                887,
                861
              ],
              "name": "IERC20Metadata",
              "nameLocation": "287:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 869,
                    "nodeType": "StructuredDocumentation",
                    "src": "318:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 874,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "386:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 870,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "390:2:4"
                  },
                  "returnParameters": {
                    "id": 873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 874,
                        "src": "416:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:15:4"
                  },
                  "scope": 887,
                  "src": "377:54:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 875,
                    "nodeType": "StructuredDocumentation",
                    "src": "437:56:4",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 880,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "507:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "513:2:4"
                  },
                  "returnParameters": {
                    "id": 879,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 880,
                        "src": "539:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "539:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "538:15:4"
                  },
                  "scope": 887,
                  "src": "498:56:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 881,
                    "nodeType": "StructuredDocumentation",
                    "src": "560:65:4",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 886,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "639:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 882,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "647:2:4"
                  },
                  "returnParameters": {
                    "id": 885,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 884,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 886,
                        "src": "673:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 883,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "673:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "672:7:4"
                  },
                  "scope": 887,
                  "src": "630:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 888,
              "src": "277:405:4",
              "usedErrors": [],
              "usedEvents": [
                795,
                804
              ]
            }
          ],
          "src": "125:558:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              917
            ]
          },
          "id": 918,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 889,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 890,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 917,
              "linearizedBaseContracts": [
                917
              ],
              "name": "Context",
              "nameLocation": "642:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 898,
                    "nodeType": "Block",
                    "src": "718:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 895,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 894,
                        "id": 897,
                        "nodeType": "Return",
                        "src": "728:17:5"
                      }
                    ]
                  },
                  "id": 899,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 891,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:5"
                  },
                  "returnParameters": {
                    "id": 894,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 893,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 899,
                        "src": "709:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 892,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:5"
                  },
                  "scope": 917,
                  "src": "656:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 907,
                    "nodeType": "Block",
                    "src": "825:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 904,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 903,
                        "id": 906,
                        "nodeType": "Return",
                        "src": "835:15:5"
                      }
                    ]
                  },
                  "id": 908,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 900,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:5"
                  },
                  "returnParameters": {
                    "id": 903,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 902,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "809:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 901,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:5"
                  },
                  "scope": 917,
                  "src": "758:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 915,
                    "nodeType": "Block",
                    "src": "935:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 912,
                        "id": 914,
                        "nodeType": "Return",
                        "src": "945:8:5"
                      }
                    ]
                  },
                  "id": 916,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 909,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 911,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "926:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 910,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:5"
                  },
                  "scope": 917,
                  "src": "863:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 918,
              "src": "624:338:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:5"
        },
        "id": 5
      },
      "contracts/BEATListings.sol": {
        "ast": {
          "absolutePath": "contracts/BEATListings.sol",
          "exportedSymbols": {
            "BEATListings": [
              1851
            ],
            "Context": [
              917
            ],
            "ERC20": [
              783
            ],
            "IERC20": [
              861
            ],
            "IERC20Errors": [
              173
            ],
            "IERC20Metadata": [
              887
            ],
            "Ownable": [
              131
            ],
            "ReentrancyGuard": [
              961
            ]
          },
          "id": 1852,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 919,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 920,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1852,
              "sourceUnit": 132,
              "src": "58:52:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 921,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1852,
              "sourceUnit": 784,
              "src": "111:55:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 922,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1852,
              "sourceUnit": 862,
              "src": "167:56:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 923,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1852,
              "sourceUnit": 888,
              "src": "224:75:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 924,
                "nodeType": "StructuredDocumentation",
                "src": "301:738:6",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from ReentrancyGuard will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single nonReentrant guard, functions marked as\n nonReentrant may not call one another. This can be worked around by making\n those functions private, and then adding external nonReentrant entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 961,
              "linearizedBaseContracts": [
                961
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1058:15:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 927,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nameLocation": "1853:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "1828:41:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1868:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 930,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nameLocation": "1900:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "1875:37:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1875:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1911:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1935:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "1919:23:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 939,
                    "nodeType": "Block",
                    "src": "1963:39:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 935,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "1973:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 936,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "1983:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1973:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 938,
                        "nodeType": "ExpressionStatement",
                        "src": "1973:22:6"
                      }
                    ]
                  },
                  "id": 940,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 933,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1960:2:6"
                  },
                  "returnParameters": {
                    "id": 934,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1963:0:6"
                  },
                  "scope": 961,
                  "src": "1949:53:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 959,
                    "nodeType": "Block",
                    "src": "2393:421:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 944,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 932,
                                "src": "2482:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 945,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 930,
                                "src": "2493:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2482:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2503:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 943,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2474:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2474:63:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 949,
                        "nodeType": "ExpressionStatement",
                        "src": "2474:63:6"
                      },
                      {
                        "expression": {
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 950,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "2612:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 951,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "2622:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2612:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 953,
                        "nodeType": "ExpressionStatement",
                        "src": "2612:18:6"
                      },
                      {
                        "id": 954,
                        "nodeType": "PlaceholderStatement",
                        "src": "2641:1:6"
                      },
                      {
                        "expression": {
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 955,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "2785:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 956,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "2795:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2785:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 958,
                        "nodeType": "ExpressionStatement",
                        "src": "2785:22:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 941,
                    "nodeType": "StructuredDocumentation",
                    "src": "2008:356:6",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a nonReentrant function from another nonReentrant\n function is not supported. It is possible to prevent this from happening\n by making the nonReentrant function external, and make it call a\n private function that does the actual work."
                  },
                  "id": 960,
                  "name": "nonReentrant",
                  "nameLocation": "2378:12:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 942,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2390:2:6"
                  },
                  "src": "2369:445:6",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1852,
              "src": "1040:1776:6",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 963,
                    "name": "Ownable",
                    "nameLocations": [
                      "2934:7:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 131,
                    "src": "2934:7:6"
                  },
                  "id": 964,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2934:7:6"
                },
                {
                  "baseName": {
                    "id": 965,
                    "name": "ERC20",
                    "nameLocations": [
                      "2943:5:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 783,
                    "src": "2943:5:6"
                  },
                  "id": 966,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2943:5:6"
                },
                {
                  "baseName": {
                    "id": 967,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "2950:15:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 961,
                    "src": "2950:15:6"
                  },
                  "id": 968,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2950:15:6"
                }
              ],
              "canonicalName": "BEATListings",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 962,
                "nodeType": "StructuredDocumentation",
                "src": "2818:91:6",
                "text": "@title A contract for holding a fundraising project\n @author Arrnaya (t.me/arrnaya)"
              },
              "fullyImplemented": true,
              "id": 1851,
              "linearizedBaseContracts": [
                1851,
                961,
                783,
                173,
                887,
                861,
                131,
                917
              ],
              "name": "BEATListings",
              "nameLocation": "2918:12:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "992642e5",
                  "id": 971,
                  "mutability": "mutable",
                  "name": "stableCoin",
                  "nameLocation": "2986:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "2972:24:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$861",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 970,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 969,
                      "name": "IERC20",
                      "nameLocations": [
                        "2972:6:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 861,
                      "src": "2972:6:6"
                    },
                    "referencedDeclaration": 861,
                    "src": "2972:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$861",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "26232a2e",
                  "id": 973,
                  "mutability": "mutable",
                  "name": "platformFee",
                  "nameLocation": "3018:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3003:26:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3003:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fa2af9da",
                  "id": 975,
                  "mutability": "mutable",
                  "name": "platformWallet",
                  "nameLocation": "3050:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3035:29:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3035:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "94febbf3",
                  "id": 977,
                  "mutability": "mutable",
                  "name": "projectStartTime",
                  "nameLocation": "3086:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3071:31:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "15643554",
                  "id": 979,
                  "mutability": "mutable",
                  "name": "projectEndTime",
                  "nameLocation": "3123:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3108:29:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9e7b08d5",
                  "id": 981,
                  "mutability": "mutable",
                  "name": "fundraisingGoal",
                  "nameLocation": "3158:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3143:30:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3143:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c5c4744c",
                  "id": 983,
                  "mutability": "mutable",
                  "name": "totalRaised",
                  "nameLocation": "3194:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3179:26:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3179:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "73aff5af",
                  "id": 985,
                  "mutability": "mutable",
                  "name": "totalSharesSold",
                  "nameLocation": "3226:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3211:30:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3211:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "10642509",
                  "id": 987,
                  "mutability": "mutable",
                  "name": "projectAPY",
                  "nameLocation": "3262:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3247:25:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "43d25e82",
                  "id": 989,
                  "mutability": "mutable",
                  "name": "APYStartTime",
                  "nameLocation": "3325:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3310:27:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3310:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c0daee49",
                  "id": 991,
                  "mutability": "mutable",
                  "name": "refundableShares",
                  "nameLocation": "3411:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3396:31:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "26493848",
                  "id": 993,
                  "mutability": "mutable",
                  "name": "totalAmountRefunded",
                  "nameLocation": "3448:19:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3433:34:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7d549e99",
                  "id": 995,
                  "mutability": "mutable",
                  "name": "totalTokensMinted",
                  "nameLocation": "3488:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3473:32:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3473:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "95ee1221",
                  "id": 997,
                  "mutability": "mutable",
                  "name": "isCancelled",
                  "nameLocation": "3524:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3512:23:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3512:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7b352962",
                  "id": 999,
                  "mutability": "mutable",
                  "name": "isFinished",
                  "nameLocation": "3553:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3541:22:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3541:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8d4e4083",
                  "id": 1001,
                  "mutability": "mutable",
                  "name": "isFinalized",
                  "nameLocation": "3581:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3569:23:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3569:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e7afeeed",
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "addressToContributions",
                  "nameLocation": "3634:22:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3599:57:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1004,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1002,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3607:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3599:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1003,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3618:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5d97c1a0",
                  "id": 1009,
                  "mutability": "mutable",
                  "name": "investorToLastClaimTime",
                  "nameLocation": "3697:23:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3662:58:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1008,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1006,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3670:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3662:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1007,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3681:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cfb2b5e9",
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "investorClaimCount",
                  "nameLocation": "3761:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3726:53:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1012,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1010,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3734:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3726:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1011,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3745:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c16a0383",
                  "id": 1017,
                  "mutability": "mutable",
                  "name": "investorToShare",
                  "nameLocation": "3820:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3785:50:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1016,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1014,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3793:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3785:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1015,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3804:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "abd6192c",
                  "id": 1021,
                  "mutability": "mutable",
                  "name": "addressToMintedTokens",
                  "nameLocation": "3876:21:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3841:56:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1020,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1018,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3849:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3841:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1019,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3860:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "07e87512",
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "contributionAmnt",
                  "nameLocation": "3919:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3904:31:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3904:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ca34da20",
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "maxAllowedSharesPerWallet",
                  "nameLocation": "3956:25:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "3941:40:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3941:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "71be8766c1bd9bb33623f518aecc1d98612c75b596f4a0c38408f72239ef4e60",
                  "id": 1033,
                  "name": "Contribution",
                  "nameLocation": "3994:12:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1032,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1027,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4032:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1033,
                        "src": "4016:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1026,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4016:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1029,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "project",
                        "nameLocation": "4062:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1033,
                        "src": "4046:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1028,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4046:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1031,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4087:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1033,
                        "src": "4079:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1030,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4079:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4006:93:6"
                  },
                  "src": "3988:112:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "649fde579b8ba49bd4fbcb330614cb075b8d53c352c5adc49161b6f654e400a2",
                  "id": 1039,
                  "name": "SharesClaimed",
                  "nameLocation": "4111:13:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1038,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1035,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4133:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "4125:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4125:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1037,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4145:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "4137:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4137:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4124:28:6"
                  },
                  "src": "4105:48:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f40cc8c1a1d17359049ba500cfc894596a692cffc9d03943cd92ec2e159cf6ae",
                  "id": 1047,
                  "name": "Refund",
                  "nameLocation": "4164:6:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1046,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1041,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4187:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "4171:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4171:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1043,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "project",
                        "nameLocation": "4207:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "4191:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4191:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1045,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4224:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "4216:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4216:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4170:61:6"
                  },
                  "src": "4158:74:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb",
                  "id": 1055,
                  "name": "Withdraw",
                  "nameLocation": "4243:8:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1054,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4268:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1055,
                        "src": "4252:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4252:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1051,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "project",
                        "nameLocation": "4288:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1055,
                        "src": "4272:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4272:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1053,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4305:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1055,
                        "src": "4297:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1052,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4297:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4251:61:6"
                  },
                  "src": "4237:76:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9d7c6bbe8ca6f2433812f43ed204a1d7ea4ae548db3a3d6e83f8d1ce67e31a53",
                  "id": 1059,
                  "name": "ListingFinalized",
                  "nameLocation": "4324:16:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1058,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1057,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "4349:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1059,
                        "src": "4341:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4341:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4340:19:6"
                  },
                  "src": "4318:42:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d6a45326680045c471b7b30597d25e52e420f1e7535046ca9ad2944a1bb53487",
                  "id": 1065,
                  "name": "ReturnClaimed",
                  "nameLocation": "4371:13:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1061,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "investor",
                        "nameLocation": "4393:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "4385:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1060,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4385:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1063,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "claimedAmount",
                        "nameLocation": "4411:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "4403:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4403:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4384:41:6"
                  },
                  "src": "4365:61:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5bd597f43e1aaceef3ddd1a4ef7f8c1cd0898cab692b0988cd731bbd40920fcb",
                  "id": 1069,
                  "name": "AnnualAPRDeposited",
                  "nameLocation": "4437:18:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1068,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1067,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "depositAmount",
                        "nameLocation": "4464:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1069,
                        "src": "4456:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1066,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4456:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4455:23:6"
                  },
                  "src": "4431:48:6"
                },
                {
                  "body": {
                    "id": 1078,
                    "nodeType": "Block",
                    "src": "4605:82:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4623:12:6",
                              "subExpression": {
                                "id": 1072,
                                "name": "isCancelled",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "4624:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f6a6563743a2070726f6a6563742069732063616e63656c6c6564",
                              "id": 1074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4637:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_108391721ee10e9bad0554ba8a8f3c723d8fa558c09aabaa13f175d60d06895b",
                                "typeString": "literal_string \"Project: project is cancelled\""
                              },
                              "value": "Project: project is cancelled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_108391721ee10e9bad0554ba8a8f3c723d8fa558c09aabaa13f175d60d06895b",
                                "typeString": "literal_string \"Project: project is cancelled\""
                              }
                            ],
                            "id": 1071,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4615:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4615:54:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1076,
                        "nodeType": "ExpressionStatement",
                        "src": "4615:54:6"
                      },
                      {
                        "id": 1077,
                        "nodeType": "PlaceholderStatement",
                        "src": "4679:1:6"
                      }
                    ]
                  },
                  "id": 1079,
                  "name": "isNotCancelledProject",
                  "nameLocation": "4581:21:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4602:2:6"
                  },
                  "src": "4572:115:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1095,
                    "nodeType": "Block",
                    "src": "4724:234:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1082,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4755:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4761:9:6",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4755:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1084,
                                  "name": "projectStartTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 977,
                                  "src": "4774:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4755:35:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1086,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4810:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1087,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4816:9:6",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4810:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1088,
                                  "name": "projectEndTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 979,
                                  "src": "4828:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4810:32:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4755:87:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f6a6563743a2045697468657220697420686173206e6f742073746172746564206f72207468652074696d65206c696d697420666f722070726f6a6563742065787069726564",
                              "id": 1091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4856:74:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_398a754eeaf34eb09768e984cc014f1ffc2876b6e498f8eb9a0f28b6ff229ba1",
                                "typeString": "literal_string \"Project: Either it has not started or the time limit for project expired\""
                              },
                              "value": "Project: Either it has not started or the time limit for project expired"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_398a754eeaf34eb09768e984cc014f1ffc2876b6e498f8eb9a0f28b6ff229ba1",
                                "typeString": "literal_string \"Project: Either it has not started or the time limit for project expired\""
                              }
                            ],
                            "id": 1081,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4734:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4734:206:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1093,
                        "nodeType": "ExpressionStatement",
                        "src": "4734:206:6"
                      },
                      {
                        "id": 1094,
                        "nodeType": "PlaceholderStatement",
                        "src": "4950:1:6"
                      }
                    ]
                  },
                  "id": 1096,
                  "name": "isNotExpiredProject",
                  "nameLocation": "4702:19:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4721:2:6"
                  },
                  "src": "4693:265:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1105,
                    "nodeType": "Block",
                    "src": "4996:81:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5014:11:6",
                              "subExpression": {
                                "id": 1099,
                                "name": "isFinished",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 999,
                                "src": "5015:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f6a6563743a2070726f6a656374206861732066696e6973686564",
                              "id": 1101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5027:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_78a04e62820ef7d9966740f379f88c001167d6b8c271bb6a6aefbe20ab705c20",
                                "typeString": "literal_string \"Project: project has finished\""
                              },
                              "value": "Project: project has finished"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_78a04e62820ef7d9966740f379f88c001167d6b8c271bb6a6aefbe20ab705c20",
                                "typeString": "literal_string \"Project: project has finished\""
                              }
                            ],
                            "id": 1098,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5006:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5006:53:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1103,
                        "nodeType": "ExpressionStatement",
                        "src": "5006:53:6"
                      },
                      {
                        "id": 1104,
                        "nodeType": "PlaceholderStatement",
                        "src": "5069:1:6"
                      }
                    ]
                  },
                  "id": 1106,
                  "name": "isNotFinishedProject",
                  "nameLocation": "4973:20:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1097,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4993:2:6"
                  },
                  "src": "4964:113:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1199,
                    "nodeType": "Block",
                    "src": "6091:638:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1138,
                                "name": "_projectEndTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1122,
                                "src": "6122:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 1139,
                                "name": "_projectStartTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1120,
                                "src": "6140:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6122:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "456e642074696d652063616e2774206265206265666f72652073746172742074696d65",
                              "id": 1141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6171:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f4e590379f0a37ec17a3b1930fd6c3b48efbea0ecce41aca8776cc614a29878d",
                                "typeString": "literal_string \"End time can't be before start time\""
                              },
                              "value": "End time can't be before start time"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f4e590379f0a37ec17a3b1930fd6c3b48efbea0ecce41aca8776cc614a29878d",
                                "typeString": "literal_string \"End time can't be before start time\""
                              }
                            ],
                            "id": 1137,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6101:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6101:117:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1143,
                        "nodeType": "ExpressionStatement",
                        "src": "6101:117:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1147,
                                    "name": "_stableCoin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1110,
                                    "src": "6244:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$861",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$861",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 1146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6236:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1145,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6236:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6236:20:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1151,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6268:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6260:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1149,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6260:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1152,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6260:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6236:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e277420736574207a65726f2061646472657373",
                              "id": 1154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6272:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_617f1f7d3716b74b052acf37f17eb17554e6bd064bb0afc56043858632e11c41",
                                "typeString": "literal_string \"Can't set zero address\""
                              },
                              "value": "Can't set zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_617f1f7d3716b74b052acf37f17eb17554e6bd064bb0afc56043858632e11c41",
                                "typeString": "literal_string \"Can't set zero address\""
                              }
                            ],
                            "id": 1144,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6228:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6228:69:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1156,
                        "nodeType": "ExpressionStatement",
                        "src": "6228:69:6"
                      },
                      {
                        "expression": {
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1157,
                            "name": "stableCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "6307:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$861",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1158,
                            "name": "_stableCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1110,
                            "src": "6320:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$861",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "6307:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$861",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1160,
                        "nodeType": "ExpressionStatement",
                        "src": "6307:24:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1162,
                              "name": "_projectOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1124,
                              "src": "6359:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1161,
                            "name": "transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110,
                            "src": "6341:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6341:32:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1164,
                        "nodeType": "ExpressionStatement",
                        "src": "6341:32:6"
                      },
                      {
                        "expression": {
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1165,
                            "name": "fundraisingGoal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 981,
                            "src": "6383:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1166,
                            "name": "_fundraisingGoal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1116,
                            "src": "6401:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6383:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1168,
                        "nodeType": "ExpressionStatement",
                        "src": "6383:34:6"
                      },
                      {
                        "expression": {
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1169,
                            "name": "contributionAmnt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1023,
                            "src": "6427:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1170,
                            "name": "_contributionAmnt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "6446:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6427:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1172,
                        "nodeType": "ExpressionStatement",
                        "src": "6427:36:6"
                      },
                      {
                        "expression": {
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1173,
                            "name": "maxAllowedSharesPerWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "6473:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1174,
                              "name": "_fundraisingGoal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1116,
                              "src": "6501:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 1175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6520:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "6501:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6473:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1178,
                        "nodeType": "ExpressionStatement",
                        "src": "6473:49:6"
                      },
                      {
                        "expression": {
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1179,
                            "name": "projectStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 977,
                            "src": "6532:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1180,
                            "name": "_projectStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "6551:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6532:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1182,
                        "nodeType": "ExpressionStatement",
                        "src": "6532:36:6"
                      },
                      {
                        "expression": {
                          "id": 1185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1183,
                            "name": "projectEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 979,
                            "src": "6578:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1184,
                            "name": "_projectEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "6595:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6578:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1186,
                        "nodeType": "ExpressionStatement",
                        "src": "6578:32:6"
                      },
                      {
                        "expression": {
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1187,
                            "name": "platformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 973,
                            "src": "6620:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1188,
                            "name": "_platformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1126,
                            "src": "6634:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6620:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1190,
                        "nodeType": "ExpressionStatement",
                        "src": "6620:26:6"
                      },
                      {
                        "expression": {
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1191,
                            "name": "platformWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 975,
                            "src": "6656:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1192,
                            "name": "_platformWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "6673:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6656:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1194,
                        "nodeType": "ExpressionStatement",
                        "src": "6656:32:6"
                      },
                      {
                        "expression": {
                          "id": 1197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1195,
                            "name": "projectAPY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 987,
                            "src": "6698:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1196,
                            "name": "_projectAPY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "6711:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6698:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1198,
                        "nodeType": "ExpressionStatement",
                        "src": "6698:24:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1107,
                    "nodeType": "StructuredDocumentation",
                    "src": "5083:615:6",
                    "text": "@notice Instantiates a new fundraising project and instantly transfers ownership\n to the _projectOwner address provided\n @param _name The name of the fundraising project to be used in the NFT badges\n given to contributors of >= 1 ether\n @param _symbol The NFT token symbol\n @param _fundraisingGoal The total ether goal of the new fundraising project\n @param _projectOwner The true owner of the project (and which instantly gains\n ownership on completion of instantiating the contract)\n @dev The project expiration time will always be 30 days from creation"
                  },
                  "id": 1200,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1133,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "6075:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 1134,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "6082:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 1135,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1132,
                        "name": "ERC20",
                        "nameLocations": [
                          "6069:5:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 783,
                        "src": "6069:5:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6069:21:6"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1110,
                        "mutability": "mutable",
                        "name": "_stableCoin",
                        "nameLocation": "5731:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "5724:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$861",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1109,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1108,
                            "name": "IERC20",
                            "nameLocations": [
                              "5724:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 861,
                            "src": "5724:6:6"
                          },
                          "referencedDeclaration": 861,
                          "src": "5724:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$861",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1112,
                        "mutability": "mutable",
                        "name": "_name",
                        "nameLocation": "5766:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "5752:19:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5752:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "_symbol",
                        "nameLocation": "5795:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "5781:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5781:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1116,
                        "mutability": "mutable",
                        "name": "_fundraisingGoal",
                        "nameLocation": "5820:16:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "5812:24:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1115,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5812:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1118,
                        "mutability": "mutable",
                        "name": "_contributionAmnt",
                        "nameLocation": "5854:17:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "5846:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1117,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5846:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1120,
                        "mutability": "mutable",
                        "name": "_projectStartTime",
                        "nameLocation": "5889:17:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "5881:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5881:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "_projectEndTime",
                        "nameLocation": "5924:15:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "5916:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5916:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1124,
                        "mutability": "mutable",
                        "name": "_projectOwner",
                        "nameLocation": "5957:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "5949:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5949:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1126,
                        "mutability": "mutable",
                        "name": "_platformFee",
                        "nameLocation": "5988:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "5980:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1125,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5980:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1128,
                        "mutability": "mutable",
                        "name": "_platformWallet",
                        "nameLocation": "6018:15:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "6010:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1127,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6010:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1130,
                        "mutability": "mutable",
                        "name": "_projectAPY",
                        "nameLocation": "6051:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "6043:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1129,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6043:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5714:354:6"
                  },
                  "returnParameters": {
                    "id": 1136,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6091:0:6"
                  },
                  "scope": 1851,
                  "src": "5703:1026:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1203,
                    "nodeType": "Block",
                    "src": "6779:2:6",
                    "statements": []
                  },
                  "id": 1204,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6759:2:6"
                  },
                  "returnParameters": {
                    "id": 1202,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6779:0:6"
                  },
                  "scope": 1851,
                  "src": "6752:29:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1338,
                    "nodeType": "Block",
                    "src": "7320:1557:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1219,
                                  "name": "_numberOfShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1207,
                                  "src": "7351:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1220,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7369:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7351:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1222,
                                  "name": "_numberOfShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1207,
                                  "src": "7374:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1223,
                                  "name": "maxAllowedSharesPerWallet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1025,
                                  "src": "7393:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7374:44:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7351:67:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5368617265732063616e2774206265206c657373207468616e207a65726f20616e64206d6f7265207468616e206d617820616c6c6f776564",
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7432:58:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9af13a862102b50d3aa2ca92d9f3354d30b87145db0df5ce2788f39d9ff967f4",
                                "typeString": "literal_string \"Shares can't be less than zero and more than max allowed\""
                              },
                              "value": "Shares can't be less than zero and more than max allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9af13a862102b50d3aa2ca92d9f3354d30b87145db0df5ce2788f39d9ff967f4",
                                "typeString": "literal_string \"Shares can't be less than zero and more than max allowed\""
                              }
                            ],
                            "id": 1218,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7330:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7330:170:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1228,
                        "nodeType": "ExpressionStatement",
                        "src": "7330:170:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1232,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1230,
                                        "name": "contributionAmnt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1023,
                                        "src": "7532:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1231,
                                        "name": "_numberOfShares",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1207,
                                        "src": "7551:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7532:34:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1233,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7531:36:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1238,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "7615:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BEATListings_$1851",
                                            "typeString": "contract BEATListings"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_BEATListings_$1851",
                                            "typeString": "contract BEATListings"
                                          }
                                        ],
                                        "id": 1237,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7607:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1236,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7607:7:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1239,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7607:13:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1234,
                                      "name": "stableCoin",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 971,
                                      "src": "7586:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$861",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7597:9:6",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 818,
                                    "src": "7586:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1240,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7586:35:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7531:90:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1242,
                                "name": "fundraisingGoal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 981,
                                "src": "7641:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7531:125:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "457863656564696e6720746f74616c2066756e642072616973696e6720676f616c21",
                              "id": 1244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7670:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4b16fb38ac6f5f5b9f370eabc0e0834b0dc65a806b836f85a2bbac95ca0ec49a",
                                "typeString": "literal_string \"Exceeding total fund raising goal!\""
                              },
                              "value": "Exceeding total fund raising goal!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4b16fb38ac6f5f5b9f370eabc0e0834b0dc65a806b836f85a2bbac95ca0ec49a",
                                "typeString": "literal_string \"Exceeding total fund raising goal!\""
                              }
                            ],
                            "id": 1229,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7510:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7510:206:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1246,
                        "nodeType": "ExpressionStatement",
                        "src": "7510:206:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1248,
                                    "name": "investorToShare",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1017,
                                    "src": "7747:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1251,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1249,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7763:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1250,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7767:6:6",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7763:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7747:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1252,
                                  "name": "_numberOfShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1207,
                                  "src": "7777:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7747:45:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1254,
                                "name": "maxAllowedSharesPerWallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1025,
                                "src": "7812:25:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7747:90:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e277420627579206d6f7265207468616e20746865206d617820736861726520616c6c6f77656421",
                              "id": 1256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7851:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8bf738d02a1977ab94fe6c8bf66f5fb808cfc100a9985eca7b8bbca31642fedb",
                                "typeString": "literal_string \"Can't buy more than the max share allowed!\""
                              },
                              "value": "Can't buy more than the max share allowed!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8bf738d02a1977ab94fe6c8bf66f5fb808cfc100a9985eca7b8bbca31642fedb",
                                "typeString": "literal_string \"Can't buy more than the max share allowed!\""
                              }
                            ],
                            "id": 1247,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7726:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7726:179:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1258,
                        "nodeType": "ExpressionStatement",
                        "src": "7726:179:6"
                      },
                      {
                        "assignments": [
                          1260
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1260,
                            "mutability": "mutable",
                            "name": "_finalContributionAmnt",
                            "nameLocation": "7924:22:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1338,
                            "src": "7916:30:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1259,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7916:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1264,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1261,
                            "name": "contributionAmnt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1023,
                            "src": "7949:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1262,
                            "name": "_numberOfShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "7968:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7949:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7916:67:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1265,
                            "name": "_numberOfShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "7998:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1266,
                            "name": "maxAllowedSharesPerWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "8017:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7998:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1275,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1273,
                                      "name": "contributionAmnt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1023,
                                      "src": "8110:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1274,
                                      "name": "_numberOfShares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1207,
                                      "src": "8129:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8110:34:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1276,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8109:36:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1281,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8193:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BEATListings_$1851",
                                          "typeString": "contract BEATListings"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BEATListings_$1851",
                                          "typeString": "contract BEATListings"
                                        }
                                      ],
                                      "id": 1280,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8185:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1279,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8185:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1282,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8185:13:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1277,
                                    "name": "stableCoin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 971,
                                    "src": "8164:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$861",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8175:9:6",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 818,
                                  "src": "8164:20:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 1283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8164:35:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8109:90:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 1285,
                              "name": "fundraisingGoal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 981,
                              "src": "8215:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8109:121:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1292,
                          "nodeType": "IfStatement",
                          "src": "8092:191:6",
                          "trueBody": {
                            "id": 1291,
                            "nodeType": "Block",
                            "src": "8241:42:6",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1287,
                                    "name": "isFinished",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 999,
                                    "src": "8255:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "74727565",
                                    "id": 1288,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8268:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  "src": "8255:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1290,
                                "nodeType": "ExpressionStatement",
                                "src": "8255:17:6"
                              }
                            ]
                          }
                        },
                        "id": 1293,
                        "nodeType": "IfStatement",
                        "src": "7994:289:6",
                        "trueBody": {
                          "id": 1272,
                          "nodeType": "Block",
                          "src": "8044:42:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1268,
                                  "name": "isFinished",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 999,
                                  "src": "8058:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8071:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "8058:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1271,
                              "nodeType": "ExpressionStatement",
                              "src": "8058:17:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1297,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8330:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8334:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8330:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1301,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8362:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                ],
                                "id": 1300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8354:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1299,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8354:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8354:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1303,
                              "name": "_finalContributionAmnt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1260,
                              "src": "8381:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1294,
                              "name": "stableCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "8293:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$861",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8304:12:6",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 860,
                            "src": "8293:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8293:120:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1305,
                        "nodeType": "ExpressionStatement",
                        "src": "8293:120:6"
                      },
                      {
                        "expression": {
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1306,
                              "name": "addressToContributions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "8482:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1309,
                            "indexExpression": {
                              "expression": {
                                "id": 1307,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8505:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8509:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8505:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8482:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1310,
                            "name": "_finalContributionAmnt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "8520:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8482:60:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1312,
                        "nodeType": "ExpressionStatement",
                        "src": "8482:60:6"
                      },
                      {
                        "expression": {
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1313,
                              "name": "investorToShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1017,
                              "src": "8602:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1316,
                            "indexExpression": {
                              "expression": {
                                "id": 1314,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8618:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8622:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8618:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8602:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1317,
                            "name": "_numberOfShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "8633:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8602:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1319,
                        "nodeType": "ExpressionStatement",
                        "src": "8602:46:6"
                      },
                      {
                        "expression": {
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1320,
                            "name": "totalRaised",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 983,
                            "src": "8710:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1321,
                            "name": "_finalContributionAmnt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "8725:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8710:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1323,
                        "nodeType": "ExpressionStatement",
                        "src": "8710:37:6"
                      },
                      {
                        "expression": {
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1324,
                            "name": "totalSharesSold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "8757:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1325,
                            "name": "_numberOfShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "8776:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8757:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1327,
                        "nodeType": "ExpressionStatement",
                        "src": "8757:34:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1329,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8820:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8824:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8820:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1333,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8840:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                ],
                                "id": 1332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8832:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1331,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8832:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8832:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1335,
                              "name": "_finalContributionAmnt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1260,
                              "src": "8847:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1328,
                            "name": "Contribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "8807:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8807:63:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1337,
                        "nodeType": "EmitStatement",
                        "src": "8802:68:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1205,
                    "nodeType": "StructuredDocumentation",
                    "src": "6787:352:6",
                    "text": "@notice Allows any address to contribute to the contract if the project has not\n been cancelled, is not expired, and has not already been finished successfully\n @dev If an address' contributions put the contract over or equal the fundraising limit,\n it's a valid contribution but the fundraising project is finished immediately"
                  },
                  "functionSelector": "ba53c283",
                  "id": 1339,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1210,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1209,
                        "name": "isNotCancelledProject",
                        "nameLocations": [
                          "7216:21:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1079,
                        "src": "7216:21:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7216:21:6"
                    },
                    {
                      "id": 1212,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1211,
                        "name": "isNotExpiredProject",
                        "nameLocations": [
                          "7246:19:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1096,
                        "src": "7246:19:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7246:19:6"
                    },
                    {
                      "id": 1214,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1213,
                        "name": "isNotFinishedProject",
                        "nameLocations": [
                          "7274:20:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1106,
                        "src": "7274:20:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7274:20:6"
                    },
                    {
                      "id": 1216,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1215,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "7303:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 960,
                        "src": "7303:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7303:12:6"
                    }
                  ],
                  "name": "_participate",
                  "nameLocation": "7153:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1207,
                        "mutability": "mutable",
                        "name": "_numberOfShares",
                        "nameLocation": "7174:15:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1339,
                        "src": "7166:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7166:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7165:25:6"
                  },
                  "returnParameters": {
                    "id": 1217,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7320:0:6"
                  },
                  "scope": 1851,
                  "src": "7144:1733:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1391,
                    "nodeType": "Block",
                    "src": "8952:588:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1347,
                              "name": "isFinalized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1001,
                              "src": "8970:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f6a6563743a2053616c65206973206e6f742066696e69736865642079657421",
                              "id": 1348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8983:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b5a013017efe5d2f9b09472663c19e7d04de0fd426c1054b74c29f7ef175d683",
                                "typeString": "literal_string \"Project: Sale is not finished yet!\""
                              },
                              "value": "Project: Sale is not finished yet!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b5a013017efe5d2f9b09472663c19e7d04de0fd426c1054b74c29f7ef175d683",
                                "typeString": "literal_string \"Project: Sale is not finished yet!\""
                              }
                            ],
                            "id": 1346,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8962:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8962:58:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1350,
                        "nodeType": "ExpressionStatement",
                        "src": "8962:58:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1352,
                                  "name": "addressToContributions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "9051:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1355,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1353,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9074:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9078:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9074:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9051:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9088:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9051:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f6a6563743a206164647265737320686173206e6f20636f6e747269627574696f6e73",
                              "id": 1358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9103:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d2fa5d737c6a47e9e2811e49b27e1de09b9a7e7d5458047b369e2ec3f12813e9",
                                "typeString": "literal_string \"Project: address has no contributions\""
                              },
                              "value": "Project: address has no contributions"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d2fa5d737c6a47e9e2811e49b27e1de09b9a7e7d5458047b369e2ec3f12813e9",
                                "typeString": "literal_string \"Project: address has no contributions\""
                              }
                            ],
                            "id": 1351,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9030:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9030:122:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1360,
                        "nodeType": "ExpressionStatement",
                        "src": "9030:122:6"
                      },
                      {
                        "assignments": [
                          1362
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1362,
                            "mutability": "mutable",
                            "name": "tokensAllocated",
                            "nameLocation": "9220:15:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1391,
                            "src": "9212:23:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1361,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9212:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1367,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1363,
                            "name": "investorToShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1017,
                            "src": "9238:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1366,
                          "indexExpression": {
                            "expression": {
                              "id": 1364,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9254:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9258:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9254:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9238:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9212:53:6"
                      },
                      {
                        "expression": {
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1368,
                              "name": "addressToMintedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "9331:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1371,
                            "indexExpression": {
                              "expression": {
                                "id": 1369,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9353:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9357:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9353:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9331:33:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1372,
                            "name": "tokensAllocated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "9368:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9331:52:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1374,
                        "nodeType": "ExpressionStatement",
                        "src": "9331:52:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1376,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9400:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9404:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9400:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1378,
                              "name": "tokensAllocated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1362,
                              "src": "9412:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1375,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "9394:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9394:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1380,
                        "nodeType": "ExpressionStatement",
                        "src": "9394:34:6"
                      },
                      {
                        "expression": {
                          "id": 1383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1381,
                            "name": "totalTokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "9439:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1382,
                            "name": "tokensAllocated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "9460:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9439:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1384,
                        "nodeType": "ExpressionStatement",
                        "src": "9439:36:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1386,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9505:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9509:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9505:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1388,
                              "name": "tokensAllocated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1362,
                              "src": "9517:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1385,
                            "name": "SharesClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "9491:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9491:42:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1390,
                        "nodeType": "EmitStatement",
                        "src": "9486:47:6"
                      }
                    ]
                  },
                  "functionSelector": "c2ced7e5",
                  "id": 1392,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1342,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1341,
                        "name": "isNotCancelledProject",
                        "nameLocations": [
                          "8917:21:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1079,
                        "src": "8917:21:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8917:21:6"
                    },
                    {
                      "id": 1344,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1343,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "8939:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 960,
                        "src": "8939:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8939:12:6"
                    }
                  ],
                  "name": "_claim_Shares",
                  "nameLocation": "8892:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1340,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8905:2:6"
                  },
                  "returnParameters": {
                    "id": 1345,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8952:0:6"
                  },
                  "scope": 1851,
                  "src": "8883:657:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1412,
                    "nodeType": "Block",
                    "src": "9869:79:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1404,
                            "name": "isCancelled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "9879:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9893:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9879:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1407,
                        "nodeType": "ExpressionStatement",
                        "src": "9879:18:6"
                      },
                      {
                        "expression": {
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1408,
                            "name": "refundableShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "9907:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1409,
                            "name": "totalSharesSold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "9926:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9907:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1411,
                        "nodeType": "ExpressionStatement",
                        "src": "9907:34:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1393,
                    "nodeType": "StructuredDocumentation",
                    "src": "9546:166:6",
                    "text": "@notice Allows the owner of the project to cancel it if the project has not\n been cancelled, is not expired, and has not already been finished successfully"
                  },
                  "functionSelector": "6d1e6516",
                  "id": 1413,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1396,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1395,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "9768:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "9768:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9768:9:6"
                    },
                    {
                      "id": 1398,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1397,
                        "name": "isNotCancelledProject",
                        "nameLocations": [
                          "9786:21:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1079,
                        "src": "9786:21:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9786:21:6"
                    },
                    {
                      "id": 1400,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1399,
                        "name": "isNotExpiredProject",
                        "nameLocations": [
                          "9816:19:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1096,
                        "src": "9816:19:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9816:19:6"
                    },
                    {
                      "id": 1402,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1401,
                        "name": "isNotFinishedProject",
                        "nameLocations": [
                          "9844:20:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1106,
                        "src": "9844:20:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9844:20:6"
                    }
                  ],
                  "name": "cancel_Project",
                  "nameLocation": "9726:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1394,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9740:2:6"
                  },
                  "returnParameters": {
                    "id": 1403,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9869:0:6"
                  },
                  "scope": 1851,
                  "src": "9717:231:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1520,
                    "nodeType": "Block",
                    "src": "10148:979:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1420,
                                "name": "isCancelled",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "10179:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1427,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1424,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1421,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "10195:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1422,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "10201:9:6",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "10195:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "id": 1423,
                                        "name": "projectEndTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 979,
                                        "src": "10214:14:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10195:33:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "id": 1426,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "10232:11:6",
                                      "subExpression": {
                                        "id": 1425,
                                        "name": "isFinished",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 999,
                                        "src": "10233:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "10195:48:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 1428,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "10194:50:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10179:65:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f6a6563743a2063616e6e6f7420726566756e642070726f6a6563742066756e6473",
                              "id": 1430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10258:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e8773710af496491c3fb52b7198caa95b93733036628628a1300f4729cf4f739",
                                "typeString": "literal_string \"Project: cannot refund project funds\""
                              },
                              "value": "Project: cannot refund project funds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e8773710af496491c3fb52b7198caa95b93733036628628a1300f4729cf4f739",
                                "typeString": "literal_string \"Project: cannot refund project funds\""
                              }
                            ],
                            "id": 1419,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10158:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10158:148:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1432,
                        "nodeType": "ExpressionStatement",
                        "src": "10158:148:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1434,
                                  "name": "addressToContributions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "10337:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1437,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1435,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "10360:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1436,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10364:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "10360:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10337:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10374:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10337:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f6a6563743a206164647265737320686173206e6f20636f6e747269627574696f6e73",
                              "id": 1440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10389:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d2fa5d737c6a47e9e2811e49b27e1de09b9a7e7d5458047b369e2ec3f12813e9",
                                "typeString": "literal_string \"Project: address has no contributions\""
                              },
                              "value": "Project: address has no contributions"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d2fa5d737c6a47e9e2811e49b27e1de09b9a7e7d5458047b369e2ec3f12813e9",
                                "typeString": "literal_string \"Project: address has no contributions\""
                              }
                            ],
                            "id": 1433,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10316:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10316:122:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1442,
                        "nodeType": "ExpressionStatement",
                        "src": "10316:122:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1444,
                                  "name": "refundableShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 991,
                                  "src": "10469:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1445,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10488:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "10469:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1451,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "10538:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BEATListings_$1851",
                                            "typeString": "contract BEATListings"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_BEATListings_$1851",
                                            "typeString": "contract BEATListings"
                                          }
                                        ],
                                        "id": 1450,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10530:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1449,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10530:7:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1452,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10530:13:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1447,
                                      "name": "stableCoin",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 971,
                                      "src": "10509:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$861",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10520:9:6",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 818,
                                    "src": "10509:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1453,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10509:35:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 1454,
                                    "name": "addressToContributions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1005,
                                    "src": "10564:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1457,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1455,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "10587:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1456,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10591:6:6",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "10587:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10564:34:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10509:89:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10469:129:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f207368617265732072656d61696e696e6720666f7220726566756e64",
                              "id": 1460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10612:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc58cbbc28837ed9ae7eb94482fe7ae987f092159ccea9cc12deee9f891238cd",
                                "typeString": "literal_string \"No shares remaining for refund\""
                              },
                              "value": "No shares remaining for refund"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc58cbbc28837ed9ae7eb94482fe7ae987f092159ccea9cc12deee9f891238cd",
                                "typeString": "literal_string \"No shares remaining for refund\""
                              }
                            ],
                            "id": 1443,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10448:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10448:206:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1462,
                        "nodeType": "ExpressionStatement",
                        "src": "10448:206:6"
                      },
                      {
                        "assignments": [
                          1464
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1464,
                            "mutability": "mutable",
                            "name": "addressContributions",
                            "nameLocation": "10673:20:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1520,
                            "src": "10665:28:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1463,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10665:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1469,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1465,
                            "name": "addressToContributions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "10696:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1468,
                          "indexExpression": {
                            "expression": {
                              "id": 1466,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10719:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10723:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10719:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10696:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10665:65:6"
                      },
                      {
                        "expression": {
                          "id": 1472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1470,
                            "name": "totalAmountRefunded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "10740:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1471,
                            "name": "addressContributions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1464,
                            "src": "10763:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10740:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1473,
                        "nodeType": "ExpressionStatement",
                        "src": "10740:43:6"
                      },
                      {
                        "expression": {
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1474,
                              "name": "addressToContributions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "10793:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1477,
                            "indexExpression": {
                              "expression": {
                                "id": 1475,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10816:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10820:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10816:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10793:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10830:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10793:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1480,
                        "nodeType": "ExpressionStatement",
                        "src": "10793:38:6"
                      },
                      {
                        "expression": {
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1481,
                            "name": "totalSharesSold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "10841:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1482,
                              "name": "investorToShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1017,
                              "src": "10860:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1485,
                            "indexExpression": {
                              "expression": {
                                "id": 1483,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10876:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10880:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10876:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10860:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10841:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1487,
                        "nodeType": "ExpressionStatement",
                        "src": "10841:46:6"
                      },
                      {
                        "expression": {
                          "id": 1493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1488,
                            "name": "refundableShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "10897:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1489,
                              "name": "investorToShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1017,
                              "src": "10917:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1492,
                            "indexExpression": {
                              "expression": {
                                "id": 1490,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10933:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10937:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10933:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10917:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10897:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1494,
                        "nodeType": "ExpressionStatement",
                        "src": "10897:47:6"
                      },
                      {
                        "expression": {
                          "id": 1500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1495,
                              "name": "investorToShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1017,
                              "src": "10954:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1498,
                            "indexExpression": {
                              "expression": {
                                "id": 1496,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10970:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10974:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10970:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10954:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10984:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10954:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1501,
                        "nodeType": "ExpressionStatement",
                        "src": "10954:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1505,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11016:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11020:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11016:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1507,
                              "name": "addressContributions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1464,
                              "src": "11028:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1502,
                              "name": "stableCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "10996:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$861",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11007:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 828,
                            "src": "10996:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10996:53:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1509,
                        "nodeType": "ExpressionStatement",
                        "src": "10996:53:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1511,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11072:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11076:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11072:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1515,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "11092:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                ],
                                "id": 1514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11084:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1513,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11084:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11084:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1517,
                              "name": "addressContributions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1464,
                              "src": "11099:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1510,
                            "name": "Refund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "11065:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11065:55:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1519,
                        "nodeType": "EmitStatement",
                        "src": "11060:60:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1414,
                    "nodeType": "StructuredDocumentation",
                    "src": "9954:126:6",
                    "text": "@notice Refunds an address' funds if the project is either cancelled or has\n expired without finishing successfully"
                  },
                  "functionSelector": "7921ba96",
                  "id": 1521,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1417,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1416,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "10135:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 960,
                        "src": "10135:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10135:12:6"
                    }
                  ],
                  "name": "_claim_Refund_on_cancellation",
                  "nameLocation": "10094:29:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1415,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10123:2:6"
                  },
                  "returnParameters": {
                    "id": 1418,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10148:0:6"
                  },
                  "scope": 1851,
                  "src": "10085:1042:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1543,
                    "nodeType": "Block",
                    "src": "11172:149:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1526,
                            "name": "processFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1608,
                            "src": "11182:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11182:14:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1528,
                        "nodeType": "ExpressionStatement",
                        "src": "11182:14:6"
                      },
                      {
                        "expression": {
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1529,
                            "name": "isFinalized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "11206:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11220:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "11206:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1532,
                        "nodeType": "ExpressionStatement",
                        "src": "11206:18:6"
                      },
                      {
                        "expression": {
                          "id": 1536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1533,
                            "name": "APYStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "11235:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1534,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11250:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11256:9:6",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11250:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11235:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1537,
                        "nodeType": "ExpressionStatement",
                        "src": "11235:30:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1539,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11298:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11304:9:6",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11298:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1538,
                            "name": "ListingFinalized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1059,
                            "src": "11281:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11281:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1542,
                        "nodeType": "EmitStatement",
                        "src": "11276:38:6"
                      }
                    ]
                  },
                  "functionSelector": "4bb278f3",
                  "id": 1544,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1524,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1523,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "11162:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "11162:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11162:9:6"
                    }
                  ],
                  "name": "finalize",
                  "nameLocation": "11142:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1522,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11150:2:6"
                  },
                  "returnParameters": {
                    "id": 1525,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11172:0:6"
                  },
                  "scope": 1851,
                  "src": "11133:188:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1607,
                    "nodeType": "Block",
                    "src": "11482:564:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1549,
                              "name": "isFinished",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 999,
                              "src": "11500:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f6a6563743a2070726f6a656374206973206e6f742066696e6973686564",
                              "id": 1550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11512:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e37d6a0f601d8ab78444143c8fa3b731c0091286ce4ea7fecf8c783d03c7a576",
                                "typeString": "literal_string \"Project: project is not finished\""
                              },
                              "value": "Project: project is not finished"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e37d6a0f601d8ab78444143c8fa3b731c0091286ce4ea7fecf8c783d03c7a576",
                                "typeString": "literal_string \"Project: project is not finished\""
                              }
                            ],
                            "id": 1548,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11492:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11492:55:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1552,
                        "nodeType": "ExpressionStatement",
                        "src": "11492:55:6"
                      },
                      {
                        "assignments": [
                          1554
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1554,
                            "mutability": "mutable",
                            "name": "annualReturnAmount",
                            "nameLocation": "11566:18:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1607,
                            "src": "11558:26:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1553,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11558:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1561,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1555,
                                  "name": "totalRaised",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 983,
                                  "src": "11588:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1556,
                                  "name": "projectAPY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 987,
                                  "src": "11602:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11588:24:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1558,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11587:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11616:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "11587:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11558:61:6"
                      },
                      {
                        "assignments": [
                          1563
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1563,
                            "mutability": "mutable",
                            "name": "platformFeeAmount",
                            "nameLocation": "11637:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1607,
                            "src": "11629:25:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1562,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11629:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1573,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1566,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1564,
                                        "name": "totalRaised",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 983,
                                        "src": "11659:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1565,
                                        "name": "annualReturnAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1554,
                                        "src": "11673:18:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11659:32:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1567,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11658:34:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1568,
                                  "name": "platformFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 973,
                                  "src": "11707:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11658:60:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1570,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11657:62:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11722:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "11657:68:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11629:96:6"
                      },
                      {
                        "assignments": [
                          1575
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1575,
                            "mutability": "mutable",
                            "name": "listingTransferAmount",
                            "nameLocation": "11743:21:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1607,
                            "src": "11735:29:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1574,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11735:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1581,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1576,
                              "name": "totalRaised",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 983,
                              "src": "11767:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1577,
                              "name": "annualReturnAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1554,
                              "src": "11793:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11767:44:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1579,
                            "name": "platformFeeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1563,
                            "src": "11826:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11767:76:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11735:108:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1585,
                              "name": "platformWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 975,
                              "src": "11874:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1586,
                              "name": "platformFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1563,
                              "src": "11890:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1582,
                              "name": "stableCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "11854:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$861",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11865:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 828,
                            "src": "11854:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11854:54:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1588,
                        "nodeType": "ExpressionStatement",
                        "src": "11854:54:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1592,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11938:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11942:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11938:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1594,
                              "name": "listingTransferAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1575,
                              "src": "11950:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1589,
                              "name": "stableCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "11918:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$861",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11929:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 828,
                            "src": "11918:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11918:54:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1596,
                        "nodeType": "ExpressionStatement",
                        "src": "11918:54:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1598,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11996:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12000:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11996:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1602,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12016:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                ],
                                "id": 1601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12008:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1600,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12008:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12008:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1604,
                              "name": "fundraisingGoal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 981,
                              "src": "12023:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1597,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1055,
                            "src": "11987:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11987:52:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1606,
                        "nodeType": "EmitStatement",
                        "src": "11982:57:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1545,
                    "nodeType": "StructuredDocumentation",
                    "src": "11327:117:6",
                    "text": "@notice Allows the owner of the contract to withdraw a successfully completed\n fundraising project's ether"
                  },
                  "id": 1608,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "processFunds",
                  "nameLocation": "11458:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11470:2:6"
                  },
                  "returnParameters": {
                    "id": 1547,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11482:0:6"
                  },
                  "scope": 1851,
                  "src": "11449:597:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1637,
                    "nodeType": "Block",
                    "src": "12093:134:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1616,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "12119:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BEATListings_$1851",
                                        "typeString": "contract BEATListings"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BEATListings_$1851",
                                        "typeString": "contract BEATListings"
                                      }
                                    ],
                                    "id": 1615,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "12111:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1614,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "12111:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12111:13:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12125:7:6",
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "12111:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12135:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12111:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7468696e6720746f207265636f766572",
                              "id": 1621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12138:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_01b47e778b90709a5ab68bba6dde33bfb2f1d58a3458616f0140f3faeea46f73",
                                "typeString": "literal_string \"Nothing to recover\""
                              },
                              "value": "Nothing to recover"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_01b47e778b90709a5ab68bba6dde33bfb2f1d58a3458616f0140f3faeea46f73",
                                "typeString": "literal_string \"Nothing to recover\""
                              }
                            ],
                            "id": 1613,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12103:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12103:56:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1623,
                        "nodeType": "ExpressionStatement",
                        "src": "12103:56:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1632,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "12206:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BEATListings_$1851",
                                      "typeString": "contract BEATListings"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_BEATListings_$1851",
                                      "typeString": "contract BEATListings"
                                    }
                                  ],
                                  "id": 1631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12198:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1630,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12198:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12198:13:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12212:7:6",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "12198:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1626,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "12177:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1627,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12181:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "12177:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12169:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1624,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12169:8:6",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12169:19:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12189:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "12169:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12169:51:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1636,
                        "nodeType": "ExpressionStatement",
                        "src": "12169:51:6"
                      }
                    ]
                  },
                  "functionSelector": "0614117a",
                  "id": 1638,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1611,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1610,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "12083:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "12083:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12083:9:6"
                    }
                  ],
                  "name": "recoverETH",
                  "nameLocation": "12061:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1609,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12071:2:6"
                  },
                  "returnParameters": {
                    "id": 1612,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12093:0:6"
                  },
                  "scope": 1851,
                  "src": "12052:175:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1694,
                    "nodeType": "Block",
                    "src": "12265:730:6",
                    "statements": [
                      {
                        "assignments": [
                          1642
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1642,
                            "mutability": "mutable",
                            "name": "eligibleCalls",
                            "nameLocation": "12284:13:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1694,
                            "src": "12276:21:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1641,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12276:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1650,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1643,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "12301:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12307:9:6",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "12301:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1645,
                                  "name": "APYStartTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 989,
                                  "src": "12319:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12301:30:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1647,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12300:32:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 1648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12335:7:6",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2592000_by_1",
                              "typeString": "int_const 2592000"
                            },
                            "value": "30"
                          },
                          "src": "12300:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12276:66:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1652,
                                "name": "eligibleCalls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "12360:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 1653,
                                  "name": "investorClaimCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1013,
                                  "src": "12376:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1656,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1654,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "12395:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1655,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12399:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "12395:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12376:30:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12360:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f75206861766520616c726561647920636c61696d656420666f72207468697320706572696f64206f72206974206973206e6f74207965742074696d652e",
                              "id": 1658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12408:65:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c25336cced9a4afbeb324fa0944ee937d41134cbab5aa4af9179c0599a616f55",
                                "typeString": "literal_string \"You have already claimed for this period or it is not yet time.\""
                              },
                              "value": "You have already claimed for this period or it is not yet time."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c25336cced9a4afbeb324fa0944ee937d41134cbab5aa4af9179c0599a616f55",
                                "typeString": "literal_string \"You have already claimed for this period or it is not yet time.\""
                              }
                            ],
                            "id": 1651,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12352:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12352:122:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1660,
                        "nodeType": "ExpressionStatement",
                        "src": "12352:122:6"
                      },
                      {
                        "assignments": [
                          1662
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1662,
                            "mutability": "mutable",
                            "name": "missedCalls",
                            "nameLocation": "12493:11:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1694,
                            "src": "12485:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1661,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12485:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1669,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1663,
                            "name": "eligibleCalls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1642,
                            "src": "12507:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1664,
                              "name": "investorClaimCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1013,
                              "src": "12523:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1667,
                            "indexExpression": {
                              "expression": {
                                "id": 1665,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12542:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12546:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12542:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12523:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12507:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12485:68:6"
                      },
                      {
                        "expression": {
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1670,
                              "name": "investorClaimCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1013,
                              "src": "12563:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1673,
                            "indexExpression": {
                              "expression": {
                                "id": 1671,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12582:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12586:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12582:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12563:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1674,
                            "name": "eligibleCalls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1642,
                            "src": "12596:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12563:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1676,
                        "nodeType": "ExpressionStatement",
                        "src": "12563:46:6"
                      },
                      {
                        "body": {
                          "id": 1692,
                          "nodeType": "Block",
                          "src": "12940:49:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1688,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "12967:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1689,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12971:6:6",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "12967:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1687,
                                  "name": "processClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1719,
                                  "src": "12954:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 1690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12954:24:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1691,
                              "nodeType": "ExpressionStatement",
                              "src": "12954:24:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1681,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1678,
                            "src": "12918:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1682,
                            "name": "missedCalls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1662,
                            "src": "12922:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12918:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1693,
                        "initializationExpression": {
                          "assignments": [
                            1678
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1678,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "12911:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1693,
                              "src": "12903:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1677,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12903:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1680,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12915:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12903:13:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "12935:3:6",
                            "subExpression": {
                              "id": 1684,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1678,
                              "src": "12935:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1686,
                          "nodeType": "ExpressionStatement",
                          "src": "12935:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "12898:91:6"
                      }
                    ]
                  },
                  "functionSelector": "49a1ae91",
                  "id": 1695,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimReturn",
                  "nameLocation": "12242:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1639,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12253:2:6"
                  },
                  "returnParameters": {
                    "id": 1640,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12265:0:6"
                  },
                  "scope": 1851,
                  "src": "12233:762:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1718,
                    "nodeType": "Block",
                    "src": "13051:188:6",
                    "statements": [
                      {
                        "assignments": [
                          1701
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1701,
                            "mutability": "mutable",
                            "name": "claimAmount",
                            "nameLocation": "13069:11:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1718,
                            "src": "13061:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1700,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13061:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1705,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1703,
                              "name": "_investor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1697,
                              "src": "13116:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1702,
                            "name": "calculateClaimableAPYForInvestor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1781,
                            "src": "13083:32:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13083:43:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13061:65:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1709,
                              "name": "_investor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1697,
                              "src": "13156:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1710,
                              "name": "claimAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1701,
                              "src": "13167:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1706,
                              "name": "stableCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "13136:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$861",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13147:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 828,
                            "src": "13136:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13136:43:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1712,
                        "nodeType": "ExpressionStatement",
                        "src": "13136:43:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1714,
                              "name": "_investor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1697,
                              "src": "13209:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1715,
                              "name": "claimAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1701,
                              "src": "13220:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1713,
                            "name": "ReturnClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "13195:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13195:37:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1717,
                        "nodeType": "EmitStatement",
                        "src": "13190:42:6"
                      }
                    ]
                  },
                  "id": 1719,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "processClaim",
                  "nameLocation": "13010:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1698,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1697,
                        "mutability": "mutable",
                        "name": "_investor",
                        "nameLocation": "13031:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1719,
                        "src": "13023:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13023:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13022:19:6"
                  },
                  "returnParameters": {
                    "id": 1699,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13051:0:6"
                  },
                  "scope": 1851,
                  "src": "13001:238:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1780,
                    "nodeType": "Block",
                    "src": "13334:518:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1727,
                                  "name": "addressToContributions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "13365:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1729,
                                "indexExpression": {
                                  "id": 1728,
                                  "name": "_investor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1721,
                                  "src": "13388:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13365:33:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13401:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "13365:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f6a6563743a206164647265737320686173206e6f20636f6e747269627574696f6e73",
                              "id": 1732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13416:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d2fa5d737c6a47e9e2811e49b27e1de09b9a7e7d5458047b369e2ec3f12813e9",
                                "typeString": "literal_string \"Project: address has no contributions\""
                              },
                              "value": "Project: address has no contributions"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d2fa5d737c6a47e9e2811e49b27e1de09b9a7e7d5458047b369e2ec3f12813e9",
                                "typeString": "literal_string \"Project: address has no contributions\""
                              }
                            ],
                            "id": 1726,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13344:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13344:121:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1734,
                        "nodeType": "ExpressionStatement",
                        "src": "13344:121:6"
                      },
                      {
                        "assignments": [
                          1736
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1736,
                            "mutability": "mutable",
                            "name": "duration",
                            "nameLocation": "13484:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1780,
                            "src": "13476:16:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1735,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13476:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1737,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13476:16:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1738,
                              "name": "investorToLastClaimTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "13506:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1740,
                            "indexExpression": {
                              "id": 1739,
                              "name": "_investor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1721,
                              "src": "13530:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13506:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13544:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13506:39:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1760,
                          "nodeType": "Block",
                          "src": "13619:88:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1751,
                                  "name": "duration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1736,
                                  "src": "13633:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1757,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1752,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "13644:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1753,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "13650:9:6",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "13644:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "baseExpression": {
                                      "id": 1754,
                                      "name": "investorToLastClaimTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1009,
                                      "src": "13662:23:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1756,
                                    "indexExpression": {
                                      "id": 1755,
                                      "name": "_investor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1721,
                                      "src": "13686:9:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13662:34:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "13644:52:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13633:63:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1759,
                              "nodeType": "ExpressionStatement",
                              "src": "13633:63:6"
                            }
                          ]
                        },
                        "id": 1761,
                        "nodeType": "IfStatement",
                        "src": "13503:204:6",
                        "trueBody": {
                          "id": 1750,
                          "nodeType": "Block",
                          "src": "13547:66:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1743,
                                  "name": "duration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1736,
                                  "src": "13561:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1747,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1744,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "13572:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1745,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "13578:9:6",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "13572:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1746,
                                    "name": "APYStartTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 989,
                                    "src": "13590:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "13572:30:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13561:41:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1749,
                              "nodeType": "ExpressionStatement",
                              "src": "13561:41:6"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1763
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1763,
                            "mutability": "mutable",
                            "name": "returnAmount",
                            "nameLocation": "13725:12:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1780,
                            "src": "13717:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1762,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13717:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1777,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 1764,
                                      "name": "addressToContributions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1005,
                                      "src": "13741:22:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1766,
                                    "indexExpression": {
                                      "id": 1765,
                                      "name": "_investor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1721,
                                      "src": "13764:9:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13741:33:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1767,
                                    "name": "projectAPY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 987,
                                    "src": "13777:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "13741:46:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1769,
                                  "name": "duration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1736,
                                  "src": "13790:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13741:57:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1771,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13740:59:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_31536000_by_1",
                                  "typeString": "int_const 31536000"
                                },
                                "id": 1774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "333635",
                                  "id": 1772,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13803:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_365_by_1",
                                    "typeString": "int_const 365"
                                  },
                                  "value": "365"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3836343030",
                                  "id": 1773,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13809:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  },
                                  "value": "86400"
                                },
                                "src": "13803:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_31536000_by_1",
                                  "typeString": "int_const 31536000"
                                }
                              }
                            ],
                            "id": 1775,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13802:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_31536000_by_1",
                              "typeString": "int_const 31536000"
                            }
                          },
                          "src": "13740:75:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13717:98:6"
                      },
                      {
                        "expression": {
                          "id": 1778,
                          "name": "returnAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "13833:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1725,
                        "id": 1779,
                        "nodeType": "Return",
                        "src": "13826:19:6"
                      }
                    ]
                  },
                  "functionSelector": "baad7d85",
                  "id": 1781,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateClaimableAPYForInvestor",
                  "nameLocation": "13254:32:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1722,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1721,
                        "mutability": "mutable",
                        "name": "_investor",
                        "nameLocation": "13295:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1781,
                        "src": "13287:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13287:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13286:19:6"
                  },
                  "returnParameters": {
                    "id": 1725,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1724,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1781,
                        "src": "13326:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1723,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13326:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13325:9:6"
                  },
                  "scope": 1851,
                  "src": "13245:607:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1818,
                    "nodeType": "Block",
                    "src": "13916:264:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_contract$_IERC20_$861",
                                "typeString": "contract IERC20"
                              },
                              "id": 1793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1790,
                                    "name": "tokenAdd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1783,
                                    "src": "13954:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1789,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 861,
                                  "src": "13947:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$861_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 1791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13947:16:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$861",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1792,
                                "name": "stableCoin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "13967:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$861",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "src": "13947:30:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e277420636c61696d2066756e642072616973696e6720746f6b656e73207573696e672074686973206d6574686f6421",
                              "id": 1794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13991:52:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_44214bc30c988c8d9ecc22952ffa973a971a6bcb3faa37ff3ad56326a032c64b",
                                "typeString": "literal_string \"Can't claim fund raising tokens using this method!\""
                              },
                              "value": "Can't claim fund raising tokens using this method!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_44214bc30c988c8d9ecc22952ffa973a971a6bcb3faa37ff3ad56326a032c64b",
                                "typeString": "literal_string \"Can't claim fund raising tokens using this method!\""
                              }
                            ],
                            "id": 1788,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13926:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13926:127:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1796,
                        "nodeType": "ExpressionStatement",
                        "src": "13926:127:6"
                      },
                      {
                        "assignments": [
                          1798
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1798,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "14071:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1818,
                            "src": "14063:14:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1797,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14063:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1808,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1805,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14115:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                ],
                                "id": 1804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14107:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1803,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14107:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14107:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1800,
                                  "name": "tokenAdd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1783,
                                  "src": "14087:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1799,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 861,
                                "src": "14080:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$861_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14080:16:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$861",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14097:9:6",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 818,
                            "src": "14080:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14080:41:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14063:58:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1813,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "14157:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14157:7:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1815,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1798,
                              "src": "14166:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1810,
                                  "name": "tokenAdd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1783,
                                  "src": "14138:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1809,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 861,
                                "src": "14131:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$861_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14131:16:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$861",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14148:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 828,
                            "src": "14131:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14131:42:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1817,
                        "nodeType": "ExpressionStatement",
                        "src": "14131:42:6"
                      }
                    ]
                  },
                  "functionSelector": "ccec3716",
                  "id": 1819,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1786,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1785,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "13906:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "13906:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13906:9:6"
                    }
                  ],
                  "name": "rescueERC20",
                  "nameLocation": "13867:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1784,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1783,
                        "mutability": "mutable",
                        "name": "tokenAdd",
                        "nameLocation": "13887:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1819,
                        "src": "13879:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1782,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13879:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13878:18:6"
                  },
                  "returnParameters": {
                    "id": 1787,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13916:0:6"
                  },
                  "scope": 1851,
                  "src": "13858:322:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1849,
                    "nodeType": "Block",
                    "src": "14227:197:6",
                    "statements": [
                      {
                        "assignments": [
                          1825
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1825,
                            "mutability": "mutable",
                            "name": "depositAmount",
                            "nameLocation": "14245:13:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1849,
                            "src": "14237:21:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1824,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14237:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1832,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1826,
                                  "name": "totalRaised",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 983,
                                  "src": "14262:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1827,
                                  "name": "projectAPY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 987,
                                  "src": "14276:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14262:24:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1829,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14261:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14290:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "14261:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14237:56:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1836,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14327:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14331:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14327:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1840,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14347:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                ],
                                "id": 1839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14339:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1838,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14339:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14339:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1842,
                              "name": "depositAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1825,
                              "src": "14354:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1833,
                              "name": "stableCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "14303:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$861",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14314:12:6",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 860,
                            "src": "14303:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14303:65:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1844,
                        "nodeType": "ExpressionStatement",
                        "src": "14303:65:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1846,
                              "name": "depositAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1825,
                              "src": "14403:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1845,
                            "name": "AnnualAPRDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1069,
                            "src": "14384:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14384:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1848,
                        "nodeType": "EmitStatement",
                        "src": "14379:38:6"
                      }
                    ]
                  },
                  "functionSelector": "1008e961",
                  "id": 1850,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1822,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1821,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "14217:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "14217:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14217:9:6"
                    }
                  ],
                  "name": "depositAPR",
                  "nameLocation": "14195:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1820,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14205:2:6"
                  },
                  "returnParameters": {
                    "id": 1823,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14227:0:6"
                  },
                  "scope": 1851,
                  "src": "14186:238:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1852,
              "src": "2909:11517:6",
              "usedErrors": [
                13,
                18,
                143,
                148,
                153,
                162,
                167,
                172
              ],
              "usedEvents": [
                24,
                795,
                804,
                1033,
                1039,
                1047,
                1055,
                1059,
                1065,
                1069
              ]
            }
          ],
          "src": "32:14395:6"
        },
        "id": 6
      },
      "contracts/BeatFactory.sol": {
        "ast": {
          "absolutePath": "contracts/BeatFactory.sol",
          "exportedSymbols": {
            "BEATFactory": [
              2133
            ],
            "BEATListings": [
              1851
            ],
            "Context": [
              917
            ],
            "Counters": [
              1926
            ],
            "ERC20": [
              783
            ],
            "IERC20": [
              861
            ],
            "IERC20Errors": [
              173
            ],
            "IERC20Metadata": [
              887
            ],
            "Ownable": [
              131
            ],
            "ReentrancyGuard": [
              961
            ]
          },
          "id": 2134,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1853,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:7"
            },
            {
              "absolutePath": "contracts/BEATListings.sol",
              "file": "./BEATListings.sol",
              "id": 1854,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2134,
              "sourceUnit": 1852,
              "src": "58:28:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Counters",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1855,
                "nodeType": "StructuredDocumentation",
                "src": "88:312:7",
                "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing MAAL721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
              },
              "fullyImplemented": true,
              "id": 1926,
              "linearizedBaseContracts": [
                1926
              ],
              "name": "Counters",
              "nameLocation": "409:8:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Counters.Counter",
                  "id": 1858,
                  "members": [
                    {
                      "constant": false,
                      "id": 1857,
                      "mutability": "mutable",
                      "name": "_value",
                      "nameLocation": "771:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1858,
                      "src": "763:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1856,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "763:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Counter",
                  "nameLocation": "431:7:7",
                  "nodeType": "StructDefinition",
                  "scope": 1926,
                  "src": "424:374:7",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1869,
                    "nodeType": "Block",
                    "src": "878:38:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1866,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1861,
                            "src": "895:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 1867,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "903:6:7",
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1857,
                          "src": "895:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1865,
                        "id": 1868,
                        "nodeType": "Return",
                        "src": "888:21:7"
                      }
                    ]
                  },
                  "id": 1870,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "current",
                  "nameLocation": "813:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1862,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1861,
                        "mutability": "mutable",
                        "name": "counter",
                        "nameLocation": "837:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1870,
                        "src": "821:23:7",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                          "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                          "id": 1860,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1859,
                            "name": "Counter",
                            "nameLocations": [
                              "821:7:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1858,
                            "src": "821:7:7"
                          },
                          "referencedDeclaration": 1858,
                          "src": "821:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                            "typeString": "struct Counters.Counter"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:25:7"
                  },
                  "returnParameters": {
                    "id": 1865,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1864,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1870,
                        "src": "869:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1863,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "869:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "868:9:7"
                  },
                  "scope": 1926,
                  "src": "804:112:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1883,
                    "nodeType": "Block",
                    "src": "975:70:7",
                    "statements": [
                      {
                        "id": 1882,
                        "nodeType": "UncheckedBlock",
                        "src": "985:54:7",
                        "statements": [
                          {
                            "expression": {
                              "id": 1880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 1876,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1873,
                                  "src": "1009:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                                    "typeString": "struct Counters.Counter storage pointer"
                                  }
                                },
                                "id": 1878,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "1017:6:7",
                                "memberName": "_value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1857,
                                "src": "1009:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "hexValue": "31",
                                "id": 1879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1027:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1009:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1881,
                            "nodeType": "ExpressionStatement",
                            "src": "1009:19:7"
                          }
                        ]
                      }
                    ]
                  },
                  "id": 1884,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increment",
                  "nameLocation": "931:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1874,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1873,
                        "mutability": "mutable",
                        "name": "counter",
                        "nameLocation": "957:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1884,
                        "src": "941:23:7",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                          "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                          "id": 1872,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1871,
                            "name": "Counter",
                            "nameLocations": [
                              "941:7:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1858,
                            "src": "941:7:7"
                          },
                          "referencedDeclaration": 1858,
                          "src": "941:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                            "typeString": "struct Counters.Counter"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "940:25:7"
                  },
                  "returnParameters": {
                    "id": 1875,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "975:0:7"
                  },
                  "scope": 1926,
                  "src": "922:123:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1911,
                    "nodeType": "Block",
                    "src": "1104:176:7",
                    "statements": [
                      {
                        "assignments": [
                          1891
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1891,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "1122:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1911,
                            "src": "1114:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1890,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1114:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1894,
                        "initialValue": {
                          "expression": {
                            "id": 1892,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1887,
                            "src": "1130:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 1893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1138:6:7",
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1857,
                          "src": "1130:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1114:30:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1896,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1891,
                                "src": "1162:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1897,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1170:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1162:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
                              "id": 1899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1173:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
                                "typeString": "literal_string \"Counter: decrement overflow\""
                              },
                              "value": "Counter: decrement overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
                                "typeString": "literal_string \"Counter: decrement overflow\""
                              }
                            ],
                            "id": 1895,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1154:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1154:49:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1901,
                        "nodeType": "ExpressionStatement",
                        "src": "1154:49:7"
                      },
                      {
                        "id": 1910,
                        "nodeType": "UncheckedBlock",
                        "src": "1213:61:7",
                        "statements": [
                          {
                            "expression": {
                              "id": 1908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 1902,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1887,
                                  "src": "1237:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                                    "typeString": "struct Counters.Counter storage pointer"
                                  }
                                },
                                "id": 1904,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "1245:6:7",
                                "memberName": "_value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1857,
                                "src": "1237:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1905,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1891,
                                  "src": "1254:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1262:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "1254:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1237:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1909,
                            "nodeType": "ExpressionStatement",
                            "src": "1237:26:7"
                          }
                        ]
                      }
                    ]
                  },
                  "id": 1912,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decrement",
                  "nameLocation": "1060:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1887,
                        "mutability": "mutable",
                        "name": "counter",
                        "nameLocation": "1086:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1912,
                        "src": "1070:23:7",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                          "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                          "id": 1886,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1885,
                            "name": "Counter",
                            "nameLocations": [
                              "1070:7:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1858,
                            "src": "1070:7:7"
                          },
                          "referencedDeclaration": 1858,
                          "src": "1070:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                            "typeString": "struct Counters.Counter"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1069:25:7"
                  },
                  "returnParameters": {
                    "id": 1889,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1104:0:7"
                  },
                  "scope": 1926,
                  "src": "1051:229:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1924,
                    "nodeType": "Block",
                    "src": "1335:35:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1918,
                              "name": "counter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1915,
                              "src": "1345:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                                "typeString": "struct Counters.Counter storage pointer"
                              }
                            },
                            "id": 1920,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1353:6:7",
                            "memberName": "_value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1857,
                            "src": "1345:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1362:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1345:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1923,
                        "nodeType": "ExpressionStatement",
                        "src": "1345:18:7"
                      }
                    ]
                  },
                  "id": 1925,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "reset",
                  "nameLocation": "1295:5:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1916,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1915,
                        "mutability": "mutable",
                        "name": "counter",
                        "nameLocation": "1317:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1925,
                        "src": "1301:23:7",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                          "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                          "id": 1914,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1913,
                            "name": "Counter",
                            "nameLocations": [
                              "1301:7:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1858,
                            "src": "1301:7:7"
                          },
                          "referencedDeclaration": 1858,
                          "src": "1301:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                            "typeString": "struct Counters.Counter"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1300:25:7"
                  },
                  "returnParameters": {
                    "id": 1917,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1335:0:7"
                  },
                  "scope": 1926,
                  "src": "1286:84:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2134,
              "src": "401:971:7",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1927,
                    "name": "Ownable",
                    "nameLocations": [
                      "1398:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 131,
                    "src": "1398:7:7"
                  },
                  "id": 1928,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1398:7:7"
                }
              ],
              "canonicalName": "BEATFactory",
              "contractDependencies": [
                1851
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2133,
              "linearizedBaseContracts": [
                2133,
                131,
                917
              ],
              "name": "BEATFactory",
              "nameLocation": "1383:11:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 1932,
                  "libraryName": {
                    "id": 1929,
                    "name": "Counters",
                    "nameLocations": [
                      "1418:8:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1926,
                    "src": "1418:8:7"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "1412:36:7",
                  "typeName": {
                    "id": 1931,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1930,
                      "name": "Counters.Counter",
                      "nameLocations": [
                        "1431:8:7",
                        "1440:7:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1858,
                      "src": "1431:16:7"
                    },
                    "referencedDeclaration": 1858,
                    "src": "1431:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  }
                },
                {
                  "constant": false,
                  "id": 1935,
                  "mutability": "mutable",
                  "name": "_counter",
                  "nameLocation": "1478:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "1453:33:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1858_storage",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1934,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1933,
                      "name": "Counters.Counter",
                      "nameLocations": [
                        "1453:8:7",
                        "1462:7:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1858,
                      "src": "1453:16:7"
                    },
                    "referencedDeclaration": 1858,
                    "src": "1453:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1858_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "26232a2e",
                  "id": 1938,
                  "mutability": "mutable",
                  "name": "platformFee",
                  "nameLocation": "1508:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "1493:31:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1493:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3235",
                    "id": 1937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1522:2:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_25_by_1",
                      "typeString": "int_const 25"
                    },
                    "value": "25"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fa2af9da",
                  "id": 1941,
                  "mutability": "mutable",
                  "name": "platformWallet",
                  "nameLocation": "1552:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "1537:74:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307863633445663346433538416131454539313632366635303033373733346235663363413133353861",
                    "id": 1940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1569:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xcc4Ef3FC58Aa1EE91626f50037734b5f3cA1358a"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "532f5278",
                  "id": 1943,
                  "mutability": "mutable",
                  "name": "DOTB",
                  "nameLocation": "1633:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "1618:19:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f8079052",
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "contractsList",
                  "nameLocation": "1661:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "1644:30:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1944,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1644:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1945,
                    "nodeType": "ArrayTypeName",
                    "src": "1644:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3815a547ca4b753ae5cc6a73f3e019b6791faedad7fe0614a6e08d0bcfb137f1",
                  "id": 1950,
                  "name": "ProjectCreated",
                  "nameLocation": "1687:14:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1949,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1948,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "listing",
                        "nameLocation": "1710:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1950,
                        "src": "1702:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1947,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1702:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1701:17:7"
                  },
                  "src": "1681:38:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "45610d581145924dd7090a5017e5f2b1d6f42213bb2e95707ff86846bbfcb1ca",
                  "id": 1954,
                  "name": "PlatformFeeUpdated",
                  "nameLocation": "1730:18:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1953,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1952,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "1757:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1954,
                        "src": "1749:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1951,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1749:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1748:13:7"
                  },
                  "src": "1724:38:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "73238e3ae0a71b401b31ae67204506d074de41bd5c084082fba9b64b1c7fa28f",
                  "id": 1958,
                  "name": "PlatformWalletUpdated",
                  "nameLocation": "1773:21:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1957,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1956,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "wallet",
                        "nameLocation": "1803:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1958,
                        "src": "1795:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1955,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1795:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1794:16:7"
                  },
                  "src": "1767:44:7"
                },
                {
                  "constant": false,
                  "id": 1963,
                  "mutability": "mutable",
                  "name": "ListedProjects",
                  "nameLocation": "1855:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "1817:52:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                    "typeString": "mapping(address => address[])"
                  },
                  "typeName": {
                    "id": 1962,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1959,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1825:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1817:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                      "typeString": "mapping(address => address[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 1960,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1836:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1961,
                      "nodeType": "ArrayTypeName",
                      "src": "1836:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1971,
                    "nodeType": "Block",
                    "src": "1976:34:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1966,
                            "name": "DOTB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1943,
                            "src": "1986:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1967,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1993:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1997:6:7",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1993:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1986:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1970,
                        "nodeType": "ExpressionStatement",
                        "src": "1986:17:7"
                      }
                    ]
                  },
                  "id": 1972,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1964,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1973:2:7"
                  },
                  "returnParameters": {
                    "id": 1965,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1976:0:7"
                  },
                  "scope": 2133,
                  "src": "1962:48:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2054,
                    "nodeType": "Block",
                    "src": "2392:603:7",
                    "statements": [
                      {
                        "assignments": [
                          2000
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2000,
                            "mutability": "mutable",
                            "name": "newProject",
                            "nameLocation": "2415:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2054,
                            "src": "2402:23:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BEATListings_$1851",
                              "typeString": "contract BEATListings"
                            },
                            "typeName": {
                              "id": 1999,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1998,
                                "name": "BEATListings",
                                "nameLocations": [
                                  "2402:12:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1851,
                                "src": "2402:12:7"
                              },
                              "referencedDeclaration": 1851,
                              "src": "2402:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BEATListings_$1851",
                                "typeString": "contract BEATListings"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2016,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2004,
                              "name": "_stableCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1975,
                              "src": "2454:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$861",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2005,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1977,
                              "src": "2475:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 2006,
                              "name": "_projectSymbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1979,
                              "src": "2490:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 2007,
                              "name": "_fundraisingGoal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1981,
                              "src": "2514:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2008,
                              "name": "_contributionAmnt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1983,
                              "src": "2540:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2009,
                              "name": "_projectStartTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1985,
                              "src": "2567:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2010,
                              "name": "_projectEndTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1987,
                              "src": "2594:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2011,
                              "name": "_projectOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1989,
                              "src": "2619:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2012,
                              "name": "platformFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1938,
                              "src": "2642:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2013,
                              "name": "platformWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1941,
                              "src": "2663:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2014,
                              "name": "_projectAPY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "2687:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$861",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2428:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC20_$861_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_contract$_BEATListings_$1851_$",
                              "typeString": "function (contract IERC20,string memory,string memory,uint256,uint256,uint256,uint256,address,uint256,address,uint256) returns (contract BEATListings)"
                            },
                            "typeName": {
                              "id": 2002,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2001,
                                "name": "BEATListings",
                                "nameLocations": [
                                  "2432:12:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1851,
                                "src": "2432:12:7"
                              },
                              "referencedDeclaration": 1851,
                              "src": "2432:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BEATListings_$1851",
                                "typeString": "contract BEATListings"
                              }
                            }
                          },
                          "id": 2015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2428:280:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BEATListings_$1851",
                            "typeString": "contract BEATListings"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2402:306:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2022,
                                  "name": "newProject",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2000,
                                  "src": "2745:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                ],
                                "id": 2021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2737:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2020,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2737:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2737:19:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2017,
                              "name": "contractsList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1946,
                              "src": "2718:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2732:4:7",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2718:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2718:39:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2025,
                        "nodeType": "ExpressionStatement",
                        "src": "2718:39:7"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2026,
                              "name": "_counter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1935,
                              "src": "2767:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1858_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 2028,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2776:9:7",
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1884,
                            "src": "2767:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1858_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1858_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 2029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2767:20:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2030,
                        "nodeType": "ExpressionStatement",
                        "src": "2767:20:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2038,
                                  "name": "newProject",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2000,
                                  "src": "2889:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                ],
                                "id": 2037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2881:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2036,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2881:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2881:19:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2031,
                                "name": "ListedProjects",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1963,
                                "src": "2849:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 2034,
                              "indexExpression": {
                                "expression": {
                                  "id": 2032,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2864:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2868:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2864:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2849:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2876:4:7",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2849:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2849:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2041,
                        "nodeType": "ExpressionStatement",
                        "src": "2849:52:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2045,
                                  "name": "newProject",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2000,
                                  "src": "2940:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BEATListings_$1851",
                                    "typeString": "contract BEATListings"
                                  }
                                ],
                                "id": 2044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2932:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2043,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2932:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2932:19:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2042,
                            "name": "ProjectCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1950,
                            "src": "2917:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2917:35:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2048,
                        "nodeType": "EmitStatement",
                        "src": "2912:40:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2051,
                              "name": "newProject",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2000,
                              "src": "2977:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BEATListings_$1851",
                                "typeString": "contract BEATListings"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BEATListings_$1851",
                                "typeString": "contract BEATListings"
                              }
                            ],
                            "id": 2050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2969:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2049,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2969:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2969:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1997,
                        "id": 2053,
                        "nodeType": "Return",
                        "src": "2962:26:7"
                      }
                    ]
                  },
                  "functionSelector": "381aa756",
                  "id": 2055,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1994,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1993,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2346:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "2346:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2346:9:7"
                    }
                  ],
                  "name": "createListing",
                  "nameLocation": "2025:13:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1992,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1975,
                        "mutability": "mutable",
                        "name": "_stableCoin",
                        "nameLocation": "2055:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "2048:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$861",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1974,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1973,
                            "name": "IERC20",
                            "nameLocations": [
                              "2048:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 861,
                            "src": "2048:6:7"
                          },
                          "referencedDeclaration": 861,
                          "src": "2048:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$861",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1977,
                        "mutability": "mutable",
                        "name": "_name",
                        "nameLocation": "2090:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "2076:19:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1976,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2076:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1979,
                        "mutability": "mutable",
                        "name": "_projectSymbol",
                        "nameLocation": "2119:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "2105:28:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1978,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2105:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1981,
                        "mutability": "mutable",
                        "name": "_fundraisingGoal",
                        "nameLocation": "2151:16:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "2143:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1980,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2143:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1983,
                        "mutability": "mutable",
                        "name": "_contributionAmnt",
                        "nameLocation": "2185:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "2177:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1982,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2177:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1985,
                        "mutability": "mutable",
                        "name": "_projectStartTime",
                        "nameLocation": "2220:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "2212:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1984,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2212:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1987,
                        "mutability": "mutable",
                        "name": "_projectEndTime",
                        "nameLocation": "2255:15:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "2247:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1986,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2247:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1989,
                        "mutability": "mutable",
                        "name": "_projectOwner",
                        "nameLocation": "2288:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "2280:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1988,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2280:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1991,
                        "mutability": "mutable",
                        "name": "_projectAPY",
                        "nameLocation": "2319:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "2311:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1990,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2311:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2038:298:7"
                  },
                  "returnParameters": {
                    "id": 1997,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1996,
                        "mutability": "mutable",
                        "name": "newProjectAddress",
                        "nameLocation": "2373:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "2365:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1995,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2365:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2364:27:7"
                  },
                  "scope": 2133,
                  "src": "2016:979:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2064,
                    "nodeType": "Block",
                    "src": "3068:42:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2060,
                              "name": "_counter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1935,
                              "src": "3085:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1858_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 2061,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3094:7:7",
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1870,
                            "src": "3085:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1858_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1858_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 2062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3085:18:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2059,
                        "id": 2063,
                        "nodeType": "Return",
                        "src": "3078:25:7"
                      }
                    ]
                  },
                  "functionSelector": "d396f336",
                  "id": 2065,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployedCounter",
                  "nameLocation": "3010:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2056,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3025:2:7"
                  },
                  "returnParameters": {
                    "id": 2059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2058,
                        "mutability": "mutable",
                        "name": "__counter",
                        "nameLocation": "3057:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2065,
                        "src": "3049:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2057,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3049:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3048:19:7"
                  },
                  "scope": 2133,
                  "src": "3001:109:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2073,
                    "nodeType": "Block",
                    "src": "3184:37:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2071,
                          "name": "contractsList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1946,
                          "src": "3201:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "functionReturnParameters": 2070,
                        "id": 2072,
                        "nodeType": "Return",
                        "src": "3194:20:7"
                      }
                    ]
                  },
                  "functionSelector": "c54a9588",
                  "id": 2074,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployedContracts",
                  "nameLocation": "3125:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2066,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3142:2:7"
                  },
                  "returnParameters": {
                    "id": 2070,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2069,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2074,
                        "src": "3166:16:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2067,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3166:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2068,
                          "nodeType": "ArrayTypeName",
                          "src": "3166:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3165:18:7"
                  },
                  "scope": 2133,
                  "src": "3116:105:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2093,
                    "nodeType": "Block",
                    "src": "3400:84:7",
                    "statements": [
                      {
                        "assignments": [
                          2086
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2086,
                            "mutability": "mutable",
                            "name": "arr",
                            "nameLocation": "3427:3:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2093,
                            "src": "3410:20:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2084,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3410:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2085,
                              "nodeType": "ArrayTypeName",
                              "src": "3410:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2090,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2087,
                            "name": "ListedProjects",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1963,
                            "src": "3433:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                              "typeString": "mapping(address => address[] storage ref)"
                            }
                          },
                          "id": 2089,
                          "indexExpression": {
                            "id": 2088,
                            "name": "deployer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2076,
                            "src": "3448:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3433:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3410:47:7"
                      },
                      {
                        "expression": {
                          "id": 2091,
                          "name": "arr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2086,
                          "src": "3474:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "functionReturnParameters": 2081,
                        "id": 2092,
                        "nodeType": "Return",
                        "src": "3467:10:7"
                      }
                    ]
                  },
                  "functionSelector": "e32e723c",
                  "id": 2094,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserProjects",
                  "nameLocation": "3287:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2076,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nameLocation": "3311:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "3303:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2075,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3303:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3302:18:7"
                  },
                  "returnParameters": {
                    "id": 2081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2080,
                        "mutability": "mutable",
                        "name": "contracts",
                        "nameLocation": "3385:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "3368:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2078,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3368:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2079,
                          "nodeType": "ArrayTypeName",
                          "src": "3368:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3367:28:7"
                  },
                  "scope": 2133,
                  "src": "3278:206:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2109,
                    "nodeType": "Block",
                    "src": "3557:91:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2101,
                            "name": "platformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1938,
                            "src": "3567:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2102,
                            "name": "_platformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "3581:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3567:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2104,
                        "nodeType": "ExpressionStatement",
                        "src": "3567:26:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2106,
                              "name": "_platformFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2096,
                              "src": "3628:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2105,
                            "name": "PlatformFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1954,
                            "src": "3609:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3609:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2108,
                        "nodeType": "EmitStatement",
                        "src": "3604:37:7"
                      }
                    ]
                  },
                  "functionSelector": "a5d0bcff",
                  "id": 2110,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2099,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2098,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3548:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "3548:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3548:9:7"
                    }
                  ],
                  "name": "modifyPlatformFee",
                  "nameLocation": "3499:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2097,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2096,
                        "mutability": "mutable",
                        "name": "_platformFee",
                        "nameLocation": "3525:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2110,
                        "src": "3517:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2095,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3517:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3516:22:7"
                  },
                  "returnParameters": {
                    "id": 2100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3557:0:7"
                  },
                  "scope": 2133,
                  "src": "3490:158:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2131,
                    "nodeType": "Block",
                    "src": "3713:155:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2116,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3731:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3735:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3731:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2118,
                                "name": "DOTB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1943,
                                "src": "3745:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3731:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6f6e6c7920444f54422063616e20757064617465",
                              "id": 2120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3751:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_278a566a288b8bea9076f94580f0a67393d0666cb2b9d9c5af46d595140a83d2",
                                "typeString": "literal_string \"only DOTB can update\""
                              },
                              "value": "only DOTB can update"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_278a566a288b8bea9076f94580f0a67393d0666cb2b9d9c5af46d595140a83d2",
                                "typeString": "literal_string \"only DOTB can update\""
                              }
                            ],
                            "id": 2115,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3723:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3723:51:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2122,
                        "nodeType": "ExpressionStatement",
                        "src": "3723:51:7"
                      },
                      {
                        "expression": {
                          "id": 2125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2123,
                            "name": "platformWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1941,
                            "src": "3785:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2124,
                            "name": "_newWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "3802:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3785:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2126,
                        "nodeType": "ExpressionStatement",
                        "src": "3785:27:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2128,
                              "name": "_newWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2112,
                              "src": "3850:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2127,
                            "name": "PlatformWalletUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1958,
                            "src": "3828:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3828:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2130,
                        "nodeType": "EmitStatement",
                        "src": "3823:38:7"
                      }
                    ]
                  },
                  "functionSelector": "ada4ef30",
                  "id": 2132,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updatePlatformWallet",
                  "nameLocation": "3663:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2112,
                        "mutability": "mutable",
                        "name": "_newWallet",
                        "nameLocation": "3692:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2132,
                        "src": "3684:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3684:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3683:20:7"
                  },
                  "returnParameters": {
                    "id": 2114,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3713:0:7"
                  },
                  "scope": 2133,
                  "src": "3654:214:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2134,
              "src": "1374:2496:7",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24,
                1950,
                1954,
                1958
              ]
            }
          ],
          "src": "32:3838:7"
        },
        "id": 7
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x525584152442a11c9ed6b04064454f1c41dca045c3d123c5bcb7a956a016a9fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93647e8ed871f0d61ff2a12854ad3edaa910a2915569c152bb782ddede31950f\",\"dweb:/ipfs/QmZPc7EZfB1R25FsJKRdA6Pe7VywBdSJHgEfTx1Z6iK996\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "contracts/BEATListings.sol": {
        "BEATListings": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_stableCoin",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_symbol",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_fundraisingGoal",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_contributionAmnt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_projectStartTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_projectEndTime",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_projectOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_platformFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_platformWallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_projectAPY",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "depositAmount",
                  "type": "uint256"
                }
              ],
              "name": "AnnualAPRDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "project",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Contribution",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "ListingFinalized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "project",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Refund",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "investor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "claimedAmount",
                  "type": "uint256"
                }
              ],
              "name": "ReturnClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "SharesClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "project",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Withdraw",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "APYStartTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "_claim_Refund_on_cancellation",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "_claim_Shares",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_numberOfShares",
                  "type": "uint256"
                }
              ],
              "name": "_participate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "addressToContributions",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "addressToMintedTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_investor",
                  "type": "address"
                }
              ],
              "name": "calculateClaimableAPYForInvestor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "cancel_Project",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimReturn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "contributionAmnt",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "depositAPR",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "finalize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fundraisingGoal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "investorClaimCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "investorToLastClaimTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "investorToShare",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isCancelled",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isFinalized",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isFinished",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxAllowedSharesPerWallet",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "platformFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "platformWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "projectAPY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "projectEndTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "projectStartTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "recoverETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "refundableShares",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenAdd",
                  "type": "address"
                }
              ],
              "name": "rescueERC20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "stableCoin",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalAmountRefunded",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalRaised",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSharesSold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalTokensMinted",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1200": {
                  "entryPoint": null,
                  "id": 1200,
                  "parameterSlots": 11,
                  "returnSlots": 0
                },
                "@_320": {
                  "entryPoint": null,
                  "id": 320,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_34": {
                  "entryPoint": null,
                  "id": 34,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_940": {
                  "entryPoint": null,
                  "id": 940,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_checkOwner_68": {
                  "entryPoint": 561,
                  "id": 68,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_899": {
                  "entryPoint": null,
                  "id": 899,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_130": {
                  "entryPoint": 413,
                  "id": 130,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@owner_51": {
                  "entryPoint": null,
                  "id": 51,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferOwnership_110": {
                  "entryPoint": 493,
                  "id": 110,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_contract_IERC20_fromMemory": {
                  "entryPoint": 610,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_string_fromMemory": {
                  "entryPoint": 661,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_IERC20_$861t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_addresst_uint256t_addresst_uint256_fromMemory": {
                  "entryPoint": 839,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 11
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_617f1f7d3716b74b052acf37f17eb17554e6bd064bb0afc56043858632e11c41__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f4e590379f0a37ec17a3b1930fd6c3b48efbea0ecce41aca8776cc614a29878d__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 1418,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 1129,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 1214,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 1069,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 639,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:6178:8",
                    "nodeType": "YulBlock",
                    "src": "0:6178:8",
                    "statements": [
                      {
                        "nativeSrc": "6:3:8",
                        "nodeType": "YulBlock",
                        "src": "6:3:8",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "82:117:8",
                          "nodeType": "YulBlock",
                          "src": "82:117:8",
                          "statements": [
                            {
                              "nativeSrc": "92:22:8",
                              "nodeType": "YulAssignment",
                              "src": "92:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "107:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "107:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "101:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "101:5:8"
                                },
                                "nativeSrc": "101:13:8",
                                "nodeType": "YulFunctionCall",
                                "src": "101:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "92:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "92:5:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "177:16:8",
                                "nodeType": "YulBlock",
                                "src": "177:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "186:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "186:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "189:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "189:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "179:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "179:6:8"
                                      },
                                      "nativeSrc": "179:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "179:12:8"
                                    },
                                    "nativeSrc": "179:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "179:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "136:5:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "136:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "147:5:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "147:5:8"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "162:3:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "162:3:8",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "167:1:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "167:1:8",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "158:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "158:3:8"
                                                },
                                                "nativeSrc": "158:11:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "158:11:8"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "171:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "171:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "154:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "154:3:8"
                                            },
                                            "nativeSrc": "154:19:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "154:19:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "143:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "143:3:8"
                                        },
                                        "nativeSrc": "143:31:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "143:31:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "133:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "133:2:8"
                                    },
                                    "nativeSrc": "133:42:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "133:42:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "126:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "126:6:8"
                                },
                                "nativeSrc": "126:50:8",
                                "nodeType": "YulFunctionCall",
                                "src": "126:50:8"
                              },
                              "nativeSrc": "123:70:8",
                              "nodeType": "YulIf",
                              "src": "123:70:8"
                            }
                          ]
                        },
                        "name": "abi_decode_contract_IERC20_fromMemory",
                        "nativeSrc": "14:185:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "61:6:8",
                            "nodeType": "YulTypedName",
                            "src": "61:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "72:5:8",
                            "nodeType": "YulTypedName",
                            "src": "72:5:8",
                            "type": ""
                          }
                        ],
                        "src": "14:185:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "236:95:8",
                          "nodeType": "YulBlock",
                          "src": "236:95:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "253:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "253:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "260:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "260:3:8",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "265:10:8",
                                        "nodeType": "YulLiteral",
                                        "src": "265:10:8",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "256:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "256:3:8"
                                    },
                                    "nativeSrc": "256:20:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "256:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "246:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "246:6:8"
                                },
                                "nativeSrc": "246:31:8",
                                "nodeType": "YulFunctionCall",
                                "src": "246:31:8"
                              },
                              "nativeSrc": "246:31:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "246:31:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "293:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "293:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "296:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "296:4:8",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "286:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "286:6:8"
                                },
                                "nativeSrc": "286:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "286:15:8"
                              },
                              "nativeSrc": "286:15:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "286:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "317:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "317:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "320:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "320:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "310:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:8"
                                },
                                "nativeSrc": "310:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "310:15:8"
                              },
                              "nativeSrc": "310:15:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "310:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "204:127:8",
                        "nodeType": "YulFunctionDefinition",
                        "src": "204:127:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "400:780:8",
                          "nodeType": "YulBlock",
                          "src": "400:780:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "449:16:8",
                                "nodeType": "YulBlock",
                                "src": "449:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "458:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "458:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "461:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "461:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "451:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "451:6:8"
                                      },
                                      "nativeSrc": "451:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "451:12:8"
                                    },
                                    "nativeSrc": "451:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "451:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "428:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "428:6:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "436:4:8",
                                            "nodeType": "YulLiteral",
                                            "src": "436:4:8",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "424:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "424:3:8"
                                        },
                                        "nativeSrc": "424:17:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "424:17:8"
                                      },
                                      {
                                        "name": "end",
                                        "nativeSrc": "443:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "443:3:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "420:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "420:3:8"
                                    },
                                    "nativeSrc": "420:27:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "420:27:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "413:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "413:6:8"
                                },
                                "nativeSrc": "413:35:8",
                                "nodeType": "YulFunctionCall",
                                "src": "413:35:8"
                              },
                              "nativeSrc": "410:55:8",
                              "nodeType": "YulIf",
                              "src": "410:55:8"
                            },
                            {
                              "nativeSrc": "474:23:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "474:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "490:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "490:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "484:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "484:5:8"
                                },
                                "nativeSrc": "484:13:8",
                                "nodeType": "YulFunctionCall",
                                "src": "484:13:8"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "478:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "478:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "506:28:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "506:28:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "524:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "524:2:8",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "528:1:8",
                                        "nodeType": "YulLiteral",
                                        "src": "528:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "520:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "520:3:8"
                                    },
                                    "nativeSrc": "520:10:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "520:10:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "532:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "532:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "516:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "516:3:8"
                                },
                                "nativeSrc": "516:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "516:18:8"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nativeSrc": "510:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "510:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "557:22:8",
                                "nodeType": "YulBlock",
                                "src": "557:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "559:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "559:16:8"
                                      },
                                      "nativeSrc": "559:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "559:18:8"
                                    },
                                    "nativeSrc": "559:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "559:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nativeSrc": "549:2:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "549:2:8"
                                  },
                                  {
                                    "name": "_2",
                                    "nativeSrc": "553:2:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "553:2:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "546:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "546:2:8"
                                },
                                "nativeSrc": "546:10:8",
                                "nodeType": "YulFunctionCall",
                                "src": "546:10:8"
                              },
                              "nativeSrc": "543:36:8",
                              "nodeType": "YulIf",
                              "src": "543:36:8"
                            },
                            {
                              "nativeSrc": "588:17:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "588:17:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "602:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "602:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nativeSrc": "598:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "598:3:8"
                                },
                                "nativeSrc": "598:7:8",
                                "nodeType": "YulFunctionCall",
                                "src": "598:7:8"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nativeSrc": "592:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "592:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "614:23:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "614:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "634:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "634:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "628:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "628:5:8"
                                },
                                "nativeSrc": "628:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "628:9:8"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "618:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "618:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "646:71:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "646:71:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "668:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "668:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_1",
                                                    "nativeSrc": "692:2:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "692:2:8"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "696:4:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "696:4:8",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "688:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "688:3:8"
                                                },
                                                "nativeSrc": "688:13:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "688:13:8"
                                              },
                                              {
                                                "name": "_3",
                                                "nativeSrc": "703:2:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "703:2:8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nativeSrc": "684:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "684:3:8"
                                            },
                                            "nativeSrc": "684:22:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "684:22:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "708:2:8",
                                            "nodeType": "YulLiteral",
                                            "src": "708:2:8",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "680:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "680:3:8"
                                        },
                                        "nativeSrc": "680:31:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "680:31:8"
                                      },
                                      {
                                        "name": "_3",
                                        "nativeSrc": "713:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "713:2:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "676:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "676:3:8"
                                    },
                                    "nativeSrc": "676:40:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "676:40:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "664:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "664:3:8"
                                },
                                "nativeSrc": "664:53:8",
                                "nodeType": "YulFunctionCall",
                                "src": "664:53:8"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "650:10:8",
                                  "nodeType": "YulTypedName",
                                  "src": "650:10:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "776:22:8",
                                "nodeType": "YulBlock",
                                "src": "776:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "778:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "778:16:8"
                                      },
                                      "nativeSrc": "778:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "778:18:8"
                                    },
                                    "nativeSrc": "778:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "778:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "735:10:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "735:10:8"
                                      },
                                      {
                                        "name": "_2",
                                        "nativeSrc": "747:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "747:2:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "732:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "732:2:8"
                                    },
                                    "nativeSrc": "732:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "732:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "755:10:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "755:10:8"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "767:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "767:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "752:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "752:2:8"
                                    },
                                    "nativeSrc": "752:22:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "752:22:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "729:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "729:2:8"
                                },
                                "nativeSrc": "729:46:8",
                                "nodeType": "YulFunctionCall",
                                "src": "729:46:8"
                              },
                              "nativeSrc": "726:72:8",
                              "nodeType": "YulIf",
                              "src": "726:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "814:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "814:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nativeSrc": "818:10:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "818:10:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "807:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "807:6:8"
                                },
                                "nativeSrc": "807:22:8",
                                "nodeType": "YulFunctionCall",
                                "src": "807:22:8"
                              },
                              "nativeSrc": "807:22:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "807:22:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "845:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "845:6:8"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "853:2:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "853:2:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "838:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "838:6:8"
                                },
                                "nativeSrc": "838:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "838:18:8"
                              },
                              "nativeSrc": "838:18:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "838:18:8"
                            },
                            {
                              "nativeSrc": "865:14:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "865:14:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "875:4:8",
                                "nodeType": "YulLiteral",
                                "src": "875:4:8",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nativeSrc": "869:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "869:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "927:16:8",
                                "nodeType": "YulBlock",
                                "src": "927:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "936:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "936:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "939:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "939:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "929:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "929:6:8"
                                      },
                                      "nativeSrc": "929:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "929:12:8"
                                    },
                                    "nativeSrc": "929:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "929:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "902:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "902:6:8"
                                          },
                                          {
                                            "name": "_1",
                                            "nativeSrc": "910:2:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "910:2:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "898:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "898:3:8"
                                        },
                                        "nativeSrc": "898:15:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "898:15:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "915:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "915:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "894:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "894:3:8"
                                    },
                                    "nativeSrc": "894:26:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "894:26:8"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "922:3:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "922:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "891:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "891:2:8"
                                },
                                "nativeSrc": "891:35:8",
                                "nodeType": "YulFunctionCall",
                                "src": "891:35:8"
                              },
                              "nativeSrc": "888:55:8",
                              "nodeType": "YulIf",
                              "src": "888:55:8"
                            },
                            {
                              "nativeSrc": "952:10:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "952:10:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "961:1:8",
                                "nodeType": "YulLiteral",
                                "src": "961:1:8",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "956:1:8",
                                  "nodeType": "YulTypedName",
                                  "src": "956:1:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1017:87:8",
                                "nodeType": "YulBlock",
                                "src": "1017:87:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "memPtr",
                                                  "nativeSrc": "1046:6:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1046:6:8"
                                                },
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "1054:1:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1054:1:8"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "1042:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "1042:3:8"
                                              },
                                              "nativeSrc": "1042:14:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1042:14:8"
                                            },
                                            {
                                              "name": "_4",
                                              "nativeSrc": "1058:2:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1058:2:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "1038:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1038:3:8"
                                          },
                                          "nativeSrc": "1038:23:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1038:23:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "offset",
                                                      "nativeSrc": "1077:6:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1077:6:8"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nativeSrc": "1085:1:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1085:1:8"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "1073:3:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1073:3:8"
                                                  },
                                                  "nativeSrc": "1073:14:8",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "1073:14:8"
                                                },
                                                {
                                                  "name": "_4",
                                                  "nativeSrc": "1089:2:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1089:2:8"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "1069:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "1069:3:8"
                                              },
                                              "nativeSrc": "1069:23:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1069:23:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "1063:5:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1063:5:8"
                                          },
                                          "nativeSrc": "1063:30:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1063:30:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "1031:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1031:6:8"
                                      },
                                      "nativeSrc": "1031:63:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1031:63:8"
                                    },
                                    "nativeSrc": "1031:63:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1031:63:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "982:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "982:1:8"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "985:2:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "985:2:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "979:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "979:2:8"
                                },
                                "nativeSrc": "979:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "979:9:8"
                              },
                              "nativeSrc": "971:133:8",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "989:19:8",
                                "nodeType": "YulBlock",
                                "src": "989:19:8",
                                "statements": [
                                  {
                                    "nativeSrc": "991:15:8",
                                    "nodeType": "YulAssignment",
                                    "src": "991:15:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "1000:1:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1000:1:8"
                                        },
                                        {
                                          "name": "_4",
                                          "nativeSrc": "1003:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1003:2:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "996:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "996:3:8"
                                      },
                                      "nativeSrc": "996:10:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "996:10:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "991:1:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "991:1:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "975:3:8",
                                "nodeType": "YulBlock",
                                "src": "975:3:8",
                                "statements": []
                              },
                              "src": "971:133:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nativeSrc": "1128:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1128:6:8"
                                          },
                                          {
                                            "name": "_1",
                                            "nativeSrc": "1136:2:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1136:2:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1124:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1124:3:8"
                                        },
                                        "nativeSrc": "1124:15:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1124:15:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1141:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1141:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1120:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1120:3:8"
                                    },
                                    "nativeSrc": "1120:26:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1120:26:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1148:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1148:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1113:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1113:6:8"
                                },
                                "nativeSrc": "1113:37:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1113:37:8"
                              },
                              "nativeSrc": "1113:37:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "1113:37:8"
                            },
                            {
                              "nativeSrc": "1159:15:8",
                              "nodeType": "YulAssignment",
                              "src": "1159:15:8",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "1168:6:8",
                                "nodeType": "YulIdentifier",
                                "src": "1168:6:8"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nativeSrc": "1159:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1159:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_string_fromMemory",
                        "nativeSrc": "336:844:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "374:6:8",
                            "nodeType": "YulTypedName",
                            "src": "374:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "382:3:8",
                            "nodeType": "YulTypedName",
                            "src": "382:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nativeSrc": "390:5:8",
                            "nodeType": "YulTypedName",
                            "src": "390:5:8",
                            "type": ""
                          }
                        ],
                        "src": "336:844:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1471:940:8",
                          "nodeType": "YulBlock",
                          "src": "1471:940:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1518:16:8",
                                "nodeType": "YulBlock",
                                "src": "1518:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1527:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1527:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1530:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1530:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1520:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1520:6:8"
                                      },
                                      "nativeSrc": "1520:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1520:12:8"
                                    },
                                    "nativeSrc": "1520:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1520:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1492:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1492:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1501:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1501:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1488:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1488:3:8"
                                    },
                                    "nativeSrc": "1488:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1488:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1513:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1513:3:8",
                                    "type": "",
                                    "value": "352"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1484:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1484:3:8"
                                },
                                "nativeSrc": "1484:33:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1484:33:8"
                              },
                              "nativeSrc": "1481:53:8",
                              "nodeType": "YulIf",
                              "src": "1481:53:8"
                            },
                            {
                              "nativeSrc": "1543:58:8",
                              "nodeType": "YulAssignment",
                              "src": "1543:58:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1591:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1591:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_contract_IERC20_fromMemory",
                                  "nativeSrc": "1553:37:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1553:37:8"
                                },
                                "nativeSrc": "1553:48:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1553:48:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1543:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1543:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1610:39:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1610:39:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1634:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1634:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1645:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1645:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1630:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1630:3:8"
                                    },
                                    "nativeSrc": "1630:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1630:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1624:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1624:5:8"
                                },
                                "nativeSrc": "1624:25:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1624:25:8"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "1614:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "1614:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1692:16:8",
                                "nodeType": "YulBlock",
                                "src": "1692:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1701:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1701:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1704:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1704:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1694:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1694:6:8"
                                      },
                                      "nativeSrc": "1694:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1694:12:8"
                                    },
                                    "nativeSrc": "1694:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1694:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1664:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1664:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1680:2:8",
                                            "nodeType": "YulLiteral",
                                            "src": "1680:2:8",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1684:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "1684:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "1676:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1676:3:8"
                                        },
                                        "nativeSrc": "1676:10:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1676:10:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1688:1:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1688:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1672:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1672:3:8"
                                    },
                                    "nativeSrc": "1672:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1672:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1661:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1661:2:8"
                                },
                                "nativeSrc": "1661:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1661:30:8"
                              },
                              "nativeSrc": "1658:50:8",
                              "nodeType": "YulIf",
                              "src": "1658:50:8"
                            },
                            {
                              "nativeSrc": "1717:71:8",
                              "nodeType": "YulAssignment",
                              "src": "1717:71:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1760:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1760:9:8"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "1771:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1771:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1756:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1756:3:8"
                                    },
                                    "nativeSrc": "1756:22:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1756:22:8"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "1780:7:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1780:7:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_fromMemory",
                                  "nativeSrc": "1727:28:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1727:28:8"
                                },
                                "nativeSrc": "1727:61:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1727:61:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1717:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1717:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1797:41:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1797:41:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1823:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1823:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1834:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1834:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1819:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1819:3:8"
                                    },
                                    "nativeSrc": "1819:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1819:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1813:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1813:5:8"
                                },
                                "nativeSrc": "1813:25:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1813:25:8"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nativeSrc": "1801:8:8",
                                  "nodeType": "YulTypedName",
                                  "src": "1801:8:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1883:16:8",
                                "nodeType": "YulBlock",
                                "src": "1883:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1892:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1892:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1895:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1895:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1885:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1885:6:8"
                                      },
                                      "nativeSrc": "1885:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1885:12:8"
                                    },
                                    "nativeSrc": "1885:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1885:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nativeSrc": "1853:8:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1853:8:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1871:2:8",
                                            "nodeType": "YulLiteral",
                                            "src": "1871:2:8",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1875:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "1875:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "1867:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1867:3:8"
                                        },
                                        "nativeSrc": "1867:10:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1867:10:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1879:1:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1879:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1863:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1863:3:8"
                                    },
                                    "nativeSrc": "1863:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1863:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1850:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1850:2:8"
                                },
                                "nativeSrc": "1850:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1850:32:8"
                              },
                              "nativeSrc": "1847:52:8",
                              "nodeType": "YulIf",
                              "src": "1847:52:8"
                            },
                            {
                              "nativeSrc": "1908:73:8",
                              "nodeType": "YulAssignment",
                              "src": "1908:73:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1951:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1951:9:8"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nativeSrc": "1962:8:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1962:8:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1947:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1947:3:8"
                                    },
                                    "nativeSrc": "1947:24:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1947:24:8"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "1973:7:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1973:7:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_fromMemory",
                                  "nativeSrc": "1918:28:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1918:28:8"
                                },
                                "nativeSrc": "1918:63:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1918:63:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "1908:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1908:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1990:35:8",
                              "nodeType": "YulAssignment",
                              "src": "1990:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2010:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2010:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2021:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2021:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2006:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2006:3:8"
                                    },
                                    "nativeSrc": "2006:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2006:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2000:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2000:5:8"
                                },
                                "nativeSrc": "2000:25:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2000:25:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nativeSrc": "1990:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1990:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2034:36:8",
                              "nodeType": "YulAssignment",
                              "src": "2034:36:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2054:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2054:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2065:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2065:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2050:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2050:3:8"
                                    },
                                    "nativeSrc": "2050:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2050:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2044:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2044:5:8"
                                },
                                "nativeSrc": "2044:26:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2044:26:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nativeSrc": "2034:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2034:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2079:36:8",
                              "nodeType": "YulAssignment",
                              "src": "2079:36:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2099:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2099:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2110:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2110:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2095:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2095:3:8"
                                    },
                                    "nativeSrc": "2095:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2095:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2089:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2089:5:8"
                                },
                                "nativeSrc": "2089:26:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2089:26:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nativeSrc": "2079:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2079:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2124:36:8",
                              "nodeType": "YulAssignment",
                              "src": "2124:36:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2144:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2144:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2155:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2155:3:8",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2140:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2140:3:8"
                                    },
                                    "nativeSrc": "2140:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2140:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2134:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2134:5:8"
                                },
                                "nativeSrc": "2134:26:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2134:26:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value6",
                                  "nativeSrc": "2124:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2124:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2169:68:8",
                              "nodeType": "YulAssignment",
                              "src": "2169:68:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2221:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2221:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2232:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2232:3:8",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2217:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2217:3:8"
                                    },
                                    "nativeSrc": "2217:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2217:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_contract_IERC20_fromMemory",
                                  "nativeSrc": "2179:37:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2179:37:8"
                                },
                                "nativeSrc": "2179:58:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2179:58:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value7",
                                  "nativeSrc": "2169:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2169:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2246:36:8",
                              "nodeType": "YulAssignment",
                              "src": "2246:36:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2266:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2266:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2277:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2277:3:8",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2262:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2262:3:8"
                                    },
                                    "nativeSrc": "2262:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2262:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2256:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2256:5:8"
                                },
                                "nativeSrc": "2256:26:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2256:26:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value8",
                                  "nativeSrc": "2246:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2246:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2291:68:8",
                              "nodeType": "YulAssignment",
                              "src": "2291:68:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2343:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2343:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2354:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2354:3:8",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2339:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2339:3:8"
                                    },
                                    "nativeSrc": "2339:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2339:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_contract_IERC20_fromMemory",
                                  "nativeSrc": "2301:37:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2301:37:8"
                                },
                                "nativeSrc": "2301:58:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2301:58:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value9",
                                  "nativeSrc": "2291:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2291:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2368:37:8",
                              "nodeType": "YulAssignment",
                              "src": "2368:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2389:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2389:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2400:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2400:3:8",
                                        "type": "",
                                        "value": "320"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2385:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2385:3:8"
                                    },
                                    "nativeSrc": "2385:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2385:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2379:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2379:5:8"
                                },
                                "nativeSrc": "2379:26:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2379:26:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value10",
                                  "nativeSrc": "2368:7:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2368:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IERC20_$861t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_addresst_uint256t_addresst_uint256_fromMemory",
                        "nativeSrc": "1185:1226:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1356:9:8",
                            "nodeType": "YulTypedName",
                            "src": "1356:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1367:7:8",
                            "nodeType": "YulTypedName",
                            "src": "1367:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1379:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1379:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1387:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1387:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1395:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1395:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nativeSrc": "1403:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1403:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nativeSrc": "1411:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1411:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nativeSrc": "1419:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1419:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nativeSrc": "1427:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1427:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nativeSrc": "1435:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1435:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nativeSrc": "1443:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1443:6:8",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nativeSrc": "1451:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1451:6:8",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nativeSrc": "1459:7:8",
                            "nodeType": "YulTypedName",
                            "src": "1459:7:8",
                            "type": ""
                          }
                        ],
                        "src": "1185:1226:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2471:325:8",
                          "nodeType": "YulBlock",
                          "src": "2471:325:8",
                          "statements": [
                            {
                              "nativeSrc": "2481:22:8",
                              "nodeType": "YulAssignment",
                              "src": "2481:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2495:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2495:1:8",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "2498:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2498:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "2491:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2491:3:8"
                                },
                                "nativeSrc": "2491:12:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2491:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "2481:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2481:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2512:38:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2512:38:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "2542:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2542:4:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2548:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2548:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "2538:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2538:3:8"
                                },
                                "nativeSrc": "2538:12:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2538:12:8"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "2516:18:8",
                                  "nodeType": "YulTypedName",
                                  "src": "2516:18:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2589:31:8",
                                "nodeType": "YulBlock",
                                "src": "2589:31:8",
                                "statements": [
                                  {
                                    "nativeSrc": "2591:27:8",
                                    "nodeType": "YulAssignment",
                                    "src": "2591:27:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "2605:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "2605:6:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2613:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2613:4:8",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "2601:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2601:3:8"
                                      },
                                      "nativeSrc": "2601:17:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2601:17:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "2591:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2591:6:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "2569:18:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2569:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "2562:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2562:6:8"
                                },
                                "nativeSrc": "2562:26:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2562:26:8"
                              },
                              "nativeSrc": "2559:61:8",
                              "nodeType": "YulIf",
                              "src": "2559:61:8"
                            },
                            {
                              "body": {
                                "nativeSrc": "2679:111:8",
                                "nodeType": "YulBlock",
                                "src": "2679:111:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2700:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2700:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2707:3:8",
                                              "nodeType": "YulLiteral",
                                              "src": "2707:3:8",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2712:10:8",
                                              "nodeType": "YulLiteral",
                                              "src": "2712:10:8",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "2703:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "2703:3:8"
                                          },
                                          "nativeSrc": "2703:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2703:20:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2693:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2693:6:8"
                                      },
                                      "nativeSrc": "2693:31:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2693:31:8"
                                    },
                                    "nativeSrc": "2693:31:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2693:31:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2744:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2744:1:8",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2747:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2747:4:8",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2737:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2737:6:8"
                                      },
                                      "nativeSrc": "2737:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2737:15:8"
                                    },
                                    "nativeSrc": "2737:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2737:15:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2772:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2772:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2775:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2775:4:8",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2765:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2765:6:8"
                                      },
                                      "nativeSrc": "2765:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2765:15:8"
                                    },
                                    "nativeSrc": "2765:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2765:15:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "2635:18:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2635:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "2658:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2658:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2666:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2666:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "2655:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2655:2:8"
                                    },
                                    "nativeSrc": "2655:14:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2655:14:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "2632:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2632:2:8"
                                },
                                "nativeSrc": "2632:38:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2632:38:8"
                              },
                              "nativeSrc": "2629:161:8",
                              "nodeType": "YulIf",
                              "src": "2629:161:8"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "2416:380:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "2451:4:8",
                            "nodeType": "YulTypedName",
                            "src": "2451:4:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "2460:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2460:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2416:380:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2857:65:8",
                          "nodeType": "YulBlock",
                          "src": "2857:65:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2874:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2874:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nativeSrc": "2877:3:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2877:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2867:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2867:6:8"
                                },
                                "nativeSrc": "2867:14:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2867:14:8"
                              },
                              "nativeSrc": "2867:14:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "2867:14:8"
                            },
                            {
                              "nativeSrc": "2890:26:8",
                              "nodeType": "YulAssignment",
                              "src": "2890:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2908:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2908:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2911:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2911:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nativeSrc": "2898:9:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2898:9:8"
                                },
                                "nativeSrc": "2898:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2898:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "2890:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2890:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nativeSrc": "2801:121:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nativeSrc": "2840:3:8",
                            "nodeType": "YulTypedName",
                            "src": "2840:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nativeSrc": "2848:4:8",
                            "nodeType": "YulTypedName",
                            "src": "2848:4:8",
                            "type": ""
                          }
                        ],
                        "src": "2801:121:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3008:462:8",
                          "nodeType": "YulBlock",
                          "src": "3008:462:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3041:423:8",
                                "nodeType": "YulBlock",
                                "src": "3041:423:8",
                                "statements": [
                                  {
                                    "nativeSrc": "3055:11:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "3055:11:8",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3065:1:8",
                                      "nodeType": "YulLiteral",
                                      "src": "3065:1:8",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "3059:2:8",
                                        "nodeType": "YulTypedName",
                                        "src": "3059:2:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3086:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3086:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "array",
                                          "nativeSrc": "3089:5:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3089:5:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3079:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3079:6:8"
                                      },
                                      "nativeSrc": "3079:16:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3079:16:8"
                                    },
                                    "nativeSrc": "3079:16:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3079:16:8"
                                  },
                                  {
                                    "nativeSrc": "3108:30:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "3108:30:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3130:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3130:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3133:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3133:4:8",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nativeSrc": "3120:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3120:9:8"
                                      },
                                      "nativeSrc": "3120:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3120:18:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "3112:4:8",
                                        "nodeType": "YulTypedName",
                                        "src": "3112:4:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3151:57:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "3151:57:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "3174:4:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3174:4:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3184:1:8",
                                              "nodeType": "YulLiteral",
                                              "src": "3184:1:8",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nativeSrc": "3191:10:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3191:10:8"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "3203:2:8",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3203:2:8",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "3187:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3187:3:8"
                                              },
                                              "nativeSrc": "3187:19:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "3187:19:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "3180:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3180:3:8"
                                          },
                                          "nativeSrc": "3180:27:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3180:27:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "3170:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3170:3:8"
                                      },
                                      "nativeSrc": "3170:38:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3170:38:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nativeSrc": "3155:11:8",
                                        "nodeType": "YulTypedName",
                                        "src": "3155:11:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "3245:23:8",
                                      "nodeType": "YulBlock",
                                      "src": "3245:23:8",
                                      "statements": [
                                        {
                                          "nativeSrc": "3247:19:8",
                                          "nodeType": "YulAssignment",
                                          "src": "3247:19:8",
                                          "value": {
                                            "name": "data",
                                            "nativeSrc": "3262:4:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3262:4:8"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nativeSrc": "3247:11:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "3247:11:8"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nativeSrc": "3227:10:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3227:10:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3239:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3239:4:8",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "3224:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3224:2:8"
                                      },
                                      "nativeSrc": "3224:20:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3224:20:8"
                                    },
                                    "nativeSrc": "3221:47:8",
                                    "nodeType": "YulIf",
                                    "src": "3221:47:8"
                                  },
                                  {
                                    "nativeSrc": "3281:41:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "3281:41:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "3295:4:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3295:4:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3305:1:8",
                                              "nodeType": "YulLiteral",
                                              "src": "3305:1:8",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nativeSrc": "3312:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3312:3:8"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "3317:2:8",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3317:2:8",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "3308:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3308:3:8"
                                              },
                                              "nativeSrc": "3308:12:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "3308:12:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "3301:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3301:3:8"
                                          },
                                          "nativeSrc": "3301:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3301:20:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "3291:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3291:3:8"
                                      },
                                      "nativeSrc": "3291:31:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3291:31:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "3285:2:8",
                                        "nodeType": "YulTypedName",
                                        "src": "3285:2:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3335:24:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "3335:24:8",
                                    "value": {
                                      "name": "deleteStart",
                                      "nativeSrc": "3348:11:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3348:11:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "3339:5:8",
                                        "nodeType": "YulTypedName",
                                        "src": "3339:5:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "3433:21:8",
                                      "nodeType": "YulBlock",
                                      "src": "3433:21:8",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "3442:5:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3442:5:8"
                                              },
                                              {
                                                "name": "_1",
                                                "nativeSrc": "3449:2:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3449:2:8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "3435:6:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "3435:6:8"
                                            },
                                            "nativeSrc": "3435:17:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3435:17:8"
                                          },
                                          "nativeSrc": "3435:17:8",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "3435:17:8"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "3383:5:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3383:5:8"
                                        },
                                        {
                                          "name": "_2",
                                          "nativeSrc": "3390:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3390:2:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "3380:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3380:2:8"
                                      },
                                      "nativeSrc": "3380:13:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3380:13:8"
                                    },
                                    "nativeSrc": "3372:82:8",
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nativeSrc": "3394:26:8",
                                      "nodeType": "YulBlock",
                                      "src": "3394:26:8",
                                      "statements": [
                                        {
                                          "nativeSrc": "3396:22:8",
                                          "nodeType": "YulAssignment",
                                          "src": "3396:22:8",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "3409:5:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3409:5:8"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3416:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "3416:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "3405:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "3405:3:8"
                                            },
                                            "nativeSrc": "3405:13:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3405:13:8"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nativeSrc": "3396:5:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "3396:5:8"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nativeSrc": "3376:3:8",
                                      "nodeType": "YulBlock",
                                      "src": "3376:3:8",
                                      "statements": []
                                    },
                                    "src": "3372:82:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nativeSrc": "3024:3:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3024:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3029:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3029:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3021:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3021:2:8"
                                },
                                "nativeSrc": "3021:11:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3021:11:8"
                              },
                              "nativeSrc": "3018:446:8",
                              "nodeType": "YulIf",
                              "src": "3018:446:8"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nativeSrc": "2927:543:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nativeSrc": "2980:5:8",
                            "nodeType": "YulTypedName",
                            "src": "2980:5:8",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "2987:3:8",
                            "nodeType": "YulTypedName",
                            "src": "2987:3:8",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nativeSrc": "2992:10:8",
                            "nodeType": "YulTypedName",
                            "src": "2992:10:8",
                            "type": ""
                          }
                        ],
                        "src": "2927:543:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3560:81:8",
                          "nodeType": "YulBlock",
                          "src": "3560:81:8",
                          "statements": [
                            {
                              "nativeSrc": "3570:65:8",
                              "nodeType": "YulAssignment",
                              "src": "3570:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "3585:4:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3585:4:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "3603:1:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3603:1:8",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nativeSrc": "3606:3:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3606:3:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "3599:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3599:3:8"
                                                },
                                                "nativeSrc": "3599:11:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3599:11:8"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "3616:1:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3616:1:8",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "3612:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3612:3:8"
                                                },
                                                "nativeSrc": "3612:6:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3612:6:8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nativeSrc": "3595:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "3595:3:8"
                                            },
                                            "nativeSrc": "3595:24:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3595:24:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "3591:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3591:3:8"
                                        },
                                        "nativeSrc": "3591:29:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3591:29:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3581:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3581:3:8"
                                    },
                                    "nativeSrc": "3581:40:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3581:40:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3627:1:8",
                                        "nodeType": "YulLiteral",
                                        "src": "3627:1:8",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nativeSrc": "3630:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3630:3:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "3623:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3623:3:8"
                                    },
                                    "nativeSrc": "3623:11:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3623:11:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "3578:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3578:2:8"
                                },
                                "nativeSrc": "3578:57:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3578:57:8"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nativeSrc": "3570:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3570:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nativeSrc": "3475:166:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "3537:4:8",
                            "nodeType": "YulTypedName",
                            "src": "3537:4:8",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "3543:3:8",
                            "nodeType": "YulTypedName",
                            "src": "3543:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nativeSrc": "3551:4:8",
                            "nodeType": "YulTypedName",
                            "src": "3551:4:8",
                            "type": ""
                          }
                        ],
                        "src": "3475:166:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3742:1249:8",
                          "nodeType": "YulBlock",
                          "src": "3742:1249:8",
                          "statements": [
                            {
                              "nativeSrc": "3752:24:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3752:24:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "3772:3:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3772:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "3766:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3766:5:8"
                                },
                                "nativeSrc": "3766:10:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3766:10:8"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "3756:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3756:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3819:22:8",
                                "nodeType": "YulBlock",
                                "src": "3819:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "3821:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3821:16:8"
                                      },
                                      "nativeSrc": "3821:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3821:18:8"
                                    },
                                    "nativeSrc": "3821:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3821:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "3791:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3791:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3807:2:8",
                                            "nodeType": "YulLiteral",
                                            "src": "3807:2:8",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3811:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "3811:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "3803:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3803:3:8"
                                        },
                                        "nativeSrc": "3803:10:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3803:10:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3815:1:8",
                                        "nodeType": "YulLiteral",
                                        "src": "3815:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3799:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3799:3:8"
                                    },
                                    "nativeSrc": "3799:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3799:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3788:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3788:2:8"
                                },
                                "nativeSrc": "3788:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3788:30:8"
                              },
                              "nativeSrc": "3785:56:8",
                              "nodeType": "YulIf",
                              "src": "3785:56:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "3894:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3894:4:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "3932:4:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3932:4:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nativeSrc": "3926:5:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3926:5:8"
                                        },
                                        "nativeSrc": "3926:11:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3926:11:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nativeSrc": "3900:25:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3900:25:8"
                                    },
                                    "nativeSrc": "3900:38:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3900:38:8"
                                  },
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "3940:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3940:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nativeSrc": "3850:43:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3850:43:8"
                                },
                                "nativeSrc": "3850:97:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3850:97:8"
                              },
                              "nativeSrc": "3850:97:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3850:97:8"
                            },
                            {
                              "nativeSrc": "3956:18:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3956:18:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3973:1:8",
                                "nodeType": "YulLiteral",
                                "src": "3973:1:8",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "3960:9:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3960:9:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3983:23:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3983:23:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "4002:4:8",
                                "nodeType": "YulLiteral",
                                "src": "4002:4:8",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset_1",
                                  "nativeSrc": "3987:11:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3987:11:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4015:17:8",
                              "nodeType": "YulAssignment",
                              "src": "4015:17:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "4028:4:8",
                                "nodeType": "YulLiteral",
                                "src": "4028:4:8",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "4015:9:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4015:9:8"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "4078:656:8",
                                    "nodeType": "YulBlock",
                                    "src": "4078:656:8",
                                    "statements": [
                                      {
                                        "nativeSrc": "4092:35:8",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "4092:35:8",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "4111:6:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4111:6:8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "4123:2:8",
                                                  "nodeType": "YulLiteral",
                                                  "src": "4123:2:8",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "4119:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "4119:3:8"
                                              },
                                              "nativeSrc": "4119:7:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "4119:7:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nativeSrc": "4107:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4107:3:8"
                                          },
                                          "nativeSrc": "4107:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4107:20:8"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "4096:7:8",
                                            "nodeType": "YulTypedName",
                                            "src": "4096:7:8",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "4140:49:8",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "4140:49:8",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "4184:4:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4184:4:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nativeSrc": "4154:29:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4154:29:8"
                                          },
                                          "nativeSrc": "4154:35:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4154:35:8"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nativeSrc": "4144:6:8",
                                            "nodeType": "YulTypedName",
                                            "src": "4144:6:8",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "4202:10:8",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "4202:10:8",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "4211:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4211:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "4206:1:8",
                                            "nodeType": "YulTypedName",
                                            "src": "4206:1:8",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "4289:172:8",
                                          "nodeType": "YulBlock",
                                          "src": "4289:172:8",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "4314:6:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4314:6:8"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nativeSrc": "4332:3:8",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4332:3:8"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nativeSrc": "4337:9:8",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4337:9:8"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nativeSrc": "4328:3:8",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "4328:3:8"
                                                        },
                                                        "nativeSrc": "4328:19:8",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "4328:19:8"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "4322:5:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4322:5:8"
                                                    },
                                                    "nativeSrc": "4322:26:8",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4322:26:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "4307:6:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4307:6:8"
                                                },
                                                "nativeSrc": "4307:42:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4307:42:8"
                                              },
                                              "nativeSrc": "4307:42:8",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "4307:42:8"
                                            },
                                            {
                                              "nativeSrc": "4366:24:8",
                                              "nodeType": "YulAssignment",
                                              "src": "4366:24:8",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "4380:6:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4380:6:8"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "4388:1:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "4388:1:8",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "4376:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4376:3:8"
                                                },
                                                "nativeSrc": "4376:14:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4376:14:8"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "4366:6:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4366:6:8"
                                                }
                                              ]
                                            },
                                            {
                                              "nativeSrc": "4407:40:8",
                                              "nodeType": "YulAssignment",
                                              "src": "4407:40:8",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "4424:9:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4424:9:8"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nativeSrc": "4435:11:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4435:11:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "4420:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4420:3:8"
                                                },
                                                "nativeSrc": "4420:27:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4420:27:8"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nativeSrc": "4407:9:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4407:9:8"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "4236:1:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4236:1:8"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "4239:7:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4239:7:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "4233:2:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4233:2:8"
                                          },
                                          "nativeSrc": "4233:14:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4233:14:8"
                                        },
                                        "nativeSrc": "4225:236:8",
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nativeSrc": "4248:28:8",
                                          "nodeType": "YulBlock",
                                          "src": "4248:28:8",
                                          "statements": [
                                            {
                                              "nativeSrc": "4250:24:8",
                                              "nodeType": "YulAssignment",
                                              "src": "4250:24:8",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nativeSrc": "4259:1:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4259:1:8"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nativeSrc": "4262:11:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4262:11:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "4255:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4255:3:8"
                                                },
                                                "nativeSrc": "4255:19:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4255:19:8"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "4250:1:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4250:1:8"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nativeSrc": "4229:3:8",
                                          "nodeType": "YulBlock",
                                          "src": "4229:3:8",
                                          "statements": []
                                        },
                                        "src": "4225:236:8"
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "4509:166:8",
                                          "nodeType": "YulBlock",
                                          "src": "4509:166:8",
                                          "statements": [
                                            {
                                              "nativeSrc": "4527:43:8",
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "4527:43:8",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "4554:3:8",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4554:3:8"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "4559:9:8",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4559:9:8"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "4550:3:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4550:3:8"
                                                    },
                                                    "nativeSrc": "4550:19:8",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4550:19:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "4544:5:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4544:5:8"
                                                },
                                                "nativeSrc": "4544:26:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4544:26:8"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nativeSrc": "4531:9:8",
                                                  "nodeType": "YulTypedName",
                                                  "src": "4531:9:8",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "4594:6:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4594:6:8"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nativeSrc": "4606:9:8",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4606:9:8"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nativeSrc": "4633:1:8",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "4633:1:8",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nativeSrc": "4636:6:8",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4636:6:8"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nativeSrc": "4629:3:8",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "4629:3:8"
                                                                    },
                                                                    "nativeSrc": "4629:14:8",
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4629:14:8"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "4645:3:8",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4645:3:8",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nativeSrc": "4625:3:8",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4625:3:8"
                                                                },
                                                                "nativeSrc": "4625:24:8",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "4625:24:8"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "4655:1:8",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4655:1:8",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nativeSrc": "4651:3:8",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4651:3:8"
                                                                },
                                                                "nativeSrc": "4651:6:8",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "4651:6:8"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nativeSrc": "4621:3:8",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "4621:3:8"
                                                            },
                                                            "nativeSrc": "4621:37:8",
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4621:37:8"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nativeSrc": "4617:3:8",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "4617:3:8"
                                                        },
                                                        "nativeSrc": "4617:42:8",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "4617:42:8"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nativeSrc": "4602:3:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4602:3:8"
                                                    },
                                                    "nativeSrc": "4602:58:8",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4602:58:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "4587:6:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4587:6:8"
                                                },
                                                "nativeSrc": "4587:74:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4587:74:8"
                                              },
                                              "nativeSrc": "4587:74:8",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "4587:74:8"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "4480:7:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4480:7:8"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "4489:6:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4489:6:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "4477:2:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4477:2:8"
                                          },
                                          "nativeSrc": "4477:19:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4477:19:8"
                                        },
                                        "nativeSrc": "4474:201:8",
                                        "nodeType": "YulIf",
                                        "src": "4474:201:8"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "4695:4:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4695:4:8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "4709:1:8",
                                                      "nodeType": "YulLiteral",
                                                      "src": "4709:1:8",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nativeSrc": "4712:6:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4712:6:8"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nativeSrc": "4705:3:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4705:3:8"
                                                  },
                                                  "nativeSrc": "4705:14:8",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "4705:14:8"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "4721:1:8",
                                                  "nodeType": "YulLiteral",
                                                  "src": "4721:1:8",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "4701:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "4701:3:8"
                                              },
                                              "nativeSrc": "4701:22:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "4701:22:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "4688:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4688:6:8"
                                          },
                                          "nativeSrc": "4688:36:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4688:36:8"
                                        },
                                        "nativeSrc": "4688:36:8",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4688:36:8"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "4071:663:8",
                                  "nodeType": "YulCase",
                                  "src": "4071:663:8",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "4076:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "4076:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "4751:234:8",
                                    "nodeType": "YulBlock",
                                    "src": "4751:234:8",
                                    "statements": [
                                      {
                                        "nativeSrc": "4765:14:8",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "4765:14:8",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "4778:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4778:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "4769:5:8",
                                            "nodeType": "YulTypedName",
                                            "src": "4769:5:8",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "4814:67:8",
                                          "nodeType": "YulBlock",
                                          "src": "4814:67:8",
                                          "statements": [
                                            {
                                              "nativeSrc": "4832:35:8",
                                              "nodeType": "YulAssignment",
                                              "src": "4832:35:8",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "4851:3:8",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4851:3:8"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "4856:9:8",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4856:9:8"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "4847:3:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4847:3:8"
                                                    },
                                                    "nativeSrc": "4847:19:8",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4847:19:8"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "4841:5:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4841:5:8"
                                                },
                                                "nativeSrc": "4841:26:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4841:26:8"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "4832:5:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4832:5:8"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nativeSrc": "4795:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4795:6:8"
                                        },
                                        "nativeSrc": "4792:89:8",
                                        "nodeType": "YulIf",
                                        "src": "4792:89:8"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "4901:4:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4901:4:8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "4960:5:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4960:5:8"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "4967:6:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4967:6:8"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nativeSrc": "4907:52:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "4907:52:8"
                                              },
                                              "nativeSrc": "4907:67:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "4907:67:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "4894:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4894:6:8"
                                          },
                                          "nativeSrc": "4894:81:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4894:81:8"
                                        },
                                        "nativeSrc": "4894:81:8",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4894:81:8"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "4743:242:8",
                                  "nodeType": "YulCase",
                                  "src": "4743:242:8",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "4051:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4051:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4059:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "4059:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4048:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4048:2:8"
                                },
                                "nativeSrc": "4048:14:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4048:14:8"
                              },
                              "nativeSrc": "4041:944:8",
                              "nodeType": "YulSwitch",
                              "src": "4041:944:8"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nativeSrc": "3646:1345:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "3727:4:8",
                            "nodeType": "YulTypedName",
                            "src": "3727:4:8",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nativeSrc": "3733:3:8",
                            "nodeType": "YulTypedName",
                            "src": "3733:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3646:1345:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "5170:225:8",
                          "nodeType": "YulBlock",
                          "src": "5170:225:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5187:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5187:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5198:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5198:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5180:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5180:6:8"
                                },
                                "nativeSrc": "5180:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5180:21:8"
                              },
                              "nativeSrc": "5180:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5180:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5221:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5221:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5232:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5232:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5217:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5217:3:8"
                                    },
                                    "nativeSrc": "5217:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5217:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5237:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5237:2:8",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5210:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5210:6:8"
                                },
                                "nativeSrc": "5210:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5210:30:8"
                              },
                              "nativeSrc": "5210:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5210:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5260:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5260:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5271:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5271:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5256:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5256:3:8"
                                    },
                                    "nativeSrc": "5256:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5256:18:8"
                                  },
                                  {
                                    "hexValue": "456e642074696d652063616e2774206265206265666f72652073746172742074",
                                    "kind": "string",
                                    "nativeSrc": "5276:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5276:34:8",
                                    "type": "",
                                    "value": "End time can't be before start t"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5249:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5249:6:8"
                                },
                                "nativeSrc": "5249:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5249:62:8"
                              },
                              "nativeSrc": "5249:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5249:62:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5331:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5331:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5342:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5342:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5327:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5327:3:8"
                                    },
                                    "nativeSrc": "5327:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5327:18:8"
                                  },
                                  {
                                    "hexValue": "696d65",
                                    "kind": "string",
                                    "nativeSrc": "5347:5:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5347:5:8",
                                    "type": "",
                                    "value": "ime"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5320:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5320:6:8"
                                },
                                "nativeSrc": "5320:33:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5320:33:8"
                              },
                              "nativeSrc": "5320:33:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5320:33:8"
                            },
                            {
                              "nativeSrc": "5362:27:8",
                              "nodeType": "YulAssignment",
                              "src": "5362:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5374:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5374:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5385:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5385:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5370:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5370:3:8"
                                },
                                "nativeSrc": "5370:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5370:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5362:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5362:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f4e590379f0a37ec17a3b1930fd6c3b48efbea0ecce41aca8776cc614a29878d__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "4996:399:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5147:9:8",
                            "nodeType": "YulTypedName",
                            "src": "5147:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5161:4:8",
                            "nodeType": "YulTypedName",
                            "src": "5161:4:8",
                            "type": ""
                          }
                        ],
                        "src": "4996:399:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "5574:172:8",
                          "nodeType": "YulBlock",
                          "src": "5574:172:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5591:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5591:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5602:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5602:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5584:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5584:6:8"
                                },
                                "nativeSrc": "5584:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5584:21:8"
                              },
                              "nativeSrc": "5584:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5584:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5625:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5625:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5636:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5636:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5621:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5621:3:8"
                                    },
                                    "nativeSrc": "5621:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5621:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5641:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5641:2:8",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5614:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5614:6:8"
                                },
                                "nativeSrc": "5614:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5614:30:8"
                              },
                              "nativeSrc": "5614:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5614:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5664:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5664:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5675:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5675:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5660:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5660:3:8"
                                    },
                                    "nativeSrc": "5660:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5660:18:8"
                                  },
                                  {
                                    "hexValue": "43616e277420736574207a65726f2061646472657373",
                                    "kind": "string",
                                    "nativeSrc": "5680:24:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5680:24:8",
                                    "type": "",
                                    "value": "Can't set zero address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5653:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5653:6:8"
                                },
                                "nativeSrc": "5653:52:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5653:52:8"
                              },
                              "nativeSrc": "5653:52:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5653:52:8"
                            },
                            {
                              "nativeSrc": "5714:26:8",
                              "nodeType": "YulAssignment",
                              "src": "5714:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5726:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5726:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5737:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5737:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5722:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5722:3:8"
                                },
                                "nativeSrc": "5722:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5722:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5714:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5714:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_617f1f7d3716b74b052acf37f17eb17554e6bd064bb0afc56043858632e11c41__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "5400:346:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5551:9:8",
                            "nodeType": "YulTypedName",
                            "src": "5551:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5565:4:8",
                            "nodeType": "YulTypedName",
                            "src": "5565:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5400:346:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "5797:171:8",
                          "nodeType": "YulBlock",
                          "src": "5797:171:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "5828:111:8",
                                "nodeType": "YulBlock",
                                "src": "5828:111:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5849:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "5849:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "5856:3:8",
                                              "nodeType": "YulLiteral",
                                              "src": "5856:3:8",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "5861:10:8",
                                              "nodeType": "YulLiteral",
                                              "src": "5861:10:8",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "5852:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "5852:3:8"
                                          },
                                          "nativeSrc": "5852:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "5852:20:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "5842:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5842:6:8"
                                      },
                                      "nativeSrc": "5842:31:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5842:31:8"
                                    },
                                    "nativeSrc": "5842:31:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5842:31:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5893:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "5893:1:8",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5896:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "5896:4:8",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "5886:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5886:6:8"
                                      },
                                      "nativeSrc": "5886:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5886:15:8"
                                    },
                                    "nativeSrc": "5886:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5886:15:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5921:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "5921:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5924:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "5924:4:8",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "5914:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5914:6:8"
                                      },
                                      "nativeSrc": "5914:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5914:15:8"
                                    },
                                    "nativeSrc": "5914:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5914:15:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "5817:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5817:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "5810:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5810:6:8"
                                },
                                "nativeSrc": "5810:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5810:9:8"
                              },
                              "nativeSrc": "5807:132:8",
                              "nodeType": "YulIf",
                              "src": "5807:132:8"
                            },
                            {
                              "nativeSrc": "5948:14:8",
                              "nodeType": "YulAssignment",
                              "src": "5948:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5957:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5957:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "5960:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5960:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nativeSrc": "5953:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5953:3:8"
                                },
                                "nativeSrc": "5953:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5953:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nativeSrc": "5948:1:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5948:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nativeSrc": "5751:217:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "5782:1:8",
                            "nodeType": "YulTypedName",
                            "src": "5782:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "5785:1:8",
                            "nodeType": "YulTypedName",
                            "src": "5785:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nativeSrc": "5791:1:8",
                            "nodeType": "YulTypedName",
                            "src": "5791:1:8",
                            "type": ""
                          }
                        ],
                        "src": "5751:217:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "6074:102:8",
                          "nodeType": "YulBlock",
                          "src": "6074:102:8",
                          "statements": [
                            {
                              "nativeSrc": "6084:26:8",
                              "nodeType": "YulAssignment",
                              "src": "6084:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6096:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6096:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6107:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6107:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6092:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6092:3:8"
                                },
                                "nativeSrc": "6092:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6092:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "6084:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6084:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6126:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6126:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "6141:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6141:6:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "6157:3:8",
                                                "nodeType": "YulLiteral",
                                                "src": "6157:3:8",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "6162:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "6162:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "6153:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "6153:3:8"
                                            },
                                            "nativeSrc": "6153:11:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "6153:11:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6166:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "6166:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "6149:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "6149:3:8"
                                        },
                                        "nativeSrc": "6149:19:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6149:19:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "6137:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6137:3:8"
                                    },
                                    "nativeSrc": "6137:32:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6137:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6119:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6119:6:8"
                                },
                                "nativeSrc": "6119:51:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6119:51:8"
                              },
                              "nativeSrc": "6119:51:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6119:51:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "5973:203:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "6043:9:8",
                            "nodeType": "YulTypedName",
                            "src": "6043:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "6054:6:8",
                            "nodeType": "YulTypedName",
                            "src": "6054:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "6065:4:8",
                            "nodeType": "YulTypedName",
                            "src": "6065:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5973:203:8"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_contract_IERC20_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$861t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_addresst_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 352) { revert(0, 0) }\n        value0 := abi_decode_contract_IERC20_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        value6 := mload(add(headStart, 192))\n        value7 := abi_decode_contract_IERC20_fromMemory(add(headStart, 224))\n        value8 := mload(add(headStart, 256))\n        value9 := abi_decode_contract_IERC20_fromMemory(add(headStart, 288))\n        value10 := mload(add(headStart, 320))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f4e590379f0a37ec17a3b1930fd6c3b48efbea0ecce41aca8776cc614a29878d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"End time can't be before start t\")\n        mstore(add(headStart, 96), \"ime\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_617f1f7d3716b74b052acf37f17eb17554e6bd064bb0afc56043858632e11c41__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Can't set zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b506040516200278e3803806200278e833981016040819052620000349162000347565b898962000041336200019d565b60046200004f8382620004be565b5060056200005e8282620004be565b5050600160065550858511620000c75760405162461bcd60e51b815260206004820152602360248201527f456e642074696d652063616e2774206265206265666f72652073746172742074604482015262696d6560e81b60648201526084015b60405180910390fd5b6001600160a01b038b166200011f5760405162461bcd60e51b815260206004820152601660248201527f43616e277420736574207a65726f2061646472657373000000000000000000006044820152606401620000be565b600780546001600160a01b0319166001600160a01b038d161790556200014584620001ed565b600c889055601a8790556200015c600a896200058a565b601b55600a95909555600b9390935560085550600980546001600160a01b0319166001600160a01b03909216919091179055600f5550620005ad9350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001f762000231565b6001600160a01b0381166200022357604051631e4fbdf760e01b815260006004820152602401620000be565b6200022e816200019d565b50565b6000546001600160a01b03163314620002605760405163118cdaa760e01b8152336004820152602401620000be565b565b80516001600160a01b03811681146200027a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a757600080fd5b81516001600160401b0380821115620002c457620002c46200027f565b604051601f8301601f19908116603f01168101908282118183101715620002ef57620002ef6200027f565b81604052838152602092508660208588010111156200030d57600080fd5b600091505b8382101562000331578582018301518183018401529082019062000312565b6000602085830101528094505050505092915050565b60008060008060008060008060008060006101608c8e0312156200036a57600080fd5b620003758c62000262565b60208d0151909b506001600160401b038111156200039257600080fd5b620003a08e828f0162000295565b60408e0151909b5090506001600160401b03811115620003bf57600080fd5b620003cd8e828f0162000295565b99505060608c0151975060808c0151965060a08c0151955060c08c01519450620003fa60e08d0162000262565b93506101008c01519250620004136101208d0162000262565b91506101408c015190509295989b509295989b9093969950565b600181811c908216806200044257607f821691505b6020821081036200046357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004b9576000816000526020600020601f850160051c81016020861015620004945750805b601f850160051c820191505b81811015620004b557828155600101620004a0565b5050505b505050565b81516001600160401b03811115620004da57620004da6200027f565b620004f281620004eb84546200042d565b8462000469565b602080601f8311600181146200052a5760008415620005115750858301515b600019600386901b1c1916600185901b178555620004b5565b600085815260208120601f198616915b828110156200055b578886015182559484019460019091019084016200053a565b50858210156200057a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082620005a857634e487b7160e01b600052601260045260246000fd5b500490565b6121d180620005bd6000396000f3fe6080604052600436106102765760003560e01c80637d549e991161014f578063baad7d85116100c1578063ccec37161161007a578063ccec3716146106e1578063cfb2b5e914610701578063dd62ed3e1461072e578063e7afeeed14610774578063f2fde38b146107a1578063fa2af9da146107c157600080fd5b8063baad7d851461063d578063c0daee491461065d578063c16a038314610673578063c2ced7e5146106a0578063c5c4744c146106b5578063ca34da20146106cb57600080fd5b806395ee12211161011357806395ee122114610580578063992642e51461059a5780639e7b08d5146105ba578063a9059cbb146105d0578063abd6192c146105f0578063ba53c2831461061d57600080fd5b80637d549e99146104ed5780638d4e4083146105035780638da5cb5b1461052357806394febbf31461055557806395d89b411461056b57600080fd5b8063313ce567116101e85780636d1e6516116101ac5780636d1e65161461044357806370a0823114610458578063715018a61461048e57806373aff5af146104a35780637921ba96146104b95780637b352962146104ce57600080fd5b8063313ce567146103ba57806343d25e82146103d657806349a1ae91146103ec5780634bb278f3146104015780635d97c1a01461041657600080fd5b8063106425091161023a578063106425091461032d578063156435541461034357806318160ddd1461035957806323b872dd1461036e57806326232a2e1461038e57806326493848146103a457600080fd5b80630614117a1461028257806306fdde031461029957806307e87512146102c4578063095ea7b3146102e85780631008e9611461031857600080fd5b3661027d57005b600080fd5b34801561028e57600080fd5b506102976107e1565b005b3480156102a557600080fd5b506102ae610862565b6040516102bb9190611e51565b60405180910390f35b3480156102d057600080fd5b506102da601a5481565b6040519081526020016102bb565b3480156102f457600080fd5b50610308610303366004611ebc565b6108f4565b60405190151581526020016102bb565b34801561032457600080fd5b5061029761090e565b34801561033957600080fd5b506102da600f5481565b34801561034f57600080fd5b506102da600b5481565b34801561036557600080fd5b506003546102da565b34801561037a57600080fd5b50610308610389366004611ee6565b6109e7565b34801561039a57600080fd5b506102da60085481565b3480156103b057600080fd5b506102da60125481565b3480156103c657600080fd5b50604051601281526020016102bb565b3480156103e257600080fd5b506102da60105481565b3480156103f857600080fd5b50610297610a0b565b34801561040d57600080fd5b50610297610afe565b34801561042257600080fd5b506102da610431366004611f22565b60166020526000908152604090205481565b34801561044f57600080fd5b50610297610b61565b34801561046457600080fd5b506102da610473366004611f22565b6001600160a01b031660009081526001602052604090205490565b34801561049a57600080fd5b50610297610c28565b3480156104af57600080fd5b506102da600e5481565b3480156104c557600080fd5b50610297610c3c565b3480156104da57600080fd5b5060145461030890610100900460ff1681565b3480156104f957600080fd5b506102da60135481565b34801561050f57600080fd5b506014546103089062010000900460ff1681565b34801561052f57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016102bb565b34801561056157600080fd5b506102da600a5481565b34801561057757600080fd5b506102ae610f33565b34801561058c57600080fd5b506014546103089060ff1681565b3480156105a657600080fd5b5060075461053d906001600160a01b031681565b3480156105c657600080fd5b506102da600c5481565b3480156105dc57600080fd5b506103086105eb366004611ebc565b610f42565b3480156105fc57600080fd5b506102da61060b366004611f22565b60196020526000908152604090205481565b34801561062957600080fd5b50610297610638366004611f44565b610f50565b34801561064957600080fd5b506102da610658366004611f22565b611404565b34801561066957600080fd5b506102da60115481565b34801561067f57600080fd5b506102da61068e366004611f22565b60186020526000908152604090205481565b3480156106ac57600080fd5b506102976114dd565b3480156106c157600080fd5b506102da600d5481565b3480156106d757600080fd5b506102da601b5481565b3480156106ed57600080fd5b506102976106fc366004611f22565b611649565b34801561070d57600080fd5b506102da61071c366004611f22565b60176020526000908152604090205481565b34801561073a57600080fd5b506102da610749366004611f5d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561078057600080fd5b506102da61078f366004611f22565b60156020526000908152604090205481565b3480156107ad57600080fd5b506102976107bc366004611f22565b6117c9565b3480156107cd57600080fd5b5060095461053d906001600160a01b031681565b6107e9611804565b600047116108335760405162461bcd60e51b81526020600482015260126024820152712737ba3434b733903a37903932b1b7bb32b960711b60448201526064015b60405180910390fd5b60405133904780156108fc02916000818181858888f1935050505015801561085f573d6000803e3d6000fd5b50565b60606004805461087190611f90565b80601f016020809104026020016040519081016040528092919081815260200182805461089d90611f90565b80156108ea5780601f106108bf576101008083540402835291602001916108ea565b820191906000526020600020905b8154815290600101906020018083116108cd57829003601f168201915b5050505050905090565b600033610902818585611831565b60019150505b92915050565b610916611804565b60006064600f54600d5461092a9190611fe0565b6109349190611ff7565b6007546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af115801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b09190612019565b506040518181527f5bd597f43e1aaceef3ddd1a4ef7f8c1cd0898cab692b0988cd731bbd40920fcb9060200160405180910390a150565b6000336109f585828561183e565b610a008585856118bc565b506001949350505050565b600062278d0060105442610a1f919061203b565b610a299190611ff7565b336000908152601760205260409020549091508111610ab05760405162461bcd60e51b815260206004820152603f60248201527f596f75206861766520616c726561647920636c61696d656420666f722074686960448201527f7320706572696f64206f72206974206973206e6f74207965742074696d652e00606482015260840161082a565b33600090815260176020526040812054610aca908361203b565b3360009081526017602052604081208490559091505b81811015610af957610af13361191b565b600101610ae0565b505050565b610b06611804565b610b0e6119e6565b6014805462ff00001916620100001790554260108190556040517f9d7c6bbe8ca6f2433812f43ed204a1d7ea4ae548db3a3d6e83f8d1ce67e31a5391610b579190815260200190565b60405180910390a1565b610b69611804565b60145460ff1615610b8c5760405162461bcd60e51b815260040161082a9061204e565b600a544210158015610b9f5750600b5442105b610bbb5760405162461bcd60e51b815260040161082a90612085565b601454610100900460ff1615610c135760405162461bcd60e51b815260206004820152601d60248201527f50726f6a6563743a2070726f6a656374206861732066696e6973686564000000604482015260640161082a565b6014805460ff19166001179055600e54601155565b610c30611804565b610c3a6000611bd5565b565b600260065403610c5e5760405162461bcd60e51b815260040161082a906120f3565b600260065560145460ff1680610c895750600b544210158015610c895750601454610100900460ff16155b610ce15760405162461bcd60e51b8152602060048201526024808201527f50726f6a6563743a2063616e6e6f7420726566756e642070726f6a6563742066604482015263756e647360e01b606482015260840161082a565b33600090815260156020526040902054610d0d5760405162461bcd60e51b815260040161082a9061212a565b6000601154118015610d9a575033600090815260156020526040908190205460075491516370a0823160e01b815230600482015290916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d97919061216f565b10155b610de65760405162461bcd60e51b815260206004820152601e60248201527f4e6f207368617265732072656d61696e696e6720666f7220726566756e640000604482015260640161082a565b336000908152601560205260408120546012805491928392610e09908490612188565b90915550503360009081526015602090815260408083208390556018909152812054600e805491929091610e3e90849061203b565b9091555050336000908152601860205260408120546011805491929091610e6690849061203b565b90915550503360008181526018602052604080822091909155600754905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef39190612019565b50604051818152309033907ff40cc8c1a1d17359049ba500cfc894596a692cffc9d03943cd92ec2e159cf6ae9060200160405180910390a3506001600655565b60606005805461087190611f90565b6000336109028185856118bc565b60145460ff1615610f735760405162461bcd60e51b815260040161082a9061204e565b600a544210158015610f865750600b5442105b610fa25760405162461bcd60e51b815260040161082a90612085565b601454610100900460ff1615610ffa5760405162461bcd60e51b815260206004820152601d60248201527f50726f6a6563743a2070726f6a656374206861732066696e6973686564000000604482015260640161082a565b60026006540361101c5760405162461bcd60e51b815260040161082a906120f3565b600260065580158015906110325750601b548111155b6110a45760405162461bcd60e51b815260206004820152603860248201527f5368617265732063616e2774206265206c657373207468616e207a65726f206160448201527f6e64206d6f7265207468616e206d617820616c6c6f7765640000000000000000606482015260840161082a565b600c546007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156110ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611113919061216f565b82601a546111219190611fe0565b61112b9190612188565b11156111845760405162461bcd60e51b815260206004820152602260248201527f457863656564696e6720746f74616c2066756e642072616973696e6720676f616044820152616c2160f01b606482015260840161082a565b601b54336000908152601860205260409020546111a2908390612188565b11156112035760405162461bcd60e51b815260206004820152602a60248201527f43616e277420627579206d6f7265207468616e20746865206d617820736861726044820152696520616c6c6f7765642160b01b606482015260840161082a565b600081601a546112139190611fe0565b9050601b548203611232576014805461ff0019166101001790556112ce565b600c546007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a1919061216f565b83601a546112af9190611fe0565b6112b99190612188565b106112ce576014805461ff0019166101001790555b6007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611325573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113499190612019565b503360009081526015602052604081208054839290611369908490612188565b9091555050336000908152601860205260408120805484929061138d908490612188565b9250508190555080600d60008282546113a69190612188565b9250508190555081600e60008282546113bf9190612188565b9091555050604051818152309033907f71be8766c1bd9bb33623f518aecc1d98612c75b596f4a0c38408f72239ef4e609060200160405180910390a350506001600655565b6001600160a01b0381166000908152601560205260408120546114395760405162461bcd60e51b815260040161082a9061212a565b6001600160a01b038216600090815260166020526040812054810361146c57601054611465904261203b565b9050611492565b6001600160a01b03831660009081526016602052604090205461148f904261203b565b90505b600f546001600160a01b03841660009081526015602052604081205490916301e133809184916114c191611fe0565b6114cb9190611fe0565b6114d59190611ff7565b949350505050565b60145460ff16156115005760405162461bcd60e51b815260040161082a9061204e565b6002600654036115225760405162461bcd60e51b815260040161082a906120f3565b600260065560145462010000900460ff1661158a5760405162461bcd60e51b815260206004820152602260248201527f50726f6a6563743a2053616c65206973206e6f742066696e6973686564207965604482015261742160f01b606482015260840161082a565b336000908152601560205260409020546115b65760405162461bcd60e51b815260040161082a9061212a565b33600090815260186020908152604080832054601990925282208054919283926115e1908490612188565b909155506115f190503382611c25565b80601360008282546116039190612188565b909155505060408051338152602081018390527f649fde579b8ba49bd4fbcb330614cb075b8d53c352c5adc49161b6f654e400a2910160405180910390a1506001600655565b611651611804565b6007546001600160a01b03908116908216036116ca5760405162461bcd60e51b815260206004820152603260248201527f43616e277420636c61696d2066756e642072616973696e6720746f6b656e73206044820152717573696e672074686973206d6574686f642160701b606482015260840161082a565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611711573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611735919061216f565b9050816001600160a01b031663a9059cbb6117586000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156117a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af99190612019565b6117d1611804565b6001600160a01b0381166117fb57604051631e4fbdf760e01b81526000600482015260240161082a565b61085f81611bd5565b6000546001600160a01b03163314610c3a5760405163118cdaa760e01b815233600482015260240161082a565b610af98383836001611c5f565b6001600160a01b0383811660009081526002602090815260408083209386168352929052205460001981146118b657818110156118a757604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161082a565b6118b684848484036000611c5f565b50505050565b6001600160a01b0383166118e657604051634b637e8f60e11b81526000600482015260240161082a565b6001600160a01b0382166119105760405163ec442f0560e01b81526000600482015260240161082a565b610af9838383611d34565b600061192682611404565b60075460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af115801561197b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199f9190612019565b50604080516001600160a01b0384168152602081018390527fd6a45326680045c471b7b30597d25e52e420f1e7535046ca9ad2944a1bb53487910160405180910390a15050565b601454610100900460ff16611a3d5760405162461bcd60e51b815260206004820181905260248201527f50726f6a6563743a2070726f6a656374206973206e6f742066696e6973686564604482015260640161082a565b60006064600f54600d54611a519190611fe0565b611a5b9190611ff7565b90506000606460085483600d54611a72919061203b565b611a7c9190611fe0565b611a869190611ff7565b905060008183600d54611a99919061203b565b611aa3919061203b565b60075460095460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101869052929350169063a9059cbb906044016020604051808303816000875af1158015611afa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1e9190612019565b5060075460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015611b70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b949190612019565b50600c54604051908152309033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb906020015b60405180910390a3505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216611c4f5760405163ec442f0560e01b81526000600482015260240161082a565b611c5b60008383611d34565b5050565b6001600160a01b038416611c895760405163e602df0560e01b81526000600482015260240161082a565b6001600160a01b038316611cb357604051634a1406b160e11b81526000600482015260240161082a565b6001600160a01b03808516600090815260026020908152604080832093871683529290522082905580156118b657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d2691815260200190565b60405180910390a350505050565b6001600160a01b038316611d5f578060036000828254611d549190612188565b90915550611dd19050565b6001600160a01b03831660009081526001602052604090205481811015611db25760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161082a565b6001600160a01b03841660009081526001602052604090209082900390555b6001600160a01b038216611ded57600380548290039055611e0c565b6001600160a01b03821660009081526001602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611bc891815260200190565b60006020808352835180602085015260005b81811015611e7f57858101830151858201604001528201611e63565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611eb757600080fd5b919050565b60008060408385031215611ecf57600080fd5b611ed883611ea0565b946020939093013593505050565b600080600060608486031215611efb57600080fd5b611f0484611ea0565b9250611f1260208501611ea0565b9150604084013590509250925092565b600060208284031215611f3457600080fd5b611f3d82611ea0565b9392505050565b600060208284031215611f5657600080fd5b5035919050565b60008060408385031215611f7057600080fd5b611f7983611ea0565b9150611f8760208401611ea0565b90509250929050565b600181811c90821680611fa457607f821691505b602082108103611fc457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761090857610908611fca565b60008261201457634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561202b57600080fd5b81518015158114611f3d57600080fd5b8181038181111561090857610908611fca565b6020808252601d908201527f50726f6a6563743a2070726f6a6563742069732063616e63656c6c6564000000604082015260600190565b60208082526048908201527f50726f6a6563743a2045697468657220697420686173206e6f7420737461727460408201527f6564206f72207468652074696d65206c696d697420666f722070726f6a65637460608201526708195e1c1a5c995960c21b608082015260a00190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526025908201527f50726f6a6563743a206164647265737320686173206e6f20636f6e747269627560408201526474696f6e7360d81b606082015260800190565b60006020828403121561218157600080fd5b5051919050565b8082018082111561090857610908611fca56fea2646970667358221220e041ba8942f5db4642c66740a7061b1e285d8972db6620d46b5d595022033b1764736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x278E CODESIZE SUB DUP1 PUSH3 0x278E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x347 JUMP JUMPDEST DUP10 DUP10 PUSH3 0x41 CALLER PUSH3 0x19D JUMP JUMPDEST PUSH1 0x4 PUSH3 0x4F DUP4 DUP3 PUSH3 0x4BE JUMP JUMPDEST POP PUSH1 0x5 PUSH3 0x5E DUP3 DUP3 PUSH3 0x4BE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP DUP6 DUP6 GT PUSH3 0xC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D652063616E2774206265206265666F72652073746172742074 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696D65 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH3 0x11F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420736574207A65726F206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xBE JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND OR SWAP1 SSTORE PUSH3 0x145 DUP5 PUSH3 0x1ED JUMP JUMPDEST PUSH1 0xC DUP9 SWAP1 SSTORE PUSH1 0x1A DUP8 SWAP1 SSTORE PUSH3 0x15C PUSH1 0xA DUP10 PUSH3 0x58A JUMP JUMPDEST PUSH1 0x1B SSTORE PUSH1 0xA SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xB SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SSTORE POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xF SSTORE POP PUSH3 0x5AD SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x1F7 PUSH3 0x231 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x223 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xBE JUMP JUMPDEST PUSH3 0x22E DUP2 PUSH3 0x19D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x260 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xBE JUMP JUMPDEST JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2C4 JUMPI PUSH3 0x2C4 PUSH3 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2EF JUMPI PUSH3 0x2EF PUSH3 0x27F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x331 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x312 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH3 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x375 DUP13 PUSH3 0x262 JUMP JUMPDEST PUSH1 0x20 DUP14 ADD MLOAD SWAP1 SWAP12 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3A0 DUP15 DUP3 DUP16 ADD PUSH3 0x295 JUMP JUMPDEST PUSH1 0x40 DUP15 ADD MLOAD SWAP1 SWAP12 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3CD DUP15 DUP3 DUP16 ADD PUSH3 0x295 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 DUP13 ADD MLOAD SWAP8 POP PUSH1 0x80 DUP13 ADD MLOAD SWAP7 POP PUSH1 0xA0 DUP13 ADD MLOAD SWAP6 POP PUSH1 0xC0 DUP13 ADD MLOAD SWAP5 POP PUSH3 0x3FA PUSH1 0xE0 DUP14 ADD PUSH3 0x262 JUMP JUMPDEST SWAP4 POP PUSH2 0x100 DUP13 ADD MLOAD SWAP3 POP PUSH3 0x413 PUSH2 0x120 DUP14 ADD PUSH3 0x262 JUMP JUMPDEST SWAP2 POP PUSH2 0x140 DUP13 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x442 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x463 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4B9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x494 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4B5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4A0 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x4DA JUMPI PUSH3 0x4DA PUSH3 0x27F JUMP JUMPDEST PUSH3 0x4F2 DUP2 PUSH3 0x4EB DUP5 SLOAD PUSH3 0x42D JUMP JUMPDEST DUP5 PUSH3 0x469 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x52A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x511 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4B5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x55B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x53A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x57A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x5A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH2 0x21D1 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x276 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D549E99 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xBAAD7D85 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xCCEC3716 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xCCEC3716 EQ PUSH2 0x6E1 JUMPI DUP1 PUSH4 0xCFB2B5E9 EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xE7AFEEED EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A1 JUMPI DUP1 PUSH4 0xFA2AF9DA EQ PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBAAD7D85 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xC0DAEE49 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xC16A0383 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xC2CED7E5 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xC5C4744C EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0xCA34DA20 EQ PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EE1221 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x95EE1221 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x9E7B08D5 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xABD6192C EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xBA53C283 EQ PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D549E99 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x8D4E4083 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x94FEBBF3 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x6D1E6516 GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x6D1E6516 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x73AFF5AF EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x7921BA96 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x43D25E82 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x49A1AE91 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x5D97C1A0 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10642509 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x10642509 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x15643554 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x26232A2E EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x26493848 EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x614117A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x7E87512 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x1008E961 EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x27D JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x90E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH2 0x9E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xA0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xAFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xB61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xC28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xC3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xF33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x53D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x5EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x638 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x658 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x1404 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x68E CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x14DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x6FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x1649 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x71C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x749 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x17C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x53D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2737BA3434B733903A37903932B1B7BB32B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x871 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x89D SWAP1 PUSH2 0x1F90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x902 DUP2 DUP6 DUP6 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x916 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xF SLOAD PUSH1 0xD SLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x934 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x5BD597F43E1AACEEF3DDD1A4EF7F8C1CD0898CAB692B0988CD731BBD40920FCB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x9F5 DUP6 DUP3 DUP6 PUSH2 0x183E JUMP JUMPDEST PUSH2 0xA00 DUP6 DUP6 DUP6 PUSH2 0x18BC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x278D00 PUSH1 0x10 SLOAD TIMESTAMP PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C726561647920636C61696D656420666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7320706572696F64206F72206974206973206E6F74207965742074696D652E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xACA SWAP1 DUP4 PUSH2 0x203B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE SWAP1 SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAF9 JUMPI PUSH2 0xAF1 CALLER PUSH2 0x191B JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB06 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xB0E PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9D7C6BBE8CA6F2433812F43ED204A1D7EA4AE548DB3A3D6E83F8D1CE67E31A53 SWAP2 PUSH2 0xB57 SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xB69 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xB9F JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT JUMPDEST PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206861732066696E6973686564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xE SLOAD PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH2 0xC30 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xC3A PUSH1 0x0 PUSH2 0x1BD5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xC5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x14 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xC89 JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xC89 JUMPI POP PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2063616E6E6F7420726566756E642070726F6A6563742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x756E6473 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD GT DUP1 ISZERO PUSH2 0xD9A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0xDE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207368617265732072656D61696E696E6720666F7220726566756E640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x12 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0xE09 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x18 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xE DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE3E SWAP1 DUP5 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x11 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE66 SWAP1 DUP5 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0xF40CC8C1A1D17359049BA500CFC894596A692CFFC9D03943CD92EC2E159CF6AE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x871 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x902 DUP2 DUP6 DUP6 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xF86 JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT JUMPDEST PUSH2 0xFA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206861732066696E6973686564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1032 JUMPI POP PUSH1 0x1B SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265732063616E2774206265206C657373207468616E207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E64206D6F7265207468616E206D617820616C6C6F7765640000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST DUP3 PUSH1 0x1A SLOAD PUSH2 0x1121 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x112B SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST GT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457863656564696E6720746F74616C2066756E642072616973696E6720676F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6C21 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1B SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x11A2 SWAP1 DUP4 SWAP1 PUSH2 0x2188 JUMP JUMPDEST GT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420627579206D6F7265207468616E20746865206D61782073686172 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6520616C6C6F77656421 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1A SLOAD PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1B SLOAD DUP3 SUB PUSH2 0x1232 JUMPI PUSH1 0x14 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH2 0x12CE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x127D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A1 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST DUP4 PUSH1 0x1A SLOAD PUSH2 0x12AF SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x12B9 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST LT PUSH2 0x12CE JUMPI PUSH1 0x14 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1369 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x138D SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13A6 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13BF SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x71BE8766C1BD9BB33623F518AECC1D98612C75B596F4A0C38408F72239EF4E60 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SUB PUSH2 0x146C JUMPI PUSH1 0x10 SLOAD PUSH2 0x1465 SWAP1 TIMESTAMP PUSH2 0x203B JUMP JUMPDEST SWAP1 POP PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x148F SWAP1 TIMESTAMP PUSH2 0x203B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH4 0x1E13380 SWAP2 DUP5 SWAP2 PUSH2 0x14C1 SWAP2 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x14CB SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1500 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x14 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2053616C65206973206E6F742066696E6973686564207965 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7421 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x19 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x15E1 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15F1 SWAP1 POP CALLER DUP3 PUSH2 0x1C25 JUMP JUMPDEST DUP1 PUSH1 0x13 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x649FDE579B8BA49BD4FBCB330614CB075B8D53C352C5ADC49161B6F654E400A2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1651 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x16CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420636C61696D2066756E642072616973696E6720746F6B656E7320 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x7573696E672074686973206D6574686F6421 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1711 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1758 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF9 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x17D1 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x85F DUP2 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0xAF9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x18B6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x18A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x18B6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1C5F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x18E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1910 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0xAF9 DUP4 DUP4 DUP4 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1926 DUP3 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x197B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x199F SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xD6A45326680045C471B7B30597D25E52E420F1E7535046CA9AD2944A1BB53487 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206973206E6F742066696E6973686564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xF SLOAD PUSH1 0xD SLOAD PUSH2 0x1A51 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1A5B SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH1 0xD SLOAD PUSH2 0x1A72 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x1A7C SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1A86 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0xD SLOAD PUSH2 0x1A99 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x1AA3 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B1E SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B94 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C4F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x1C5B PUSH1 0x0 DUP4 DUP4 PUSH2 0x1D34 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C89 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1CB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x18B6 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D26 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D5F JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D54 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1DD1 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DED JUMPI PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BC8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E7F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1E63 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ED8 DUP4 PUSH2 0x1EA0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F04 DUP5 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1F12 PUSH1 0x20 DUP6 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3D DUP3 PUSH2 0x1EA0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F79 DUP4 PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F87 PUSH1 0x20 DUP5 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1FA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2014 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A6563742069732063616E63656C6C6564000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x48 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2045697468657220697420686173206E6F74207374617274 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6564206F72207468652074696D65206C696D697420666F722070726F6A656374 PUSH1 0x60 DUP3 ADD MSTORE PUSH8 0x8195E1C1A5C9959 PUSH1 0xC2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A206164647265737320686173206E6F20636F6E7472696275 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x74696F6E73 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 COINBASE 0xBA DUP10 TIMESTAMP CREATE2 0xDB CHAINID TIMESTAMP 0xC6 PUSH8 0x40A7061B1E285D89 PUSH19 0xDB6620D46B5D595022033B1764736F6C634300 ADDMOD XOR STOP CALLER ",
              "sourceMap": "2909:11517:6:-:0;;;5703:1026;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6075:5;6082:7;1249:30:0;1268:10;1249:18;:30::i;:::-;1962:5:2;:13;1970:5;1962;:13;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;1868:1:6;1973:7;:22;-1:-1:-1;6122:35:6;;::::1;6101:117;;;::::0;-1:-1:-1;;;6101:117:6;;5198:2:8;6101:117:6::1;::::0;::::1;5180:21:8::0;5237:2;5217:18;;;5210:30;5276:34;5256:18;;;5249:62;-1:-1:-1;;;5327:18:8;;;5320:33;5370:19;;6101:117:6::1;;;;;;;;;-1:-1:-1::0;;;;;6236:34:6;::::1;6228:69;;;::::0;-1:-1:-1;;;6228:69:6;;5602:2:8;6228:69:6::1;::::0;::::1;5584:21:8::0;5641:2;5621:18;;;5614:30;5680:24;5660:18;;;5653:52;5722:18;;6228:69:6::1;5400:346:8::0;6228:69:6::1;6307:10;:24:::0;;-1:-1:-1;;;;;;6307:24:6::1;-1:-1:-1::0;;;;;6307:24:6;::::1;;::::0;;6341:32:::1;6359:13:::0;6341:17:::1;:32::i;:::-;6383:15;:34:::0;;;6427:16:::1;:36:::0;;;6501:21:::1;6520:2;6401:16:::0;6501:21:::1;:::i;:::-;6473:25;:49:::0;6532:16:::1;:36:::0;;;;6578:14:::1;:32:::0;;;;6620:11:::1;:26:::0;-1:-1:-1;6656:14:6::1;:32:::0;;-1:-1:-1;;;;;;6656:32:6::1;-1:-1:-1::0;;;;;6656:32:6;;::::1;::::0;;;::::1;::::0;;6698:10:::1;:24:::0;-1:-1:-1;2909:11517:6;;-1:-1:-1;;;;2909:11517:6;2786:187:0;2859:16;2878:6;;-1:-1:-1;;;;;2894:17:0;;;-1:-1:-1;;;;;;2894:17:0;;;;;;2926:40;;2878:6;;;;;;;2926:40;;2859:16;2926:40;2849:124;2786:187;:::o;2417:215::-;1405:13;:11;:13::i;:::-;-1:-1:-1;;;;;2501:22:0;::::1;2497:91;;2546:31;::::0;-1:-1:-1;;;2546:31:0;;2574:1:::1;2546:31;::::0;::::1;6119:51:8::0;6092:18;;2546:31:0::1;5973:203:8::0;2497:91:0::1;2597:28;2616:8:::0;2597:18:::1;:28::i;:::-;2417:215:::0;:::o;1670:162::-;1558:7;1584:6;-1:-1:-1;;;;;1584:6:0;735:10:5;1729:23:0;1725:101;;1775:40;;-1:-1:-1;;;1775:40:0;;735:10:5;1775:40:0;;;6119:51:8;6092:18;;1775:40:0;5973:203:8;1725:101:0;1670:162::o;14:185:8:-;101:13;;-1:-1:-1;;;;;143:31:8;;133:42;;123:70;;189:1;186;179:12;123:70;14:185;;;:::o;204:127::-;265:10;260:3;256:20;253:1;246:31;296:4;293:1;286:15;320:4;317:1;310:15;336:844;390:5;443:3;436:4;428:6;424:17;420:27;410:55;;461:1;458;451:12;410:55;484:13;;-1:-1:-1;;;;;546:10:8;;;543:36;;;559:18;;:::i;:::-;634:2;628:9;602:2;688:13;;-1:-1:-1;;684:22:8;;;708:2;680:31;676:40;664:53;;;732:18;;;752:22;;;729:46;726:72;;;778:18;;:::i;:::-;818:10;814:2;807:22;853:2;845:6;838:18;875:4;865:14;;922:3;915:4;910:2;902:6;898:15;894:26;891:35;888:55;;;939:1;936;929:12;888:55;961:1;952:10;;971:133;985:2;982:1;979:9;971:133;;;1073:14;;;1069:23;;1063:30;1042:14;;;1038:23;;1031:63;996:10;;;;971:133;;;1148:1;1141:4;1136:2;1128:6;1124:15;1120:26;1113:37;1168:6;1159:15;;;;;;336:844;;;;:::o;1185:1226::-;1379:6;1387;1395;1403;1411;1419;1427;1435;1443;1451;1459:7;1513:3;1501:9;1492:7;1488:23;1484:33;1481:53;;;1530:1;1527;1520:12;1481:53;1553:48;1591:9;1553:48;:::i;:::-;1645:2;1630:18;;1624:25;1543:58;;-1:-1:-1;;;;;;1661:30:8;;1658:50;;;1704:1;1701;1694:12;1658:50;1727:61;1780:7;1771:6;1760:9;1756:22;1727:61;:::i;:::-;1834:2;1819:18;;1813:25;1717:71;;-1:-1:-1;1813:25:8;-1:-1:-1;;;;;;1850:32:8;;1847:52;;;1895:1;1892;1885:12;1847:52;1918:63;1973:7;1962:8;1951:9;1947:24;1918:63;:::i;:::-;1908:73;;;2021:2;2010:9;2006:18;2000:25;1990:35;;2065:3;2054:9;2050:19;2044:26;2034:36;;2110:3;2099:9;2095:19;2089:26;2079:36;;2155:3;2144:9;2140:19;2134:26;2124:36;;2179:58;2232:3;2221:9;2217:19;2179:58;:::i;:::-;2169:68;;2277:3;2266:9;2262:19;2256:26;2246:36;;2301:58;2354:3;2343:9;2339:19;2301:58;:::i;:::-;2291:68;;2400:3;2389:9;2385:19;2379:26;2368:37;;1185:1226;;;;;;;;;;;;;;:::o;2416:380::-;2495:1;2491:12;;;;2538;;;2559:61;;2613:4;2605:6;2601:17;2591:27;;2559:61;2666:2;2658:6;2655:14;2635:18;2632:38;2629:161;;2712:10;2707:3;2703:20;2700:1;2693:31;2747:4;2744:1;2737:15;2775:4;2772:1;2765:15;2629:161;;2416:380;;;:::o;2927:543::-;3029:2;3024:3;3021:11;3018:446;;;3065:1;3089:5;3086:1;3079:16;3133:4;3130:1;3120:18;3203:2;3191:10;3187:19;3184:1;3180:27;3174:4;3170:38;3239:4;3227:10;3224:20;3221:47;;;-1:-1:-1;3262:4:8;3221:47;3317:2;3312:3;3308:12;3305:1;3301:20;3295:4;3291:31;3281:41;;3372:82;3390:2;3383:5;3380:13;3372:82;;;3435:17;;;3416:1;3405:13;3372:82;;;3376:3;;;3018:446;2927:543;;;:::o;3646:1345::-;3766:10;;-1:-1:-1;;;;;3788:30:8;;3785:56;;;3821:18;;:::i;:::-;3850:97;3940:6;3900:38;3932:4;3926:11;3900:38;:::i;:::-;3894:4;3850:97;:::i;:::-;4002:4;;4059:2;4048:14;;4076:1;4071:663;;;;4778:1;4795:6;4792:89;;;-1:-1:-1;4847:19:8;;;4841:26;4792:89;-1:-1:-1;;3603:1:8;3599:11;;;3595:24;3591:29;3581:40;3627:1;3623:11;;;3578:57;4894:81;;4041:944;;4071:663;2874:1;2867:14;;;2911:4;2898:18;;-1:-1:-1;;4107:20:8;;;4225:236;4239:7;4236:1;4233:14;4225:236;;;4328:19;;;4322:26;4307:42;;4420:27;;;;4388:1;4376:14;;;;4255:19;;4225:236;;;4229:3;4489:6;4480:7;4477:19;4474:201;;;4550:19;;;4544:26;-1:-1:-1;;4633:1:8;4629:14;;;4645:3;4625:24;4621:37;4617:42;4602:58;4587:74;;4474:201;-1:-1:-1;;;;;4721:1:8;4705:14;;;4701:22;4688:36;;-1:-1:-1;3646:1345:8:o;5751:217::-;5791:1;5817;5807:132;;5861:10;5856:3;5852:20;5849:1;5842:31;5896:4;5893:1;5886:15;5924:4;5921:1;5914:15;5807:132;-1:-1:-1;5953:9:8;;5751:217::o;5973:203::-;2909:11517:6;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@APYStartTime_989": {
                  "entryPoint": null,
                  "id": 989,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_1204": {
                  "entryPoint": null,
                  "id": 1204,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_approve_674": {
                  "entryPoint": 6193,
                  "id": 674,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_approve_734": {
                  "entryPoint": 7263,
                  "id": 734,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@_checkOwner_68": {
                  "entryPoint": 6148,
                  "id": 68,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_claim_Refund_on_cancellation_1521": {
                  "entryPoint": 3132,
                  "id": 1521,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_claim_Shares_1392": {
                  "entryPoint": 5341,
                  "id": 1392,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_mint_623": {
                  "entryPoint": 7205,
                  "id": 623,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_899": {
                  "entryPoint": null,
                  "id": 899,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_participate_1339": {
                  "entryPoint": 3920,
                  "id": 1339,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_spendAllowance_782": {
                  "entryPoint": 6206,
                  "id": 782,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transferOwnership_130": {
                  "entryPoint": 7125,
                  "id": 130,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_transfer_513": {
                  "entryPoint": 6332,
                  "id": 513,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_update_590": {
                  "entryPoint": 7476,
                  "id": 590,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@addressToContributions_1005": {
                  "entryPoint": null,
                  "id": 1005,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@addressToMintedTokens_1021": {
                  "entryPoint": null,
                  "id": 1021,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@allowance_410": {
                  "entryPoint": null,
                  "id": 410,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@approve_434": {
                  "entryPoint": 2292,
                  "id": 434,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@balanceOf_369": {
                  "entryPoint": null,
                  "id": 369,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@calculateClaimableAPYForInvestor_1781": {
                  "entryPoint": 5124,
                  "id": 1781,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@cancel_Project_1413": {
                  "entryPoint": 2913,
                  "id": 1413,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@claimReturn_1695": {
                  "entryPoint": 2571,
                  "id": 1695,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@contributionAmnt_1023": {
                  "entryPoint": null,
                  "id": 1023,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@decimals_347": {
                  "entryPoint": null,
                  "id": 347,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@depositAPR_1850": {
                  "entryPoint": 2318,
                  "id": 1850,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@finalize_1544": {
                  "entryPoint": 2814,
                  "id": 1544,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@fundraisingGoal_981": {
                  "entryPoint": null,
                  "id": 981,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@investorClaimCount_1013": {
                  "entryPoint": null,
                  "id": 1013,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@investorToLastClaimTime_1009": {
                  "entryPoint": null,
                  "id": 1009,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@investorToShare_1017": {
                  "entryPoint": null,
                  "id": 1017,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isCancelled_997": {
                  "entryPoint": null,
                  "id": 997,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isFinalized_1001": {
                  "entryPoint": null,
                  "id": 1001,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isFinished_999": {
                  "entryPoint": null,
                  "id": 999,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@maxAllowedSharesPerWallet_1025": {
                  "entryPoint": null,
                  "id": 1025,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@name_329": {
                  "entryPoint": 2146,
                  "id": 329,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@owner_51": {
                  "entryPoint": null,
                  "id": 51,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@platformFee_973": {
                  "entryPoint": null,
                  "id": 973,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@platformWallet_975": {
                  "entryPoint": null,
                  "id": 975,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@processClaim_1719": {
                  "entryPoint": 6427,
                  "id": 1719,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@processFunds_1608": {
                  "entryPoint": 6630,
                  "id": 1608,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@projectAPY_987": {
                  "entryPoint": null,
                  "id": 987,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@projectEndTime_979": {
                  "entryPoint": null,
                  "id": 979,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@projectStartTime_977": {
                  "entryPoint": null,
                  "id": 977,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@recoverETH_1638": {
                  "entryPoint": 2017,
                  "id": 1638,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@refundableShares_991": {
                  "entryPoint": null,
                  "id": 991,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@renounceOwnership_82": {
                  "entryPoint": 3112,
                  "id": 82,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@rescueERC20_1819": {
                  "entryPoint": 5705,
                  "id": 1819,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@stableCoin_971": {
                  "entryPoint": null,
                  "id": 971,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@symbol_338": {
                  "entryPoint": 3891,
                  "id": 338,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@totalAmountRefunded_993": {
                  "entryPoint": null,
                  "id": 993,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@totalRaised_983": {
                  "entryPoint": null,
                  "id": 983,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@totalSharesSold_985": {
                  "entryPoint": null,
                  "id": 985,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@totalSupply_356": {
                  "entryPoint": null,
                  "id": 356,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@totalTokensMinted_995": {
                  "entryPoint": null,
                  "id": 995,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferFrom_466": {
                  "entryPoint": 2535,
                  "id": 466,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@transferOwnership_110": {
                  "entryPoint": 6089,
                  "id": 110,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@transfer_393": {
                  "entryPoint": 3906,
                  "id": 393,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_address": {
                  "entryPoint": 7840,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 7970,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address": {
                  "entryPoint": 8029,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_addresst_uint256": {
                  "entryPoint": 7910,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 7868,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 8217,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 8004,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 8559,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC20_$861__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 7761,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_01b47e778b90709a5ab68bba6dde33bfb2f1d58a3458616f0140f3faeea46f73__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_108391721ee10e9bad0554ba8a8f3c723d8fa558c09aabaa13f175d60d06895b__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 8270,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_398a754eeaf34eb09768e984cc014f1ffc2876b6e498f8eb9a0f28b6ff229ba1__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 8325,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_44214bc30c988c8d9ecc22952ffa973a971a6bcb3faa37ff3ad56326a032c64b__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_4b16fb38ac6f5f5b9f370eabc0e0834b0dc65a806b836f85a2bbac95ca0ec49a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_78a04e62820ef7d9966740f379f88c001167d6b8c271bb6a6aefbe20ab705c20__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_8bf738d02a1977ab94fe6c8bf66f5fb808cfc100a9985eca7b8bbca31642fedb__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9af13a862102b50d3aa2ca92d9f3354d30b87145db0df5ce2788f39d9ff967f4__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_b5a013017efe5d2f9b09472663c19e7d04de0fd426c1054b74c29f7ef175d683__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c25336cced9a4afbeb324fa0944ee937d41134cbab5aa4af9179c0599a616f55__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_d2fa5d737c6a47e9e2811e49b27e1de09b9a7e7d5458047b369e2ec3f12813e9__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 8490,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_dc58cbbc28837ed9ae7eb94482fe7ae987f092159ccea9cc12deee9f891238cd__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e37d6a0f601d8ab78444143c8fa3b731c0091286ce4ea7fecf8c783d03c7a576__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e8773710af496491c3fb52b7198caa95b93733036628628a1300f4729cf4f739__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 8435,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 8584,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 8183,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 8160,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 8251,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 8080,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 8138,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:11551:8",
                    "nodeType": "YulBlock",
                    "src": "0:11551:8",
                    "statements": [
                      {
                        "nativeSrc": "6:3:8",
                        "nodeType": "YulBlock",
                        "src": "6:3:8",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "135:427:8",
                          "nodeType": "YulBlock",
                          "src": "135:427:8",
                          "statements": [
                            {
                              "nativeSrc": "145:12:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "145:12:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "155:2:8",
                                "nodeType": "YulLiteral",
                                "src": "155:2:8",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "149:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "149:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "173:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "173:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "184:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "184:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "166:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "166:6:8"
                                },
                                "nativeSrc": "166:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "166:21:8"
                              },
                              "nativeSrc": "166:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "166:21:8"
                            },
                            {
                              "nativeSrc": "196:27:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "196:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "216:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "216:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "210:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "210:5:8"
                                },
                                "nativeSrc": "210:13:8",
                                "nodeType": "YulFunctionCall",
                                "src": "210:13:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "200:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "200:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "243:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "243:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "254:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "254:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "239:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:8"
                                    },
                                    "nativeSrc": "239:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:18:8"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "259:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "259:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "232:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "232:6:8"
                                },
                                "nativeSrc": "232:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "232:34:8"
                              },
                              "nativeSrc": "232:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "232:34:8"
                            },
                            {
                              "nativeSrc": "275:10:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "275:10:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "284:1:8",
                                "nodeType": "YulLiteral",
                                "src": "284:1:8",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "279:1:8",
                                  "nodeType": "YulTypedName",
                                  "src": "279:1:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "344:90:8",
                                "nodeType": "YulBlock",
                                "src": "344:90:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nativeSrc": "373:9:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "373:9:8"
                                                },
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "384:1:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "384:1:8"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "369:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "369:3:8"
                                              },
                                              "nativeSrc": "369:17:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "369:17:8"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "388:2:8",
                                              "nodeType": "YulLiteral",
                                              "src": "388:2:8",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "365:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "365:3:8"
                                          },
                                          "nativeSrc": "365:26:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "365:26:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nativeSrc": "407:6:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "407:6:8"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nativeSrc": "415:1:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "415:1:8"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "403:3:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "403:3:8"
                                                  },
                                                  "nativeSrc": "403:14:8",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "403:14:8"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nativeSrc": "419:2:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "419:2:8"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "399:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "399:3:8"
                                              },
                                              "nativeSrc": "399:23:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "399:23:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "393:5:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "393:5:8"
                                          },
                                          "nativeSrc": "393:30:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "393:30:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "358:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:6:8"
                                      },
                                      "nativeSrc": "358:66:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "358:66:8"
                                    },
                                    "nativeSrc": "358:66:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "358:66:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "305:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "305:1:8"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "308:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "302:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:2:8"
                                },
                                "nativeSrc": "302:13:8",
                                "nodeType": "YulFunctionCall",
                                "src": "302:13:8"
                              },
                              "nativeSrc": "294:140:8",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "316:19:8",
                                "nodeType": "YulBlock",
                                "src": "316:19:8",
                                "statements": [
                                  {
                                    "nativeSrc": "318:15:8",
                                    "nodeType": "YulAssignment",
                                    "src": "318:15:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "327:1:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "327:1:8"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "330:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "330:2:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "323:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "323:3:8"
                                      },
                                      "nativeSrc": "323:10:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "323:10:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "318:1:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "318:1:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "298:3:8",
                                "nodeType": "YulBlock",
                                "src": "298:3:8",
                                "statements": []
                              },
                              "src": "294:140:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "458:9:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "458:9:8"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "469:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "469:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "454:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "454:3:8"
                                        },
                                        "nativeSrc": "454:22:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "454:22:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "478:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "478:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "450:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "450:3:8"
                                    },
                                    "nativeSrc": "450:31:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "450:31:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "483:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "483:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "443:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "443:6:8"
                                },
                                "nativeSrc": "443:42:8",
                                "nodeType": "YulFunctionCall",
                                "src": "443:42:8"
                              },
                              "nativeSrc": "443:42:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "443:42:8"
                            },
                            {
                              "nativeSrc": "494:62:8",
                              "nodeType": "YulAssignment",
                              "src": "494:62:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "510:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "510:9:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nativeSrc": "529:6:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "529:6:8"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "537:2:8",
                                                "nodeType": "YulLiteral",
                                                "src": "537:2:8",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "525:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "525:3:8"
                                            },
                                            "nativeSrc": "525:15:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "525:15:8"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "546:2:8",
                                                "nodeType": "YulLiteral",
                                                "src": "546:2:8",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nativeSrc": "542:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "542:3:8"
                                            },
                                            "nativeSrc": "542:7:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "542:7:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "521:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "521:3:8"
                                        },
                                        "nativeSrc": "521:29:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "521:29:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "506:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "506:3:8"
                                    },
                                    "nativeSrc": "506:45:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "506:45:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "553:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "553:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "502:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "502:3:8"
                                },
                                "nativeSrc": "502:54:8",
                                "nodeType": "YulFunctionCall",
                                "src": "502:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "494:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "494:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "14:548:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "104:9:8",
                            "nodeType": "YulTypedName",
                            "src": "104:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "115:6:8",
                            "nodeType": "YulTypedName",
                            "src": "115:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "126:4:8",
                            "nodeType": "YulTypedName",
                            "src": "126:4:8",
                            "type": ""
                          }
                        ],
                        "src": "14:548:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "668:76:8",
                          "nodeType": "YulBlock",
                          "src": "668:76:8",
                          "statements": [
                            {
                              "nativeSrc": "678:26:8",
                              "nodeType": "YulAssignment",
                              "src": "678:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "690:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "690:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "701:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "701:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "686:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "686:3:8"
                                },
                                "nativeSrc": "686:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "686:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "678:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "678:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "720:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "720:9:8"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "731:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "731:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "713:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "713:6:8"
                                },
                                "nativeSrc": "713:25:8",
                                "nodeType": "YulFunctionCall",
                                "src": "713:25:8"
                              },
                              "nativeSrc": "713:25:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "713:25:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "567:177:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "637:9:8",
                            "nodeType": "YulTypedName",
                            "src": "637:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "648:6:8",
                            "nodeType": "YulTypedName",
                            "src": "648:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "659:4:8",
                            "nodeType": "YulTypedName",
                            "src": "659:4:8",
                            "type": ""
                          }
                        ],
                        "src": "567:177:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "798:124:8",
                          "nodeType": "YulBlock",
                          "src": "798:124:8",
                          "statements": [
                            {
                              "nativeSrc": "808:29:8",
                              "nodeType": "YulAssignment",
                              "src": "808:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "830:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "830:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "817:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "817:12:8"
                                },
                                "nativeSrc": "817:20:8",
                                "nodeType": "YulFunctionCall",
                                "src": "817:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "808:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "808:5:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "900:16:8",
                                "nodeType": "YulBlock",
                                "src": "900:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "909:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "909:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "912:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "912:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "902:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "902:6:8"
                                      },
                                      "nativeSrc": "902:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "902:12:8"
                                    },
                                    "nativeSrc": "902:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "902:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "859:5:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "859:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "870:5:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "870:5:8"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "885:3:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "885:3:8",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "890:1:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "890:1:8",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "881:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "881:3:8"
                                                },
                                                "nativeSrc": "881:11:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "881:11:8"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "894:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "894:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "877:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "877:3:8"
                                            },
                                            "nativeSrc": "877:19:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "877:19:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "866:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "866:3:8"
                                        },
                                        "nativeSrc": "866:31:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "866:31:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "856:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "856:2:8"
                                    },
                                    "nativeSrc": "856:42:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "856:42:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "849:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "849:6:8"
                                },
                                "nativeSrc": "849:50:8",
                                "nodeType": "YulFunctionCall",
                                "src": "849:50:8"
                              },
                              "nativeSrc": "846:70:8",
                              "nodeType": "YulIf",
                              "src": "846:70:8"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nativeSrc": "749:173:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "777:6:8",
                            "nodeType": "YulTypedName",
                            "src": "777:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "788:5:8",
                            "nodeType": "YulTypedName",
                            "src": "788:5:8",
                            "type": ""
                          }
                        ],
                        "src": "749:173:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1014:167:8",
                          "nodeType": "YulBlock",
                          "src": "1014:167:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1060:16:8",
                                "nodeType": "YulBlock",
                                "src": "1060:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1069:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1069:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1072:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1072:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1062:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1062:6:8"
                                      },
                                      "nativeSrc": "1062:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1062:12:8"
                                    },
                                    "nativeSrc": "1062:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1062:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1035:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1035:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1044:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1044:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1031:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1031:3:8"
                                    },
                                    "nativeSrc": "1031:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1031:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1056:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1056:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1027:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1027:3:8"
                                },
                                "nativeSrc": "1027:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1027:32:8"
                              },
                              "nativeSrc": "1024:52:8",
                              "nodeType": "YulIf",
                              "src": "1024:52:8"
                            },
                            {
                              "nativeSrc": "1085:39:8",
                              "nodeType": "YulAssignment",
                              "src": "1085:39:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1114:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1114:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1095:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1095:18:8"
                                },
                                "nativeSrc": "1095:29:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1095:29:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1085:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1085:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1133:42:8",
                              "nodeType": "YulAssignment",
                              "src": "1133:42:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1160:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1160:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1171:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1171:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1156:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1156:3:8"
                                    },
                                    "nativeSrc": "1156:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1156:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1143:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1143:12:8"
                                },
                                "nativeSrc": "1143:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1143:32:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1133:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1133:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nativeSrc": "927:254:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "972:9:8",
                            "nodeType": "YulTypedName",
                            "src": "972:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "983:7:8",
                            "nodeType": "YulTypedName",
                            "src": "983:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "995:6:8",
                            "nodeType": "YulTypedName",
                            "src": "995:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1003:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1003:6:8",
                            "type": ""
                          }
                        ],
                        "src": "927:254:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1281:92:8",
                          "nodeType": "YulBlock",
                          "src": "1281:92:8",
                          "statements": [
                            {
                              "nativeSrc": "1291:26:8",
                              "nodeType": "YulAssignment",
                              "src": "1291:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1303:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1303:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1314:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1314:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1299:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1299:3:8"
                                },
                                "nativeSrc": "1299:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1299:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1291:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1291:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1333:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1333:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "1358:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1358:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "1351:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1351:6:8"
                                        },
                                        "nativeSrc": "1351:14:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1351:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "1344:6:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1344:6:8"
                                    },
                                    "nativeSrc": "1344:22:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1344:22:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1326:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1326:6:8"
                                },
                                "nativeSrc": "1326:41:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1326:41:8"
                              },
                              "nativeSrc": "1326:41:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "1326:41:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nativeSrc": "1186:187:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1250:9:8",
                            "nodeType": "YulTypedName",
                            "src": "1250:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1261:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1261:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1272:4:8",
                            "nodeType": "YulTypedName",
                            "src": "1272:4:8",
                            "type": ""
                          }
                        ],
                        "src": "1186:187:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1482:224:8",
                          "nodeType": "YulBlock",
                          "src": "1482:224:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1528:16:8",
                                "nodeType": "YulBlock",
                                "src": "1528:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1537:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1537:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1540:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1540:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1530:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1530:6:8"
                                      },
                                      "nativeSrc": "1530:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1530:12:8"
                                    },
                                    "nativeSrc": "1530:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1530:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1503:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1503:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1512:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1512:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1499:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1499:3:8"
                                    },
                                    "nativeSrc": "1499:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1499:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1524:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1524:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1495:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1495:3:8"
                                },
                                "nativeSrc": "1495:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1495:32:8"
                              },
                              "nativeSrc": "1492:52:8",
                              "nodeType": "YulIf",
                              "src": "1492:52:8"
                            },
                            {
                              "nativeSrc": "1553:39:8",
                              "nodeType": "YulAssignment",
                              "src": "1553:39:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1582:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1582:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1563:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1563:18:8"
                                },
                                "nativeSrc": "1563:29:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1563:29:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1553:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1553:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1601:48:8",
                              "nodeType": "YulAssignment",
                              "src": "1601:48:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1634:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1634:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1645:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1645:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1630:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1630:3:8"
                                    },
                                    "nativeSrc": "1630:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1630:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1611:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1611:18:8"
                                },
                                "nativeSrc": "1611:38:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1611:38:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1601:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1601:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1658:42:8",
                              "nodeType": "YulAssignment",
                              "src": "1658:42:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1685:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1685:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1696:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1696:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1681:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1681:3:8"
                                    },
                                    "nativeSrc": "1681:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1681:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1668:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1668:12:8"
                                },
                                "nativeSrc": "1668:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1668:32:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "1658:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1658:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nativeSrc": "1378:328:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1432:9:8",
                            "nodeType": "YulTypedName",
                            "src": "1432:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1443:7:8",
                            "nodeType": "YulTypedName",
                            "src": "1443:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1455:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1455:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1463:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1463:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1471:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1471:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1378:328:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1808:87:8",
                          "nodeType": "YulBlock",
                          "src": "1808:87:8",
                          "statements": [
                            {
                              "nativeSrc": "1818:26:8",
                              "nodeType": "YulAssignment",
                              "src": "1818:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1830:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1830:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1841:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1841:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1826:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1826:3:8"
                                },
                                "nativeSrc": "1826:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1826:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1818:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1818:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1860:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1860:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1875:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1875:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1883:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1883:4:8",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1871:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1871:3:8"
                                    },
                                    "nativeSrc": "1871:17:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1871:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1853:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1853:6:8"
                                },
                                "nativeSrc": "1853:36:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1853:36:8"
                              },
                              "nativeSrc": "1853:36:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "1853:36:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nativeSrc": "1711:184:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1777:9:8",
                            "nodeType": "YulTypedName",
                            "src": "1777:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1788:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1788:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1799:4:8",
                            "nodeType": "YulTypedName",
                            "src": "1799:4:8",
                            "type": ""
                          }
                        ],
                        "src": "1711:184:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1970:116:8",
                          "nodeType": "YulBlock",
                          "src": "1970:116:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2016:16:8",
                                "nodeType": "YulBlock",
                                "src": "2016:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2025:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2025:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2028:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2028:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2018:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2018:6:8"
                                      },
                                      "nativeSrc": "2018:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2018:12:8"
                                    },
                                    "nativeSrc": "2018:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2018:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1991:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1991:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2000:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2000:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1987:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1987:3:8"
                                    },
                                    "nativeSrc": "1987:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1987:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2012:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2012:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1983:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1983:3:8"
                                },
                                "nativeSrc": "1983:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1983:32:8"
                              },
                              "nativeSrc": "1980:52:8",
                              "nodeType": "YulIf",
                              "src": "1980:52:8"
                            },
                            {
                              "nativeSrc": "2041:39:8",
                              "nodeType": "YulAssignment",
                              "src": "2041:39:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2070:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2070:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2051:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2051:18:8"
                                },
                                "nativeSrc": "2051:29:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2051:29:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2041:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2041:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "1900:186:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1936:9:8",
                            "nodeType": "YulTypedName",
                            "src": "1936:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1947:7:8",
                            "nodeType": "YulTypedName",
                            "src": "1947:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1959:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1959:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1900:186:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2192:102:8",
                          "nodeType": "YulBlock",
                          "src": "2192:102:8",
                          "statements": [
                            {
                              "nativeSrc": "2202:26:8",
                              "nodeType": "YulAssignment",
                              "src": "2202:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2214:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2214:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2225:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2225:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2210:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2210:3:8"
                                },
                                "nativeSrc": "2210:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2210:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "2202:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2202:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2244:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2244:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "2259:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2259:6:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2275:3:8",
                                                "nodeType": "YulLiteral",
                                                "src": "2275:3:8",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2280:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "2280:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "2271:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "2271:3:8"
                                            },
                                            "nativeSrc": "2271:11:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2271:11:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2284:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "2284:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "2267:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "2267:3:8"
                                        },
                                        "nativeSrc": "2267:19:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2267:19:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "2255:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2255:3:8"
                                    },
                                    "nativeSrc": "2255:32:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2255:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2237:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2237:6:8"
                                },
                                "nativeSrc": "2237:51:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2237:51:8"
                              },
                              "nativeSrc": "2237:51:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "2237:51:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "2091:203:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2161:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2161:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2172:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2172:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2183:4:8",
                            "nodeType": "YulTypedName",
                            "src": "2183:4:8",
                            "type": ""
                          }
                        ],
                        "src": "2091:203:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2414:102:8",
                          "nodeType": "YulBlock",
                          "src": "2414:102:8",
                          "statements": [
                            {
                              "nativeSrc": "2424:26:8",
                              "nodeType": "YulAssignment",
                              "src": "2424:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2436:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2436:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2447:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2447:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2432:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2432:3:8"
                                },
                                "nativeSrc": "2432:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2432:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "2424:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2424:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2466:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2466:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "2481:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2481:6:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2497:3:8",
                                                "nodeType": "YulLiteral",
                                                "src": "2497:3:8",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2502:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "2502:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "2493:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "2493:3:8"
                                            },
                                            "nativeSrc": "2493:11:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2493:11:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2506:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "2506:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "2489:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "2489:3:8"
                                        },
                                        "nativeSrc": "2489:19:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2489:19:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "2477:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2477:3:8"
                                    },
                                    "nativeSrc": "2477:32:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2477:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2459:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2459:6:8"
                                },
                                "nativeSrc": "2459:51:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2459:51:8"
                              },
                              "nativeSrc": "2459:51:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "2459:51:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$861__to_t_address__fromStack_reversed",
                        "nativeSrc": "2299:217:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2383:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2383:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2394:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2394:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2405:4:8",
                            "nodeType": "YulTypedName",
                            "src": "2405:4:8",
                            "type": ""
                          }
                        ],
                        "src": "2299:217:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2591:110:8",
                          "nodeType": "YulBlock",
                          "src": "2591:110:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2637:16:8",
                                "nodeType": "YulBlock",
                                "src": "2637:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2646:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2646:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2649:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2649:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2639:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2639:6:8"
                                      },
                                      "nativeSrc": "2639:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2639:12:8"
                                    },
                                    "nativeSrc": "2639:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2639:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2612:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2612:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2621:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2621:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2608:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2608:3:8"
                                    },
                                    "nativeSrc": "2608:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2608:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2633:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2633:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2604:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2604:3:8"
                                },
                                "nativeSrc": "2604:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2604:32:8"
                              },
                              "nativeSrc": "2601:52:8",
                              "nodeType": "YulIf",
                              "src": "2601:52:8"
                            },
                            {
                              "nativeSrc": "2662:33:8",
                              "nodeType": "YulAssignment",
                              "src": "2662:33:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2685:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2685:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2672:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2672:12:8"
                                },
                                "nativeSrc": "2672:23:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2672:23:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2662:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2662:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nativeSrc": "2521:180:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2557:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2557:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2568:7:8",
                            "nodeType": "YulTypedName",
                            "src": "2568:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2580:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2580:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2521:180:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2793:173:8",
                          "nodeType": "YulBlock",
                          "src": "2793:173:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2839:16:8",
                                "nodeType": "YulBlock",
                                "src": "2839:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2848:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2848:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2851:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2851:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2841:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2841:6:8"
                                      },
                                      "nativeSrc": "2841:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2841:12:8"
                                    },
                                    "nativeSrc": "2841:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2841:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2814:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2814:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2823:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2823:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2810:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2810:3:8"
                                    },
                                    "nativeSrc": "2810:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2810:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2835:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2835:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2806:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2806:3:8"
                                },
                                "nativeSrc": "2806:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2806:32:8"
                              },
                              "nativeSrc": "2803:52:8",
                              "nodeType": "YulIf",
                              "src": "2803:52:8"
                            },
                            {
                              "nativeSrc": "2864:39:8",
                              "nodeType": "YulAssignment",
                              "src": "2864:39:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2893:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2893:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2874:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2874:18:8"
                                },
                                "nativeSrc": "2874:29:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2874:29:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2864:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2864:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2912:48:8",
                              "nodeType": "YulAssignment",
                              "src": "2912:48:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2945:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2945:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2956:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2956:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2941:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2941:3:8"
                                    },
                                    "nativeSrc": "2941:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2941:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2922:18:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2922:18:8"
                                },
                                "nativeSrc": "2922:38:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2922:38:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "2912:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2912:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nativeSrc": "2706:260:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2751:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2751:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2762:7:8",
                            "nodeType": "YulTypedName",
                            "src": "2762:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2774:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2774:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "2782:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2782:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2706:260:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3145:168:8",
                          "nodeType": "YulBlock",
                          "src": "3145:168:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3162:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3162:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3173:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3173:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3155:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3155:6:8"
                                },
                                "nativeSrc": "3155:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3155:21:8"
                              },
                              "nativeSrc": "3155:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3155:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3196:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3196:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3207:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "3207:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3192:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3192:3:8"
                                    },
                                    "nativeSrc": "3192:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3192:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3212:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3212:2:8",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3185:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3185:6:8"
                                },
                                "nativeSrc": "3185:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3185:30:8"
                              },
                              "nativeSrc": "3185:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3185:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3235:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3235:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3246:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "3246:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3231:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3231:3:8"
                                    },
                                    "nativeSrc": "3231:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3231:18:8"
                                  },
                                  {
                                    "hexValue": "4e6f7468696e6720746f207265636f766572",
                                    "kind": "string",
                                    "nativeSrc": "3251:20:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3251:20:8",
                                    "type": "",
                                    "value": "Nothing to recover"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3224:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3224:6:8"
                                },
                                "nativeSrc": "3224:48:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3224:48:8"
                              },
                              "nativeSrc": "3224:48:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3224:48:8"
                            },
                            {
                              "nativeSrc": "3281:26:8",
                              "nodeType": "YulAssignment",
                              "src": "3281:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3293:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3293:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3304:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3304:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3289:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3289:3:8"
                                },
                                "nativeSrc": "3289:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3289:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3281:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3281:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_01b47e778b90709a5ab68bba6dde33bfb2f1d58a3458616f0140f3faeea46f73__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "2971:342:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3122:9:8",
                            "nodeType": "YulTypedName",
                            "src": "3122:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3136:4:8",
                            "nodeType": "YulTypedName",
                            "src": "3136:4:8",
                            "type": ""
                          }
                        ],
                        "src": "2971:342:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3373:325:8",
                          "nodeType": "YulBlock",
                          "src": "3373:325:8",
                          "statements": [
                            {
                              "nativeSrc": "3383:22:8",
                              "nodeType": "YulAssignment",
                              "src": "3383:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3397:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3397:1:8",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "3400:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3400:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "3393:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3393:3:8"
                                },
                                "nativeSrc": "3393:12:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3393:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "3383:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3383:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3414:38:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3414:38:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "3444:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3444:4:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3450:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3450:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "3440:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3440:3:8"
                                },
                                "nativeSrc": "3440:12:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3440:12:8"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "3418:18:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3418:18:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3491:31:8",
                                "nodeType": "YulBlock",
                                "src": "3491:31:8",
                                "statements": [
                                  {
                                    "nativeSrc": "3493:27:8",
                                    "nodeType": "YulAssignment",
                                    "src": "3493:27:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "3507:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3507:6:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3515:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3515:4:8",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "3503:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3503:3:8"
                                      },
                                      "nativeSrc": "3503:17:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3503:17:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "3493:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3493:6:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "3471:18:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3471:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3464:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3464:6:8"
                                },
                                "nativeSrc": "3464:26:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3464:26:8"
                              },
                              "nativeSrc": "3461:61:8",
                              "nodeType": "YulIf",
                              "src": "3461:61:8"
                            },
                            {
                              "body": {
                                "nativeSrc": "3581:111:8",
                                "nodeType": "YulBlock",
                                "src": "3581:111:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3602:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3602:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3609:3:8",
                                              "nodeType": "YulLiteral",
                                              "src": "3609:3:8",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3614:10:8",
                                              "nodeType": "YulLiteral",
                                              "src": "3614:10:8",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "3605:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3605:3:8"
                                          },
                                          "nativeSrc": "3605:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3605:20:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3595:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3595:6:8"
                                      },
                                      "nativeSrc": "3595:31:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3595:31:8"
                                    },
                                    "nativeSrc": "3595:31:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3595:31:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3646:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3646:1:8",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3649:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3649:4:8",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3639:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3639:6:8"
                                      },
                                      "nativeSrc": "3639:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3639:15:8"
                                    },
                                    "nativeSrc": "3639:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3639:15:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3674:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3674:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3677:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3677:4:8",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3667:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3667:6:8"
                                      },
                                      "nativeSrc": "3667:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3667:15:8"
                                    },
                                    "nativeSrc": "3667:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3667:15:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "3537:18:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3537:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "3560:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3560:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3568:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "3568:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "3557:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3557:2:8"
                                    },
                                    "nativeSrc": "3557:14:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3557:14:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "3534:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3534:2:8"
                                },
                                "nativeSrc": "3534:38:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3534:38:8"
                              },
                              "nativeSrc": "3531:161:8",
                              "nodeType": "YulIf",
                              "src": "3531:161:8"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "3318:380:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "3353:4:8",
                            "nodeType": "YulTypedName",
                            "src": "3353:4:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "3362:6:8",
                            "nodeType": "YulTypedName",
                            "src": "3362:6:8",
                            "type": ""
                          }
                        ],
                        "src": "3318:380:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3735:95:8",
                          "nodeType": "YulBlock",
                          "src": "3735:95:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3752:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3752:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3759:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "3759:3:8",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3764:10:8",
                                        "nodeType": "YulLiteral",
                                        "src": "3764:10:8",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "3755:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3755:3:8"
                                    },
                                    "nativeSrc": "3755:20:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3755:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3745:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3745:6:8"
                                },
                                "nativeSrc": "3745:31:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3745:31:8"
                              },
                              "nativeSrc": "3745:31:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3745:31:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3792:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3792:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3795:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3795:4:8",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3785:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3785:6:8"
                                },
                                "nativeSrc": "3785:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3785:15:8"
                              },
                              "nativeSrc": "3785:15:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3785:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3816:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3816:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3819:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3819:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "3809:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3809:6:8"
                                },
                                "nativeSrc": "3809:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3809:15:8"
                              },
                              "nativeSrc": "3809:15:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3809:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "3703:127:8",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3703:127:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3887:116:8",
                          "nodeType": "YulBlock",
                          "src": "3887:116:8",
                          "statements": [
                            {
                              "nativeSrc": "3897:20:8",
                              "nodeType": "YulAssignment",
                              "src": "3897:20:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "3912:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3912:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "3915:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3915:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "3908:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3908:3:8"
                                },
                                "nativeSrc": "3908:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3908:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nativeSrc": "3897:7:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3897:7:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3975:22:8",
                                "nodeType": "YulBlock",
                                "src": "3975:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "3977:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3977:16:8"
                                      },
                                      "nativeSrc": "3977:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3977:18:8"
                                    },
                                    "nativeSrc": "3977:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3977:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nativeSrc": "3946:1:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3946:1:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "3939:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3939:6:8"
                                        },
                                        "nativeSrc": "3939:9:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3939:9:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nativeSrc": "3953:1:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3953:1:8"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nativeSrc": "3960:7:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3960:7:8"
                                              },
                                              {
                                                "name": "x",
                                                "nativeSrc": "3969:1:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3969:1:8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nativeSrc": "3956:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "3956:3:8"
                                            },
                                            "nativeSrc": "3956:15:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3956:15:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "3950:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3950:2:8"
                                        },
                                        "nativeSrc": "3950:22:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3950:22:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "3936:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3936:2:8"
                                    },
                                    "nativeSrc": "3936:37:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3936:37:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3929:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3929:6:8"
                                },
                                "nativeSrc": "3929:45:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3929:45:8"
                              },
                              "nativeSrc": "3926:71:8",
                              "nodeType": "YulIf",
                              "src": "3926:71:8"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nativeSrc": "3835:168:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "3866:1:8",
                            "nodeType": "YulTypedName",
                            "src": "3866:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "3869:1:8",
                            "nodeType": "YulTypedName",
                            "src": "3869:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nativeSrc": "3875:7:8",
                            "nodeType": "YulTypedName",
                            "src": "3875:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3835:168:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "4054:171:8",
                          "nodeType": "YulBlock",
                          "src": "4054:171:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "4085:111:8",
                                "nodeType": "YulBlock",
                                "src": "4085:111:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4106:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4106:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4113:3:8",
                                              "nodeType": "YulLiteral",
                                              "src": "4113:3:8",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4118:10:8",
                                              "nodeType": "YulLiteral",
                                              "src": "4118:10:8",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "4109:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4109:3:8"
                                          },
                                          "nativeSrc": "4109:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4109:20:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "4099:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4099:6:8"
                                      },
                                      "nativeSrc": "4099:31:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4099:31:8"
                                    },
                                    "nativeSrc": "4099:31:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4099:31:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4150:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4150:1:8",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4153:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4153:4:8",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "4143:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4143:6:8"
                                      },
                                      "nativeSrc": "4143:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4143:15:8"
                                    },
                                    "nativeSrc": "4143:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4143:15:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4178:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4178:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4181:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4181:4:8",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "4171:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4171:6:8"
                                      },
                                      "nativeSrc": "4171:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4171:15:8"
                                    },
                                    "nativeSrc": "4171:15:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4171:15:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "4074:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4074:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4067:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4067:6:8"
                                },
                                "nativeSrc": "4067:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4067:9:8"
                              },
                              "nativeSrc": "4064:132:8",
                              "nodeType": "YulIf",
                              "src": "4064:132:8"
                            },
                            {
                              "nativeSrc": "4205:14:8",
                              "nodeType": "YulAssignment",
                              "src": "4205:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4214:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4214:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4217:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4217:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nativeSrc": "4210:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4210:3:8"
                                },
                                "nativeSrc": "4210:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4210:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nativeSrc": "4205:1:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4205:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nativeSrc": "4008:217:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4039:1:8",
                            "nodeType": "YulTypedName",
                            "src": "4039:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4042:1:8",
                            "nodeType": "YulTypedName",
                            "src": "4042:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nativeSrc": "4048:1:8",
                            "nodeType": "YulTypedName",
                            "src": "4048:1:8",
                            "type": ""
                          }
                        ],
                        "src": "4008:217:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "4387:218:8",
                          "nodeType": "YulBlock",
                          "src": "4387:218:8",
                          "statements": [
                            {
                              "nativeSrc": "4397:26:8",
                              "nodeType": "YulAssignment",
                              "src": "4397:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4409:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4409:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4420:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "4420:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4405:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4405:3:8"
                                },
                                "nativeSrc": "4405:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4405:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4397:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4397:4:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4432:29:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4432:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4450:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "4450:3:8",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4455:1:8",
                                        "nodeType": "YulLiteral",
                                        "src": "4455:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "4446:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4446:3:8"
                                    },
                                    "nativeSrc": "4446:11:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4446:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4459:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "4459:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "4442:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4442:3:8"
                                },
                                "nativeSrc": "4442:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4442:19:8"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "4436:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "4436:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4477:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4477:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "4492:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4492:6:8"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "4500:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4500:2:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4488:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4488:3:8"
                                    },
                                    "nativeSrc": "4488:15:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4488:15:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4470:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4470:6:8"
                                },
                                "nativeSrc": "4470:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4470:34:8"
                              },
                              "nativeSrc": "4470:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "4470:34:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4524:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4524:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4535:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "4535:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4520:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4520:3:8"
                                    },
                                    "nativeSrc": "4520:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4520:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nativeSrc": "4544:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4544:6:8"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "4552:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4552:2:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4540:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4540:3:8"
                                    },
                                    "nativeSrc": "4540:15:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4540:15:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4513:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4513:6:8"
                                },
                                "nativeSrc": "4513:43:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4513:43:8"
                              },
                              "nativeSrc": "4513:43:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "4513:43:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4576:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4576:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4587:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "4587:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4572:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4572:3:8"
                                    },
                                    "nativeSrc": "4572:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4572:18:8"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "4592:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4592:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4565:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4565:6:8"
                                },
                                "nativeSrc": "4565:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4565:34:8"
                              },
                              "nativeSrc": "4565:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "4565:34:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nativeSrc": "4230:375:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4340:9:8",
                            "nodeType": "YulTypedName",
                            "src": "4340:9:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "4351:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4351:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "4359:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4359:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4367:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4367:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4378:4:8",
                            "nodeType": "YulTypedName",
                            "src": "4378:4:8",
                            "type": ""
                          }
                        ],
                        "src": "4230:375:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "4688:199:8",
                          "nodeType": "YulBlock",
                          "src": "4688:199:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "4734:16:8",
                                "nodeType": "YulBlock",
                                "src": "4734:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4743:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4743:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4746:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4746:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "4736:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4736:6:8"
                                      },
                                      "nativeSrc": "4736:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4736:12:8"
                                    },
                                    "nativeSrc": "4736:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4736:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "4709:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4709:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4718:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4718:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "4705:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4705:3:8"
                                    },
                                    "nativeSrc": "4705:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4705:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4730:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "4730:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "4701:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4701:3:8"
                                },
                                "nativeSrc": "4701:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4701:32:8"
                              },
                              "nativeSrc": "4698:52:8",
                              "nodeType": "YulIf",
                              "src": "4698:52:8"
                            },
                            {
                              "nativeSrc": "4759:29:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4759:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4778:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4778:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "4772:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4772:5:8"
                                },
                                "nativeSrc": "4772:16:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4772:16:8"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "4763:5:8",
                                  "nodeType": "YulTypedName",
                                  "src": "4763:5:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4841:16:8",
                                "nodeType": "YulBlock",
                                "src": "4841:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4850:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4850:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4853:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "4853:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "4843:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4843:6:8"
                                      },
                                      "nativeSrc": "4843:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4843:12:8"
                                    },
                                    "nativeSrc": "4843:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4843:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "4810:5:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4810:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nativeSrc": "4831:5:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "4831:5:8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nativeSrc": "4824:6:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4824:6:8"
                                            },
                                            "nativeSrc": "4824:13:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4824:13:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "4817:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4817:6:8"
                                        },
                                        "nativeSrc": "4817:21:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4817:21:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "4807:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4807:2:8"
                                    },
                                    "nativeSrc": "4807:32:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4807:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4800:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4800:6:8"
                                },
                                "nativeSrc": "4800:40:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4800:40:8"
                              },
                              "nativeSrc": "4797:60:8",
                              "nodeType": "YulIf",
                              "src": "4797:60:8"
                            },
                            {
                              "nativeSrc": "4866:15:8",
                              "nodeType": "YulAssignment",
                              "src": "4866:15:8",
                              "value": {
                                "name": "value",
                                "nativeSrc": "4876:5:8",
                                "nodeType": "YulIdentifier",
                                "src": "4876:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "4866:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4866:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nativeSrc": "4610:277:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4654:9:8",
                            "nodeType": "YulTypedName",
                            "src": "4654:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "4665:7:8",
                            "nodeType": "YulTypedName",
                            "src": "4665:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "4677:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4677:6:8",
                            "type": ""
                          }
                        ],
                        "src": "4610:277:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "4941:79:8",
                          "nodeType": "YulBlock",
                          "src": "4941:79:8",
                          "statements": [
                            {
                              "nativeSrc": "4951:17:8",
                              "nodeType": "YulAssignment",
                              "src": "4951:17:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4963:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4963:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4966:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4966:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "4959:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4959:3:8"
                                },
                                "nativeSrc": "4959:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4959:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nativeSrc": "4951:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4951:4:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4992:22:8",
                                "nodeType": "YulBlock",
                                "src": "4992:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4994:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4994:16:8"
                                      },
                                      "nativeSrc": "4994:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4994:18:8"
                                    },
                                    "nativeSrc": "4994:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4994:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nativeSrc": "4983:4:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4983:4:8"
                                  },
                                  {
                                    "name": "x",
                                    "nativeSrc": "4989:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4989:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4980:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4980:2:8"
                                },
                                "nativeSrc": "4980:11:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4980:11:8"
                              },
                              "nativeSrc": "4977:37:8",
                              "nodeType": "YulIf",
                              "src": "4977:37:8"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nativeSrc": "4892:128:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4923:1:8",
                            "nodeType": "YulTypedName",
                            "src": "4923:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4926:1:8",
                            "nodeType": "YulTypedName",
                            "src": "4926:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nativeSrc": "4932:4:8",
                            "nodeType": "YulTypedName",
                            "src": "4932:4:8",
                            "type": ""
                          }
                        ],
                        "src": "4892:128:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "5199:253:8",
                          "nodeType": "YulBlock",
                          "src": "5199:253:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5216:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5216:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5227:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5227:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5209:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5209:6:8"
                                },
                                "nativeSrc": "5209:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5209:21:8"
                              },
                              "nativeSrc": "5209:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5209:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5250:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5250:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5261:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5261:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5246:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5246:3:8"
                                    },
                                    "nativeSrc": "5246:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5246:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5266:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5266:2:8",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5239:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5239:6:8"
                                },
                                "nativeSrc": "5239:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5239:30:8"
                              },
                              "nativeSrc": "5239:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5239:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5289:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5289:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5300:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5300:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5285:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5285:3:8"
                                    },
                                    "nativeSrc": "5285:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5285:18:8"
                                  },
                                  {
                                    "hexValue": "596f75206861766520616c726561647920636c61696d656420666f7220746869",
                                    "kind": "string",
                                    "nativeSrc": "5305:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5305:34:8",
                                    "type": "",
                                    "value": "You have already claimed for thi"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5278:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5278:6:8"
                                },
                                "nativeSrc": "5278:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5278:62:8"
                              },
                              "nativeSrc": "5278:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5278:62:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5360:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5360:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5371:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5371:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5356:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5356:3:8"
                                    },
                                    "nativeSrc": "5356:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5356:18:8"
                                  },
                                  {
                                    "hexValue": "7320706572696f64206f72206974206973206e6f74207965742074696d652e",
                                    "kind": "string",
                                    "nativeSrc": "5376:33:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5376:33:8",
                                    "type": "",
                                    "value": "s period or it is not yet time."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5349:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5349:6:8"
                                },
                                "nativeSrc": "5349:61:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5349:61:8"
                              },
                              "nativeSrc": "5349:61:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5349:61:8"
                            },
                            {
                              "nativeSrc": "5419:27:8",
                              "nodeType": "YulAssignment",
                              "src": "5419:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5431:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5431:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5442:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5442:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5427:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5427:3:8"
                                },
                                "nativeSrc": "5427:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5427:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5419:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5419:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c25336cced9a4afbeb324fa0944ee937d41134cbab5aa4af9179c0599a616f55__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "5025:427:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5176:9:8",
                            "nodeType": "YulTypedName",
                            "src": "5176:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5190:4:8",
                            "nodeType": "YulTypedName",
                            "src": "5190:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5025:427:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "5631:179:8",
                          "nodeType": "YulBlock",
                          "src": "5631:179:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5648:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5648:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5659:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5659:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5641:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5641:6:8"
                                },
                                "nativeSrc": "5641:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5641:21:8"
                              },
                              "nativeSrc": "5641:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5641:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5682:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5682:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5693:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5693:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5678:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5678:3:8"
                                    },
                                    "nativeSrc": "5678:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5678:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5698:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5698:2:8",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5671:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5671:6:8"
                                },
                                "nativeSrc": "5671:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5671:30:8"
                              },
                              "nativeSrc": "5671:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5671:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5721:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5721:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5732:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5732:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5717:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5717:3:8"
                                    },
                                    "nativeSrc": "5717:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5717:18:8"
                                  },
                                  {
                                    "hexValue": "50726f6a6563743a2070726f6a6563742069732063616e63656c6c6564",
                                    "kind": "string",
                                    "nativeSrc": "5737:31:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5737:31:8",
                                    "type": "",
                                    "value": "Project: project is cancelled"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5710:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5710:6:8"
                                },
                                "nativeSrc": "5710:59:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5710:59:8"
                              },
                              "nativeSrc": "5710:59:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5710:59:8"
                            },
                            {
                              "nativeSrc": "5778:26:8",
                              "nodeType": "YulAssignment",
                              "src": "5778:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5790:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5790:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5801:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5801:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5786:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5786:3:8"
                                },
                                "nativeSrc": "5786:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5786:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5778:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5778:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_108391721ee10e9bad0554ba8a8f3c723d8fa558c09aabaa13f175d60d06895b__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "5457:353:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5608:9:8",
                            "nodeType": "YulTypedName",
                            "src": "5608:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5622:4:8",
                            "nodeType": "YulTypedName",
                            "src": "5622:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5457:353:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "5989:302:8",
                          "nodeType": "YulBlock",
                          "src": "5989:302:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6006:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6006:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6017:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6017:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5999:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5999:6:8"
                                },
                                "nativeSrc": "5999:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5999:21:8"
                              },
                              "nativeSrc": "5999:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5999:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6040:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6040:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6051:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6051:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6036:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6036:3:8"
                                    },
                                    "nativeSrc": "6036:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6036:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6056:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6056:2:8",
                                    "type": "",
                                    "value": "72"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6029:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6029:6:8"
                                },
                                "nativeSrc": "6029:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6029:30:8"
                              },
                              "nativeSrc": "6029:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6029:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6079:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6079:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6090:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6090:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6075:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6075:3:8"
                                    },
                                    "nativeSrc": "6075:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6075:18:8"
                                  },
                                  {
                                    "hexValue": "50726f6a6563743a2045697468657220697420686173206e6f74207374617274",
                                    "kind": "string",
                                    "nativeSrc": "6095:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6095:34:8",
                                    "type": "",
                                    "value": "Project: Either it has not start"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6068:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6068:6:8"
                                },
                                "nativeSrc": "6068:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6068:62:8"
                              },
                              "nativeSrc": "6068:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6068:62:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6150:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6150:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6161:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6161:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6146:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6146:3:8"
                                    },
                                    "nativeSrc": "6146:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6146:18:8"
                                  },
                                  {
                                    "hexValue": "6564206f72207468652074696d65206c696d697420666f722070726f6a656374",
                                    "kind": "string",
                                    "nativeSrc": "6166:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6166:34:8",
                                    "type": "",
                                    "value": "ed or the time limit for project"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6139:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6139:6:8"
                                },
                                "nativeSrc": "6139:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6139:62:8"
                              },
                              "nativeSrc": "6139:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6139:62:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6221:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6221:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6232:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6232:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6217:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6217:3:8"
                                    },
                                    "nativeSrc": "6217:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6217:19:8"
                                  },
                                  {
                                    "hexValue": "2065787069726564",
                                    "kind": "string",
                                    "nativeSrc": "6238:10:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6238:10:8",
                                    "type": "",
                                    "value": " expired"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6210:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6210:6:8"
                                },
                                "nativeSrc": "6210:39:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6210:39:8"
                              },
                              "nativeSrc": "6210:39:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6210:39:8"
                            },
                            {
                              "nativeSrc": "6258:27:8",
                              "nodeType": "YulAssignment",
                              "src": "6258:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6270:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6270:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6281:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6281:3:8",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6266:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6266:3:8"
                                },
                                "nativeSrc": "6266:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6266:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "6258:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6258:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_398a754eeaf34eb09768e984cc014f1ffc2876b6e498f8eb9a0f28b6ff229ba1__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "5815:476:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5966:9:8",
                            "nodeType": "YulTypedName",
                            "src": "5966:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5980:4:8",
                            "nodeType": "YulTypedName",
                            "src": "5980:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5815:476:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "6470:179:8",
                          "nodeType": "YulBlock",
                          "src": "6470:179:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6487:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6487:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6498:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6498:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6480:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6480:6:8"
                                },
                                "nativeSrc": "6480:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6480:21:8"
                              },
                              "nativeSrc": "6480:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6480:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6521:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6521:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6532:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6532:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6517:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6517:3:8"
                                    },
                                    "nativeSrc": "6517:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6517:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6537:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6537:2:8",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6510:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6510:6:8"
                                },
                                "nativeSrc": "6510:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6510:30:8"
                              },
                              "nativeSrc": "6510:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6510:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6560:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6560:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6571:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6571:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6556:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6556:3:8"
                                    },
                                    "nativeSrc": "6556:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6556:18:8"
                                  },
                                  {
                                    "hexValue": "50726f6a6563743a2070726f6a656374206861732066696e6973686564",
                                    "kind": "string",
                                    "nativeSrc": "6576:31:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6576:31:8",
                                    "type": "",
                                    "value": "Project: project has finished"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6549:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6549:6:8"
                                },
                                "nativeSrc": "6549:59:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6549:59:8"
                              },
                              "nativeSrc": "6549:59:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6549:59:8"
                            },
                            {
                              "nativeSrc": "6617:26:8",
                              "nodeType": "YulAssignment",
                              "src": "6617:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6629:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6629:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6640:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6640:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6625:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6625:3:8"
                                },
                                "nativeSrc": "6625:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6625:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "6617:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6617:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_78a04e62820ef7d9966740f379f88c001167d6b8c271bb6a6aefbe20ab705c20__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "6296:353:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "6447:9:8",
                            "nodeType": "YulTypedName",
                            "src": "6447:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "6461:4:8",
                            "nodeType": "YulTypedName",
                            "src": "6461:4:8",
                            "type": ""
                          }
                        ],
                        "src": "6296:353:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "6828:181:8",
                          "nodeType": "YulBlock",
                          "src": "6828:181:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6845:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6845:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6856:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6856:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6838:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6838:6:8"
                                },
                                "nativeSrc": "6838:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6838:21:8"
                              },
                              "nativeSrc": "6838:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6838:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6879:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6879:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6890:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6890:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6875:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6875:3:8"
                                    },
                                    "nativeSrc": "6875:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6875:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6895:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6895:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6868:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6868:6:8"
                                },
                                "nativeSrc": "6868:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6868:30:8"
                              },
                              "nativeSrc": "6868:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6868:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6918:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "6918:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6929:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "6929:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6914:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6914:3:8"
                                    },
                                    "nativeSrc": "6914:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6914:18:8"
                                  },
                                  {
                                    "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                                    "kind": "string",
                                    "nativeSrc": "6934:33:8",
                                    "nodeType": "YulLiteral",
                                    "src": "6934:33:8",
                                    "type": "",
                                    "value": "ReentrancyGuard: reentrant call"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6907:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6907:6:8"
                                },
                                "nativeSrc": "6907:61:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6907:61:8"
                              },
                              "nativeSrc": "6907:61:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "6907:61:8"
                            },
                            {
                              "nativeSrc": "6977:26:8",
                              "nodeType": "YulAssignment",
                              "src": "6977:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6989:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "6989:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7000:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7000:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6985:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6985:3:8"
                                },
                                "nativeSrc": "6985:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "6985:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "6977:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6977:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "6654:355:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "6805:9:8",
                            "nodeType": "YulTypedName",
                            "src": "6805:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "6819:4:8",
                            "nodeType": "YulTypedName",
                            "src": "6819:4:8",
                            "type": ""
                          }
                        ],
                        "src": "6654:355:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "7188:226:8",
                          "nodeType": "YulBlock",
                          "src": "7188:226:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7205:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7205:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7216:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7216:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7198:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7198:6:8"
                                },
                                "nativeSrc": "7198:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7198:21:8"
                              },
                              "nativeSrc": "7198:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "7198:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7239:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "7239:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7250:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "7250:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7235:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7235:3:8"
                                    },
                                    "nativeSrc": "7235:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7235:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7255:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7255:2:8",
                                    "type": "",
                                    "value": "36"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7228:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7228:6:8"
                                },
                                "nativeSrc": "7228:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7228:30:8"
                              },
                              "nativeSrc": "7228:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "7228:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7278:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "7278:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7289:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "7289:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7274:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7274:3:8"
                                    },
                                    "nativeSrc": "7274:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7274:18:8"
                                  },
                                  {
                                    "hexValue": "50726f6a6563743a2063616e6e6f7420726566756e642070726f6a6563742066",
                                    "kind": "string",
                                    "nativeSrc": "7294:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7294:34:8",
                                    "type": "",
                                    "value": "Project: cannot refund project f"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7267:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7267:6:8"
                                },
                                "nativeSrc": "7267:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7267:62:8"
                              },
                              "nativeSrc": "7267:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "7267:62:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7349:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "7349:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7360:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "7360:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7345:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7345:3:8"
                                    },
                                    "nativeSrc": "7345:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7345:18:8"
                                  },
                                  {
                                    "hexValue": "756e6473",
                                    "kind": "string",
                                    "nativeSrc": "7365:6:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7365:6:8",
                                    "type": "",
                                    "value": "unds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7338:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7338:6:8"
                                },
                                "nativeSrc": "7338:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7338:34:8"
                              },
                              "nativeSrc": "7338:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "7338:34:8"
                            },
                            {
                              "nativeSrc": "7381:27:8",
                              "nodeType": "YulAssignment",
                              "src": "7381:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7393:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7393:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7404:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7404:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "7389:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7389:3:8"
                                },
                                "nativeSrc": "7389:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7389:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "7381:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7381:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e8773710af496491c3fb52b7198caa95b93733036628628a1300f4729cf4f739__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "7014:400:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "7165:9:8",
                            "nodeType": "YulTypedName",
                            "src": "7165:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "7179:4:8",
                            "nodeType": "YulTypedName",
                            "src": "7179:4:8",
                            "type": ""
                          }
                        ],
                        "src": "7014:400:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "7593:227:8",
                          "nodeType": "YulBlock",
                          "src": "7593:227:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7610:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7610:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7621:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7621:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7603:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7603:6:8"
                                },
                                "nativeSrc": "7603:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7603:21:8"
                              },
                              "nativeSrc": "7603:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "7603:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7644:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "7644:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7655:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "7655:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7640:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7640:3:8"
                                    },
                                    "nativeSrc": "7640:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7640:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7660:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7660:2:8",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7633:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7633:6:8"
                                },
                                "nativeSrc": "7633:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7633:30:8"
                              },
                              "nativeSrc": "7633:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "7633:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7683:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "7683:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7694:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "7694:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7679:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7679:3:8"
                                    },
                                    "nativeSrc": "7679:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7679:18:8"
                                  },
                                  {
                                    "hexValue": "50726f6a6563743a206164647265737320686173206e6f20636f6e7472696275",
                                    "kind": "string",
                                    "nativeSrc": "7699:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7699:34:8",
                                    "type": "",
                                    "value": "Project: address has no contribu"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7672:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7672:6:8"
                                },
                                "nativeSrc": "7672:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7672:62:8"
                              },
                              "nativeSrc": "7672:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "7672:62:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7754:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "7754:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7765:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "7765:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7750:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7750:3:8"
                                    },
                                    "nativeSrc": "7750:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7750:18:8"
                                  },
                                  {
                                    "hexValue": "74696f6e73",
                                    "kind": "string",
                                    "nativeSrc": "7770:7:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7770:7:8",
                                    "type": "",
                                    "value": "tions"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7743:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7743:6:8"
                                },
                                "nativeSrc": "7743:35:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7743:35:8"
                              },
                              "nativeSrc": "7743:35:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "7743:35:8"
                            },
                            {
                              "nativeSrc": "7787:27:8",
                              "nodeType": "YulAssignment",
                              "src": "7787:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7799:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7799:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7810:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7810:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "7795:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7795:3:8"
                                },
                                "nativeSrc": "7795:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7795:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "7787:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7787:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d2fa5d737c6a47e9e2811e49b27e1de09b9a7e7d5458047b369e2ec3f12813e9__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "7419:401:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "7570:9:8",
                            "nodeType": "YulTypedName",
                            "src": "7570:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "7584:4:8",
                            "nodeType": "YulTypedName",
                            "src": "7584:4:8",
                            "type": ""
                          }
                        ],
                        "src": "7419:401:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "7906:103:8",
                          "nodeType": "YulBlock",
                          "src": "7906:103:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "7952:16:8",
                                "nodeType": "YulBlock",
                                "src": "7952:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "7961:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "7961:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "7964:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "7964:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "7954:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "7954:6:8"
                                      },
                                      "nativeSrc": "7954:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7954:12:8"
                                    },
                                    "nativeSrc": "7954:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7954:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "7927:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "7927:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7936:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "7936:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "7923:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7923:3:8"
                                    },
                                    "nativeSrc": "7923:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7923:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7948:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "7948:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "7919:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7919:3:8"
                                },
                                "nativeSrc": "7919:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7919:32:8"
                              },
                              "nativeSrc": "7916:52:8",
                              "nodeType": "YulIf",
                              "src": "7916:52:8"
                            },
                            {
                              "nativeSrc": "7977:26:8",
                              "nodeType": "YulAssignment",
                              "src": "7977:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7993:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7993:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "7987:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7987:5:8"
                                },
                                "nativeSrc": "7987:16:8",
                                "nodeType": "YulFunctionCall",
                                "src": "7987:16:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "7977:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7977:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nativeSrc": "7825:184:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "7872:9:8",
                            "nodeType": "YulTypedName",
                            "src": "7872:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "7883:7:8",
                            "nodeType": "YulTypedName",
                            "src": "7883:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "7895:6:8",
                            "nodeType": "YulTypedName",
                            "src": "7895:6:8",
                            "type": ""
                          }
                        ],
                        "src": "7825:184:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "8188:180:8",
                          "nodeType": "YulBlock",
                          "src": "8188:180:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8205:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8205:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8216:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8216:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8198:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8198:6:8"
                                },
                                "nativeSrc": "8198:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8198:21:8"
                              },
                              "nativeSrc": "8198:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "8198:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8239:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8239:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8250:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "8250:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8235:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "8235:3:8"
                                    },
                                    "nativeSrc": "8235:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8235:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8255:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8255:2:8",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8228:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8228:6:8"
                                },
                                "nativeSrc": "8228:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8228:30:8"
                              },
                              "nativeSrc": "8228:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "8228:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8278:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8278:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8289:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "8289:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8274:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "8274:3:8"
                                    },
                                    "nativeSrc": "8274:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8274:18:8"
                                  },
                                  {
                                    "hexValue": "4e6f207368617265732072656d61696e696e6720666f7220726566756e64",
                                    "kind": "string",
                                    "nativeSrc": "8294:32:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8294:32:8",
                                    "type": "",
                                    "value": "No shares remaining for refund"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8267:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8267:6:8"
                                },
                                "nativeSrc": "8267:60:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8267:60:8"
                              },
                              "nativeSrc": "8267:60:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "8267:60:8"
                            },
                            {
                              "nativeSrc": "8336:26:8",
                              "nodeType": "YulAssignment",
                              "src": "8336:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8348:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8348:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8359:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8359:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8344:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8344:3:8"
                                },
                                "nativeSrc": "8344:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8344:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "8336:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8336:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_dc58cbbc28837ed9ae7eb94482fe7ae987f092159ccea9cc12deee9f891238cd__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "8014:354:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "8165:9:8",
                            "nodeType": "YulTypedName",
                            "src": "8165:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "8179:4:8",
                            "nodeType": "YulTypedName",
                            "src": "8179:4:8",
                            "type": ""
                          }
                        ],
                        "src": "8014:354:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "8421:77:8",
                          "nodeType": "YulBlock",
                          "src": "8421:77:8",
                          "statements": [
                            {
                              "nativeSrc": "8431:16:8",
                              "nodeType": "YulAssignment",
                              "src": "8431:16:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "8442:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8442:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "8445:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8445:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8438:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8438:3:8"
                                },
                                "nativeSrc": "8438:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8438:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "8431:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8431:3:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "8470:22:8",
                                "nodeType": "YulBlock",
                                "src": "8470:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "8472:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8472:16:8"
                                      },
                                      "nativeSrc": "8472:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8472:18:8"
                                    },
                                    "nativeSrc": "8472:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8472:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "8462:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8462:1:8"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "8465:3:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8465:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "8459:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8459:2:8"
                                },
                                "nativeSrc": "8459:10:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8459:10:8"
                              },
                              "nativeSrc": "8456:36:8",
                              "nodeType": "YulIf",
                              "src": "8456:36:8"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "8373:125:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "8404:1:8",
                            "nodeType": "YulTypedName",
                            "src": "8404:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "8407:1:8",
                            "nodeType": "YulTypedName",
                            "src": "8407:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "8413:3:8",
                            "nodeType": "YulTypedName",
                            "src": "8413:3:8",
                            "type": ""
                          }
                        ],
                        "src": "8373:125:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "8632:145:8",
                          "nodeType": "YulBlock",
                          "src": "8632:145:8",
                          "statements": [
                            {
                              "nativeSrc": "8642:26:8",
                              "nodeType": "YulAssignment",
                              "src": "8642:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8654:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8654:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8665:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8665:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8650:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8650:3:8"
                                },
                                "nativeSrc": "8650:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8650:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "8642:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8642:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8684:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8684:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "8699:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8699:6:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "8715:3:8",
                                                "nodeType": "YulLiteral",
                                                "src": "8715:3:8",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "8720:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "8720:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "8711:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "8711:3:8"
                                            },
                                            "nativeSrc": "8711:11:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "8711:11:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "8724:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "8724:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "8707:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "8707:3:8"
                                        },
                                        "nativeSrc": "8707:19:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "8707:19:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "8695:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "8695:3:8"
                                    },
                                    "nativeSrc": "8695:32:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8695:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8677:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8677:6:8"
                                },
                                "nativeSrc": "8677:51:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8677:51:8"
                              },
                              "nativeSrc": "8677:51:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "8677:51:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8748:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8748:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8759:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "8759:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8744:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "8744:3:8"
                                    },
                                    "nativeSrc": "8744:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8744:18:8"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "8764:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8764:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8737:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8737:6:8"
                                },
                                "nativeSrc": "8737:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8737:34:8"
                              },
                              "nativeSrc": "8737:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "8737:34:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nativeSrc": "8503:274:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "8593:9:8",
                            "nodeType": "YulTypedName",
                            "src": "8593:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "8604:6:8",
                            "nodeType": "YulTypedName",
                            "src": "8604:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "8612:6:8",
                            "nodeType": "YulTypedName",
                            "src": "8612:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "8623:4:8",
                            "nodeType": "YulTypedName",
                            "src": "8623:4:8",
                            "type": ""
                          }
                        ],
                        "src": "8503:274:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "8956:246:8",
                          "nodeType": "YulBlock",
                          "src": "8956:246:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8973:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8973:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8984:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8984:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8966:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8966:6:8"
                                },
                                "nativeSrc": "8966:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8966:21:8"
                              },
                              "nativeSrc": "8966:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "8966:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9007:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9007:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9018:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "9018:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9003:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9003:3:8"
                                    },
                                    "nativeSrc": "9003:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9003:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9023:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9023:2:8",
                                    "type": "",
                                    "value": "56"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8996:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8996:6:8"
                                },
                                "nativeSrc": "8996:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8996:30:8"
                              },
                              "nativeSrc": "8996:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "8996:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9046:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9046:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9057:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "9057:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9042:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9042:3:8"
                                    },
                                    "nativeSrc": "9042:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9042:18:8"
                                  },
                                  {
                                    "hexValue": "5368617265732063616e2774206265206c657373207468616e207a65726f2061",
                                    "kind": "string",
                                    "nativeSrc": "9062:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9062:34:8",
                                    "type": "",
                                    "value": "Shares can't be less than zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9035:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9035:6:8"
                                },
                                "nativeSrc": "9035:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9035:62:8"
                              },
                              "nativeSrc": "9035:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "9035:62:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9117:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9117:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9128:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "9128:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9113:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9113:3:8"
                                    },
                                    "nativeSrc": "9113:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9113:18:8"
                                  },
                                  {
                                    "hexValue": "6e64206d6f7265207468616e206d617820616c6c6f776564",
                                    "kind": "string",
                                    "nativeSrc": "9133:26:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9133:26:8",
                                    "type": "",
                                    "value": "nd more than max allowed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9106:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9106:6:8"
                                },
                                "nativeSrc": "9106:54:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9106:54:8"
                              },
                              "nativeSrc": "9106:54:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "9106:54:8"
                            },
                            {
                              "nativeSrc": "9169:27:8",
                              "nodeType": "YulAssignment",
                              "src": "9169:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "9181:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "9181:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9192:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9192:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "9177:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9177:3:8"
                                },
                                "nativeSrc": "9177:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9177:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "9169:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9169:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9af13a862102b50d3aa2ca92d9f3354d30b87145db0df5ce2788f39d9ff967f4__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "8782:420:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "8933:9:8",
                            "nodeType": "YulTypedName",
                            "src": "8933:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "8947:4:8",
                            "nodeType": "YulTypedName",
                            "src": "8947:4:8",
                            "type": ""
                          }
                        ],
                        "src": "8782:420:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "9381:224:8",
                          "nodeType": "YulBlock",
                          "src": "9381:224:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "9398:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "9398:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9409:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9409:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9391:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9391:6:8"
                                },
                                "nativeSrc": "9391:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9391:21:8"
                              },
                              "nativeSrc": "9391:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "9391:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9432:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9432:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9443:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "9443:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9428:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9428:3:8"
                                    },
                                    "nativeSrc": "9428:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9428:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9448:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9448:2:8",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9421:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9421:6:8"
                                },
                                "nativeSrc": "9421:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9421:30:8"
                              },
                              "nativeSrc": "9421:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "9421:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9471:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9471:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9482:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "9482:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9467:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9467:3:8"
                                    },
                                    "nativeSrc": "9467:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9467:18:8"
                                  },
                                  {
                                    "hexValue": "457863656564696e6720746f74616c2066756e642072616973696e6720676f61",
                                    "kind": "string",
                                    "nativeSrc": "9487:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9487:34:8",
                                    "type": "",
                                    "value": "Exceeding total fund raising goa"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9460:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9460:6:8"
                                },
                                "nativeSrc": "9460:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9460:62:8"
                              },
                              "nativeSrc": "9460:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "9460:62:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9542:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9542:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9553:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "9553:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9538:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9538:3:8"
                                    },
                                    "nativeSrc": "9538:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9538:18:8"
                                  },
                                  {
                                    "hexValue": "6c21",
                                    "kind": "string",
                                    "nativeSrc": "9558:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9558:4:8",
                                    "type": "",
                                    "value": "l!"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9531:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9531:6:8"
                                },
                                "nativeSrc": "9531:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9531:32:8"
                              },
                              "nativeSrc": "9531:32:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "9531:32:8"
                            },
                            {
                              "nativeSrc": "9572:27:8",
                              "nodeType": "YulAssignment",
                              "src": "9572:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "9584:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "9584:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9595:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9595:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "9580:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9580:3:8"
                                },
                                "nativeSrc": "9580:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9580:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "9572:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9572:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4b16fb38ac6f5f5b9f370eabc0e0834b0dc65a806b836f85a2bbac95ca0ec49a__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "9207:398:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "9358:9:8",
                            "nodeType": "YulTypedName",
                            "src": "9358:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "9372:4:8",
                            "nodeType": "YulTypedName",
                            "src": "9372:4:8",
                            "type": ""
                          }
                        ],
                        "src": "9207:398:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "9784:232:8",
                          "nodeType": "YulBlock",
                          "src": "9784:232:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "9801:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "9801:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9812:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9812:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9794:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9794:6:8"
                                },
                                "nativeSrc": "9794:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9794:21:8"
                              },
                              "nativeSrc": "9794:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "9794:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9835:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9835:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9846:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "9846:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9831:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9831:3:8"
                                    },
                                    "nativeSrc": "9831:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9831:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9851:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9851:2:8",
                                    "type": "",
                                    "value": "42"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9824:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9824:6:8"
                                },
                                "nativeSrc": "9824:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9824:30:8"
                              },
                              "nativeSrc": "9824:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "9824:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9874:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9874:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9885:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "9885:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9870:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9870:3:8"
                                    },
                                    "nativeSrc": "9870:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9870:18:8"
                                  },
                                  {
                                    "hexValue": "43616e277420627579206d6f7265207468616e20746865206d61782073686172",
                                    "kind": "string",
                                    "nativeSrc": "9890:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9890:34:8",
                                    "type": "",
                                    "value": "Can't buy more than the max shar"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9863:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9863:6:8"
                                },
                                "nativeSrc": "9863:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9863:62:8"
                              },
                              "nativeSrc": "9863:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "9863:62:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9945:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9945:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9956:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "9956:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9941:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9941:3:8"
                                    },
                                    "nativeSrc": "9941:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9941:18:8"
                                  },
                                  {
                                    "hexValue": "6520616c6c6f77656421",
                                    "kind": "string",
                                    "nativeSrc": "9961:12:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9961:12:8",
                                    "type": "",
                                    "value": "e allowed!"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9934:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9934:6:8"
                                },
                                "nativeSrc": "9934:40:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9934:40:8"
                              },
                              "nativeSrc": "9934:40:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "9934:40:8"
                            },
                            {
                              "nativeSrc": "9983:27:8",
                              "nodeType": "YulAssignment",
                              "src": "9983:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "9995:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "9995:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10006:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "10006:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "9991:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9991:3:8"
                                },
                                "nativeSrc": "9991:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9991:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "9983:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9983:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8bf738d02a1977ab94fe6c8bf66f5fb808cfc100a9985eca7b8bbca31642fedb__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "9610:406:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "9761:9:8",
                            "nodeType": "YulTypedName",
                            "src": "9761:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "9775:4:8",
                            "nodeType": "YulTypedName",
                            "src": "9775:4:8",
                            "type": ""
                          }
                        ],
                        "src": "9610:406:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "10195:224:8",
                          "nodeType": "YulBlock",
                          "src": "10195:224:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "10212:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "10212:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10223:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "10223:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10205:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10205:6:8"
                                },
                                "nativeSrc": "10205:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "10205:21:8"
                              },
                              "nativeSrc": "10205:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "10205:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "10246:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "10246:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10257:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "10257:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "10242:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "10242:3:8"
                                    },
                                    "nativeSrc": "10242:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10242:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10262:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "10262:2:8",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10235:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10235:6:8"
                                },
                                "nativeSrc": "10235:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "10235:30:8"
                              },
                              "nativeSrc": "10235:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "10235:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "10285:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "10285:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10296:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "10296:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "10281:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "10281:3:8"
                                    },
                                    "nativeSrc": "10281:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10281:18:8"
                                  },
                                  {
                                    "hexValue": "50726f6a6563743a2053616c65206973206e6f742066696e6973686564207965",
                                    "kind": "string",
                                    "nativeSrc": "10301:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "10301:34:8",
                                    "type": "",
                                    "value": "Project: Sale is not finished ye"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10274:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10274:6:8"
                                },
                                "nativeSrc": "10274:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "10274:62:8"
                              },
                              "nativeSrc": "10274:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "10274:62:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "10356:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "10356:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10367:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "10367:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "10352:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "10352:3:8"
                                    },
                                    "nativeSrc": "10352:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10352:18:8"
                                  },
                                  {
                                    "hexValue": "7421",
                                    "kind": "string",
                                    "nativeSrc": "10372:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "10372:4:8",
                                    "type": "",
                                    "value": "t!"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10345:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10345:6:8"
                                },
                                "nativeSrc": "10345:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "10345:32:8"
                              },
                              "nativeSrc": "10345:32:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "10345:32:8"
                            },
                            {
                              "nativeSrc": "10386:27:8",
                              "nodeType": "YulAssignment",
                              "src": "10386:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "10398:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "10398:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10409:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "10409:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "10394:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10394:3:8"
                                },
                                "nativeSrc": "10394:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "10394:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "10386:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10386:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b5a013017efe5d2f9b09472663c19e7d04de0fd426c1054b74c29f7ef175d683__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "10021:398:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "10172:9:8",
                            "nodeType": "YulTypedName",
                            "src": "10172:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "10186:4:8",
                            "nodeType": "YulTypedName",
                            "src": "10186:4:8",
                            "type": ""
                          }
                        ],
                        "src": "10021:398:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "10598:240:8",
                          "nodeType": "YulBlock",
                          "src": "10598:240:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "10615:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "10615:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10626:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "10626:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10608:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10608:6:8"
                                },
                                "nativeSrc": "10608:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "10608:21:8"
                              },
                              "nativeSrc": "10608:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "10608:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "10649:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "10649:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10660:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "10660:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "10645:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "10645:3:8"
                                    },
                                    "nativeSrc": "10645:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10645:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10665:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "10665:2:8",
                                    "type": "",
                                    "value": "50"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10638:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10638:6:8"
                                },
                                "nativeSrc": "10638:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "10638:30:8"
                              },
                              "nativeSrc": "10638:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "10638:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "10688:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "10688:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10699:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "10699:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "10684:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "10684:3:8"
                                    },
                                    "nativeSrc": "10684:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10684:18:8"
                                  },
                                  {
                                    "hexValue": "43616e277420636c61696d2066756e642072616973696e6720746f6b656e7320",
                                    "kind": "string",
                                    "nativeSrc": "10704:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "10704:34:8",
                                    "type": "",
                                    "value": "Can't claim fund raising tokens "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10677:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10677:6:8"
                                },
                                "nativeSrc": "10677:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "10677:62:8"
                              },
                              "nativeSrc": "10677:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "10677:62:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "10759:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "10759:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10770:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "10770:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "10755:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "10755:3:8"
                                    },
                                    "nativeSrc": "10755:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10755:18:8"
                                  },
                                  {
                                    "hexValue": "7573696e672074686973206d6574686f6421",
                                    "kind": "string",
                                    "nativeSrc": "10775:20:8",
                                    "nodeType": "YulLiteral",
                                    "src": "10775:20:8",
                                    "type": "",
                                    "value": "using this method!"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10748:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10748:6:8"
                                },
                                "nativeSrc": "10748:48:8",
                                "nodeType": "YulFunctionCall",
                                "src": "10748:48:8"
                              },
                              "nativeSrc": "10748:48:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "10748:48:8"
                            },
                            {
                              "nativeSrc": "10805:27:8",
                              "nodeType": "YulAssignment",
                              "src": "10805:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "10817:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "10817:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10828:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "10828:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "10813:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10813:3:8"
                                },
                                "nativeSrc": "10813:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "10813:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "10805:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "10805:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_44214bc30c988c8d9ecc22952ffa973a971a6bcb3faa37ff3ad56326a032c64b__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "10424:414:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "10575:9:8",
                            "nodeType": "YulTypedName",
                            "src": "10575:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "10589:4:8",
                            "nodeType": "YulTypedName",
                            "src": "10589:4:8",
                            "type": ""
                          }
                        ],
                        "src": "10424:414:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "11000:188:8",
                          "nodeType": "YulBlock",
                          "src": "11000:188:8",
                          "statements": [
                            {
                              "nativeSrc": "11010:26:8",
                              "nodeType": "YulAssignment",
                              "src": "11010:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "11022:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "11022:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11033:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "11033:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "11018:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "11018:3:8"
                                },
                                "nativeSrc": "11018:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "11018:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "11010:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "11010:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "11052:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "11052:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "11067:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "11067:6:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "11083:3:8",
                                                "nodeType": "YulLiteral",
                                                "src": "11083:3:8",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "11088:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "11088:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "11079:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "11079:3:8"
                                            },
                                            "nativeSrc": "11079:11:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "11079:11:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "11092:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "11092:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "11075:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "11075:3:8"
                                        },
                                        "nativeSrc": "11075:19:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "11075:19:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "11063:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "11063:3:8"
                                    },
                                    "nativeSrc": "11063:32:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11063:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11045:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "11045:6:8"
                                },
                                "nativeSrc": "11045:51:8",
                                "nodeType": "YulFunctionCall",
                                "src": "11045:51:8"
                              },
                              "nativeSrc": "11045:51:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "11045:51:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "11116:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "11116:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "11127:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "11127:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "11112:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "11112:3:8"
                                    },
                                    "nativeSrc": "11112:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11112:18:8"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "11132:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "11132:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11105:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "11105:6:8"
                                },
                                "nativeSrc": "11105:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "11105:34:8"
                              },
                              "nativeSrc": "11105:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "11105:34:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "11159:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "11159:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "11170:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "11170:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "11155:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "11155:3:8"
                                    },
                                    "nativeSrc": "11155:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11155:18:8"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "11175:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "11175:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11148:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "11148:6:8"
                                },
                                "nativeSrc": "11148:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "11148:34:8"
                              },
                              "nativeSrc": "11148:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "11148:34:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "10843:345:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "10953:9:8",
                            "nodeType": "YulTypedName",
                            "src": "10953:9:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "10964:6:8",
                            "nodeType": "YulTypedName",
                            "src": "10964:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "10972:6:8",
                            "nodeType": "YulTypedName",
                            "src": "10972:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "10980:6:8",
                            "nodeType": "YulTypedName",
                            "src": "10980:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "10991:4:8",
                            "nodeType": "YulTypedName",
                            "src": "10991:4:8",
                            "type": ""
                          }
                        ],
                        "src": "10843:345:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "11367:182:8",
                          "nodeType": "YulBlock",
                          "src": "11367:182:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "11384:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "11384:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11395:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "11395:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11377:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "11377:6:8"
                                },
                                "nativeSrc": "11377:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "11377:21:8"
                              },
                              "nativeSrc": "11377:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "11377:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "11418:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "11418:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "11429:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "11429:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "11414:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "11414:3:8"
                                    },
                                    "nativeSrc": "11414:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11414:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11434:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "11434:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11407:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "11407:6:8"
                                },
                                "nativeSrc": "11407:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "11407:30:8"
                              },
                              "nativeSrc": "11407:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "11407:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "11457:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "11457:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "11468:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "11468:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "11453:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "11453:3:8"
                                    },
                                    "nativeSrc": "11453:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11453:18:8"
                                  },
                                  {
                                    "hexValue": "50726f6a6563743a2070726f6a656374206973206e6f742066696e6973686564",
                                    "kind": "string",
                                    "nativeSrc": "11473:34:8",
                                    "nodeType": "YulLiteral",
                                    "src": "11473:34:8",
                                    "type": "",
                                    "value": "Project: project is not finished"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11446:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "11446:6:8"
                                },
                                "nativeSrc": "11446:62:8",
                                "nodeType": "YulFunctionCall",
                                "src": "11446:62:8"
                              },
                              "nativeSrc": "11446:62:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "11446:62:8"
                            },
                            {
                              "nativeSrc": "11517:26:8",
                              "nodeType": "YulAssignment",
                              "src": "11517:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "11529:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "11529:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11540:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "11540:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "11525:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "11525:3:8"
                                },
                                "nativeSrc": "11525:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "11525:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "11517:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "11517:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e37d6a0f601d8ab78444143c8fa3b731c0091286ce4ea7fecf8c783d03c7a576__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "11193:356:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "11344:9:8",
                            "nodeType": "YulTypedName",
                            "src": "11344:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "11358:4:8",
                            "nodeType": "YulTypedName",
                            "src": "11358:4:8",
                            "type": ""
                          }
                        ],
                        "src": "11193:356:8"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$861__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_01b47e778b90709a5ab68bba6dde33bfb2f1d58a3458616f0140f3faeea46f73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Nothing to recover\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c25336cced9a4afbeb324fa0944ee937d41134cbab5aa4af9179c0599a616f55__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"You have already claimed for thi\")\n        mstore(add(headStart, 96), \"s period or it is not yet time.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_108391721ee10e9bad0554ba8a8f3c723d8fa558c09aabaa13f175d60d06895b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Project: project is cancelled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_398a754eeaf34eb09768e984cc014f1ffc2876b6e498f8eb9a0f28b6ff229ba1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 72)\n        mstore(add(headStart, 64), \"Project: Either it has not start\")\n        mstore(add(headStart, 96), \"ed or the time limit for project\")\n        mstore(add(headStart, 128), \" expired\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_78a04e62820ef7d9966740f379f88c001167d6b8c271bb6a6aefbe20ab705c20__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Project: project has finished\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e8773710af496491c3fb52b7198caa95b93733036628628a1300f4729cf4f739__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Project: cannot refund project f\")\n        mstore(add(headStart, 96), \"unds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d2fa5d737c6a47e9e2811e49b27e1de09b9a7e7d5458047b369e2ec3f12813e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Project: address has no contribu\")\n        mstore(add(headStart, 96), \"tions\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_dc58cbbc28837ed9ae7eb94482fe7ae987f092159ccea9cc12deee9f891238cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"No shares remaining for refund\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9af13a862102b50d3aa2ca92d9f3354d30b87145db0df5ce2788f39d9ff967f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Shares can't be less than zero a\")\n        mstore(add(headStart, 96), \"nd more than max allowed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4b16fb38ac6f5f5b9f370eabc0e0834b0dc65a806b836f85a2bbac95ca0ec49a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Exceeding total fund raising goa\")\n        mstore(add(headStart, 96), \"l!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8bf738d02a1977ab94fe6c8bf66f5fb808cfc100a9985eca7b8bbca31642fedb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Can't buy more than the max shar\")\n        mstore(add(headStart, 96), \"e allowed!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b5a013017efe5d2f9b09472663c19e7d04de0fd426c1054b74c29f7ef175d683__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Project: Sale is not finished ye\")\n        mstore(add(headStart, 96), \"t!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_44214bc30c988c8d9ecc22952ffa973a971a6bcb3faa37ff3ad56326a032c64b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Can't claim fund raising tokens \")\n        mstore(add(headStart, 96), \"using this method!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_e37d6a0f601d8ab78444143c8fa3b731c0091286ce4ea7fecf8c783d03c7a576__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Project: project is not finished\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106102765760003560e01c80637d549e991161014f578063baad7d85116100c1578063ccec37161161007a578063ccec3716146106e1578063cfb2b5e914610701578063dd62ed3e1461072e578063e7afeeed14610774578063f2fde38b146107a1578063fa2af9da146107c157600080fd5b8063baad7d851461063d578063c0daee491461065d578063c16a038314610673578063c2ced7e5146106a0578063c5c4744c146106b5578063ca34da20146106cb57600080fd5b806395ee12211161011357806395ee122114610580578063992642e51461059a5780639e7b08d5146105ba578063a9059cbb146105d0578063abd6192c146105f0578063ba53c2831461061d57600080fd5b80637d549e99146104ed5780638d4e4083146105035780638da5cb5b1461052357806394febbf31461055557806395d89b411461056b57600080fd5b8063313ce567116101e85780636d1e6516116101ac5780636d1e65161461044357806370a0823114610458578063715018a61461048e57806373aff5af146104a35780637921ba96146104b95780637b352962146104ce57600080fd5b8063313ce567146103ba57806343d25e82146103d657806349a1ae91146103ec5780634bb278f3146104015780635d97c1a01461041657600080fd5b8063106425091161023a578063106425091461032d578063156435541461034357806318160ddd1461035957806323b872dd1461036e57806326232a2e1461038e57806326493848146103a457600080fd5b80630614117a1461028257806306fdde031461029957806307e87512146102c4578063095ea7b3146102e85780631008e9611461031857600080fd5b3661027d57005b600080fd5b34801561028e57600080fd5b506102976107e1565b005b3480156102a557600080fd5b506102ae610862565b6040516102bb9190611e51565b60405180910390f35b3480156102d057600080fd5b506102da601a5481565b6040519081526020016102bb565b3480156102f457600080fd5b50610308610303366004611ebc565b6108f4565b60405190151581526020016102bb565b34801561032457600080fd5b5061029761090e565b34801561033957600080fd5b506102da600f5481565b34801561034f57600080fd5b506102da600b5481565b34801561036557600080fd5b506003546102da565b34801561037a57600080fd5b50610308610389366004611ee6565b6109e7565b34801561039a57600080fd5b506102da60085481565b3480156103b057600080fd5b506102da60125481565b3480156103c657600080fd5b50604051601281526020016102bb565b3480156103e257600080fd5b506102da60105481565b3480156103f857600080fd5b50610297610a0b565b34801561040d57600080fd5b50610297610afe565b34801561042257600080fd5b506102da610431366004611f22565b60166020526000908152604090205481565b34801561044f57600080fd5b50610297610b61565b34801561046457600080fd5b506102da610473366004611f22565b6001600160a01b031660009081526001602052604090205490565b34801561049a57600080fd5b50610297610c28565b3480156104af57600080fd5b506102da600e5481565b3480156104c557600080fd5b50610297610c3c565b3480156104da57600080fd5b5060145461030890610100900460ff1681565b3480156104f957600080fd5b506102da60135481565b34801561050f57600080fd5b506014546103089062010000900460ff1681565b34801561052f57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016102bb565b34801561056157600080fd5b506102da600a5481565b34801561057757600080fd5b506102ae610f33565b34801561058c57600080fd5b506014546103089060ff1681565b3480156105a657600080fd5b5060075461053d906001600160a01b031681565b3480156105c657600080fd5b506102da600c5481565b3480156105dc57600080fd5b506103086105eb366004611ebc565b610f42565b3480156105fc57600080fd5b506102da61060b366004611f22565b60196020526000908152604090205481565b34801561062957600080fd5b50610297610638366004611f44565b610f50565b34801561064957600080fd5b506102da610658366004611f22565b611404565b34801561066957600080fd5b506102da60115481565b34801561067f57600080fd5b506102da61068e366004611f22565b60186020526000908152604090205481565b3480156106ac57600080fd5b506102976114dd565b3480156106c157600080fd5b506102da600d5481565b3480156106d757600080fd5b506102da601b5481565b3480156106ed57600080fd5b506102976106fc366004611f22565b611649565b34801561070d57600080fd5b506102da61071c366004611f22565b60176020526000908152604090205481565b34801561073a57600080fd5b506102da610749366004611f5d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561078057600080fd5b506102da61078f366004611f22565b60156020526000908152604090205481565b3480156107ad57600080fd5b506102976107bc366004611f22565b6117c9565b3480156107cd57600080fd5b5060095461053d906001600160a01b031681565b6107e9611804565b600047116108335760405162461bcd60e51b81526020600482015260126024820152712737ba3434b733903a37903932b1b7bb32b960711b60448201526064015b60405180910390fd5b60405133904780156108fc02916000818181858888f1935050505015801561085f573d6000803e3d6000fd5b50565b60606004805461087190611f90565b80601f016020809104026020016040519081016040528092919081815260200182805461089d90611f90565b80156108ea5780601f106108bf576101008083540402835291602001916108ea565b820191906000526020600020905b8154815290600101906020018083116108cd57829003601f168201915b5050505050905090565b600033610902818585611831565b60019150505b92915050565b610916611804565b60006064600f54600d5461092a9190611fe0565b6109349190611ff7565b6007546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af115801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b09190612019565b506040518181527f5bd597f43e1aaceef3ddd1a4ef7f8c1cd0898cab692b0988cd731bbd40920fcb9060200160405180910390a150565b6000336109f585828561183e565b610a008585856118bc565b506001949350505050565b600062278d0060105442610a1f919061203b565b610a299190611ff7565b336000908152601760205260409020549091508111610ab05760405162461bcd60e51b815260206004820152603f60248201527f596f75206861766520616c726561647920636c61696d656420666f722074686960448201527f7320706572696f64206f72206974206973206e6f74207965742074696d652e00606482015260840161082a565b33600090815260176020526040812054610aca908361203b565b3360009081526017602052604081208490559091505b81811015610af957610af13361191b565b600101610ae0565b505050565b610b06611804565b610b0e6119e6565b6014805462ff00001916620100001790554260108190556040517f9d7c6bbe8ca6f2433812f43ed204a1d7ea4ae548db3a3d6e83f8d1ce67e31a5391610b579190815260200190565b60405180910390a1565b610b69611804565b60145460ff1615610b8c5760405162461bcd60e51b815260040161082a9061204e565b600a544210158015610b9f5750600b5442105b610bbb5760405162461bcd60e51b815260040161082a90612085565b601454610100900460ff1615610c135760405162461bcd60e51b815260206004820152601d60248201527f50726f6a6563743a2070726f6a656374206861732066696e6973686564000000604482015260640161082a565b6014805460ff19166001179055600e54601155565b610c30611804565b610c3a6000611bd5565b565b600260065403610c5e5760405162461bcd60e51b815260040161082a906120f3565b600260065560145460ff1680610c895750600b544210158015610c895750601454610100900460ff16155b610ce15760405162461bcd60e51b8152602060048201526024808201527f50726f6a6563743a2063616e6e6f7420726566756e642070726f6a6563742066604482015263756e647360e01b606482015260840161082a565b33600090815260156020526040902054610d0d5760405162461bcd60e51b815260040161082a9061212a565b6000601154118015610d9a575033600090815260156020526040908190205460075491516370a0823160e01b815230600482015290916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d97919061216f565b10155b610de65760405162461bcd60e51b815260206004820152601e60248201527f4e6f207368617265732072656d61696e696e6720666f7220726566756e640000604482015260640161082a565b336000908152601560205260408120546012805491928392610e09908490612188565b90915550503360009081526015602090815260408083208390556018909152812054600e805491929091610e3e90849061203b565b9091555050336000908152601860205260408120546011805491929091610e6690849061203b565b90915550503360008181526018602052604080822091909155600754905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef39190612019565b50604051818152309033907ff40cc8c1a1d17359049ba500cfc894596a692cffc9d03943cd92ec2e159cf6ae9060200160405180910390a3506001600655565b60606005805461087190611f90565b6000336109028185856118bc565b60145460ff1615610f735760405162461bcd60e51b815260040161082a9061204e565b600a544210158015610f865750600b5442105b610fa25760405162461bcd60e51b815260040161082a90612085565b601454610100900460ff1615610ffa5760405162461bcd60e51b815260206004820152601d60248201527f50726f6a6563743a2070726f6a656374206861732066696e6973686564000000604482015260640161082a565b60026006540361101c5760405162461bcd60e51b815260040161082a906120f3565b600260065580158015906110325750601b548111155b6110a45760405162461bcd60e51b815260206004820152603860248201527f5368617265732063616e2774206265206c657373207468616e207a65726f206160448201527f6e64206d6f7265207468616e206d617820616c6c6f7765640000000000000000606482015260840161082a565b600c546007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156110ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611113919061216f565b82601a546111219190611fe0565b61112b9190612188565b11156111845760405162461bcd60e51b815260206004820152602260248201527f457863656564696e6720746f74616c2066756e642072616973696e6720676f616044820152616c2160f01b606482015260840161082a565b601b54336000908152601860205260409020546111a2908390612188565b11156112035760405162461bcd60e51b815260206004820152602a60248201527f43616e277420627579206d6f7265207468616e20746865206d617820736861726044820152696520616c6c6f7765642160b01b606482015260840161082a565b600081601a546112139190611fe0565b9050601b548203611232576014805461ff0019166101001790556112ce565b600c546007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a1919061216f565b83601a546112af9190611fe0565b6112b99190612188565b106112ce576014805461ff0019166101001790555b6007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611325573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113499190612019565b503360009081526015602052604081208054839290611369908490612188565b9091555050336000908152601860205260408120805484929061138d908490612188565b9250508190555080600d60008282546113a69190612188565b9250508190555081600e60008282546113bf9190612188565b9091555050604051818152309033907f71be8766c1bd9bb33623f518aecc1d98612c75b596f4a0c38408f72239ef4e609060200160405180910390a350506001600655565b6001600160a01b0381166000908152601560205260408120546114395760405162461bcd60e51b815260040161082a9061212a565b6001600160a01b038216600090815260166020526040812054810361146c57601054611465904261203b565b9050611492565b6001600160a01b03831660009081526016602052604090205461148f904261203b565b90505b600f546001600160a01b03841660009081526015602052604081205490916301e133809184916114c191611fe0565b6114cb9190611fe0565b6114d59190611ff7565b949350505050565b60145460ff16156115005760405162461bcd60e51b815260040161082a9061204e565b6002600654036115225760405162461bcd60e51b815260040161082a906120f3565b600260065560145462010000900460ff1661158a5760405162461bcd60e51b815260206004820152602260248201527f50726f6a6563743a2053616c65206973206e6f742066696e6973686564207965604482015261742160f01b606482015260840161082a565b336000908152601560205260409020546115b65760405162461bcd60e51b815260040161082a9061212a565b33600090815260186020908152604080832054601990925282208054919283926115e1908490612188565b909155506115f190503382611c25565b80601360008282546116039190612188565b909155505060408051338152602081018390527f649fde579b8ba49bd4fbcb330614cb075b8d53c352c5adc49161b6f654e400a2910160405180910390a1506001600655565b611651611804565b6007546001600160a01b03908116908216036116ca5760405162461bcd60e51b815260206004820152603260248201527f43616e277420636c61696d2066756e642072616973696e6720746f6b656e73206044820152717573696e672074686973206d6574686f642160701b606482015260840161082a565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611711573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611735919061216f565b9050816001600160a01b031663a9059cbb6117586000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156117a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af99190612019565b6117d1611804565b6001600160a01b0381166117fb57604051631e4fbdf760e01b81526000600482015260240161082a565b61085f81611bd5565b6000546001600160a01b03163314610c3a5760405163118cdaa760e01b815233600482015260240161082a565b610af98383836001611c5f565b6001600160a01b0383811660009081526002602090815260408083209386168352929052205460001981146118b657818110156118a757604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161082a565b6118b684848484036000611c5f565b50505050565b6001600160a01b0383166118e657604051634b637e8f60e11b81526000600482015260240161082a565b6001600160a01b0382166119105760405163ec442f0560e01b81526000600482015260240161082a565b610af9838383611d34565b600061192682611404565b60075460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af115801561197b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199f9190612019565b50604080516001600160a01b0384168152602081018390527fd6a45326680045c471b7b30597d25e52e420f1e7535046ca9ad2944a1bb53487910160405180910390a15050565b601454610100900460ff16611a3d5760405162461bcd60e51b815260206004820181905260248201527f50726f6a6563743a2070726f6a656374206973206e6f742066696e6973686564604482015260640161082a565b60006064600f54600d54611a519190611fe0565b611a5b9190611ff7565b90506000606460085483600d54611a72919061203b565b611a7c9190611fe0565b611a869190611ff7565b905060008183600d54611a99919061203b565b611aa3919061203b565b60075460095460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101869052929350169063a9059cbb906044016020604051808303816000875af1158015611afa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1e9190612019565b5060075460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015611b70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b949190612019565b50600c54604051908152309033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb906020015b60405180910390a3505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216611c4f5760405163ec442f0560e01b81526000600482015260240161082a565b611c5b60008383611d34565b5050565b6001600160a01b038416611c895760405163e602df0560e01b81526000600482015260240161082a565b6001600160a01b038316611cb357604051634a1406b160e11b81526000600482015260240161082a565b6001600160a01b03808516600090815260026020908152604080832093871683529290522082905580156118b657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d2691815260200190565b60405180910390a350505050565b6001600160a01b038316611d5f578060036000828254611d549190612188565b90915550611dd19050565b6001600160a01b03831660009081526001602052604090205481811015611db25760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161082a565b6001600160a01b03841660009081526001602052604090209082900390555b6001600160a01b038216611ded57600380548290039055611e0c565b6001600160a01b03821660009081526001602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611bc891815260200190565b60006020808352835180602085015260005b81811015611e7f57858101830151858201604001528201611e63565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611eb757600080fd5b919050565b60008060408385031215611ecf57600080fd5b611ed883611ea0565b946020939093013593505050565b600080600060608486031215611efb57600080fd5b611f0484611ea0565b9250611f1260208501611ea0565b9150604084013590509250925092565b600060208284031215611f3457600080fd5b611f3d82611ea0565b9392505050565b600060208284031215611f5657600080fd5b5035919050565b60008060408385031215611f7057600080fd5b611f7983611ea0565b9150611f8760208401611ea0565b90509250929050565b600181811c90821680611fa457607f821691505b602082108103611fc457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761090857610908611fca565b60008261201457634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561202b57600080fd5b81518015158114611f3d57600080fd5b8181038181111561090857610908611fca565b6020808252601d908201527f50726f6a6563743a2070726f6a6563742069732063616e63656c6c6564000000604082015260600190565b60208082526048908201527f50726f6a6563743a2045697468657220697420686173206e6f7420737461727460408201527f6564206f72207468652074696d65206c696d697420666f722070726f6a65637460608201526708195e1c1a5c995960c21b608082015260a00190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526025908201527f50726f6a6563743a206164647265737320686173206e6f20636f6e747269627560408201526474696f6e7360d81b606082015260800190565b60006020828403121561218157600080fd5b5051919050565b8082018082111561090857610908611fca56fea2646970667358221220e041ba8942f5db4642c66740a7061b1e285d8972db6620d46b5d595022033b1764736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x276 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D549E99 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xBAAD7D85 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xCCEC3716 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xCCEC3716 EQ PUSH2 0x6E1 JUMPI DUP1 PUSH4 0xCFB2B5E9 EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xE7AFEEED EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A1 JUMPI DUP1 PUSH4 0xFA2AF9DA EQ PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBAAD7D85 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xC0DAEE49 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xC16A0383 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xC2CED7E5 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xC5C4744C EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0xCA34DA20 EQ PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EE1221 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x95EE1221 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x9E7B08D5 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xABD6192C EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xBA53C283 EQ PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D549E99 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x8D4E4083 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x94FEBBF3 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x6D1E6516 GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x6D1E6516 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x73AFF5AF EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x7921BA96 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x43D25E82 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x49A1AE91 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x5D97C1A0 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10642509 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x10642509 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x15643554 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x26232A2E EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x26493848 EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x614117A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x7E87512 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x1008E961 EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x27D JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x90E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH2 0x9E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xA0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xAFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xB61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xC28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xC3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xF33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x53D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x5EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x638 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x658 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x1404 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x68E CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x14DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x6FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x1649 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x71C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x749 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x17C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x53D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2737BA3434B733903A37903932B1B7BB32B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x871 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x89D SWAP1 PUSH2 0x1F90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x902 DUP2 DUP6 DUP6 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x916 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xF SLOAD PUSH1 0xD SLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x934 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x5BD597F43E1AACEEF3DDD1A4EF7F8C1CD0898CAB692B0988CD731BBD40920FCB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x9F5 DUP6 DUP3 DUP6 PUSH2 0x183E JUMP JUMPDEST PUSH2 0xA00 DUP6 DUP6 DUP6 PUSH2 0x18BC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x278D00 PUSH1 0x10 SLOAD TIMESTAMP PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C726561647920636C61696D656420666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7320706572696F64206F72206974206973206E6F74207965742074696D652E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xACA SWAP1 DUP4 PUSH2 0x203B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE SWAP1 SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAF9 JUMPI PUSH2 0xAF1 CALLER PUSH2 0x191B JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB06 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xB0E PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9D7C6BBE8CA6F2433812F43ED204A1D7EA4AE548DB3A3D6E83F8D1CE67E31A53 SWAP2 PUSH2 0xB57 SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xB69 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xB9F JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT JUMPDEST PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206861732066696E6973686564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xE SLOAD PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH2 0xC30 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xC3A PUSH1 0x0 PUSH2 0x1BD5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xC5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x14 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xC89 JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xC89 JUMPI POP PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2063616E6E6F7420726566756E642070726F6A6563742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x756E6473 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD GT DUP1 ISZERO PUSH2 0xD9A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0xDE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207368617265732072656D61696E696E6720666F7220726566756E640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x12 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0xE09 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x18 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xE DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE3E SWAP1 DUP5 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x11 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE66 SWAP1 DUP5 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0xF40CC8C1A1D17359049BA500CFC894596A692CFFC9D03943CD92EC2E159CF6AE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x871 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x902 DUP2 DUP6 DUP6 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xF86 JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT JUMPDEST PUSH2 0xFA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206861732066696E6973686564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1032 JUMPI POP PUSH1 0x1B SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265732063616E2774206265206C657373207468616E207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E64206D6F7265207468616E206D617820616C6C6F7765640000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST DUP3 PUSH1 0x1A SLOAD PUSH2 0x1121 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x112B SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST GT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457863656564696E6720746F74616C2066756E642072616973696E6720676F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6C21 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1B SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x11A2 SWAP1 DUP4 SWAP1 PUSH2 0x2188 JUMP JUMPDEST GT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420627579206D6F7265207468616E20746865206D61782073686172 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6520616C6C6F77656421 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1A SLOAD PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1B SLOAD DUP3 SUB PUSH2 0x1232 JUMPI PUSH1 0x14 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH2 0x12CE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x127D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A1 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST DUP4 PUSH1 0x1A SLOAD PUSH2 0x12AF SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x12B9 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST LT PUSH2 0x12CE JUMPI PUSH1 0x14 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1369 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x138D SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13A6 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13BF SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x71BE8766C1BD9BB33623F518AECC1D98612C75B596F4A0C38408F72239EF4E60 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SUB PUSH2 0x146C JUMPI PUSH1 0x10 SLOAD PUSH2 0x1465 SWAP1 TIMESTAMP PUSH2 0x203B JUMP JUMPDEST SWAP1 POP PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x148F SWAP1 TIMESTAMP PUSH2 0x203B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH4 0x1E13380 SWAP2 DUP5 SWAP2 PUSH2 0x14C1 SWAP2 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x14CB SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1500 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x14 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2053616C65206973206E6F742066696E6973686564207965 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7421 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x19 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x15E1 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15F1 SWAP1 POP CALLER DUP3 PUSH2 0x1C25 JUMP JUMPDEST DUP1 PUSH1 0x13 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x649FDE579B8BA49BD4FBCB330614CB075B8D53C352C5ADC49161B6F654E400A2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1651 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x16CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420636C61696D2066756E642072616973696E6720746F6B656E7320 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x7573696E672074686973206D6574686F6421 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1711 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1758 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF9 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x17D1 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x85F DUP2 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0xAF9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x18B6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x18A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x18B6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1C5F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x18E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1910 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0xAF9 DUP4 DUP4 DUP4 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1926 DUP3 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x197B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x199F SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xD6A45326680045C471B7B30597D25E52E420F1E7535046CA9AD2944A1BB53487 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206973206E6F742066696E6973686564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xF SLOAD PUSH1 0xD SLOAD PUSH2 0x1A51 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1A5B SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH1 0xD SLOAD PUSH2 0x1A72 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x1A7C SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1A86 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0xD SLOAD PUSH2 0x1A99 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x1AA3 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B1E SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B94 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C4F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x1C5B PUSH1 0x0 DUP4 DUP4 PUSH2 0x1D34 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C89 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1CB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x18B6 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D26 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D5F JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D54 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1DD1 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DED JUMPI PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BC8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E7F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1E63 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ED8 DUP4 PUSH2 0x1EA0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F04 DUP5 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1F12 PUSH1 0x20 DUP6 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3D DUP3 PUSH2 0x1EA0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F79 DUP4 PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F87 PUSH1 0x20 DUP5 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1FA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2014 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A6563742069732063616E63656C6C6564000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x48 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2045697468657220697420686173206E6F74207374617274 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6564206F72207468652074696D65206C696D697420666F722070726F6A656374 PUSH1 0x60 DUP3 ADD MSTORE PUSH8 0x8195E1C1A5C9959 PUSH1 0xC2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A206164647265737320686173206E6F20636F6E7472696275 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x74696F6E73 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 COINBASE 0xBA DUP10 TIMESTAMP CREATE2 0xDB CHAINID TIMESTAMP 0xC6 PUSH8 0x40A7061B1E285D89 PUSH19 0xDB6620D46B5D595022033B1764736F6C634300 ADDMOD XOR STOP CALLER ",
              "sourceMap": "2909:11517:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12052:175;;;;;;;;;;;;;:::i;:::-;;2074:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3904:31:6;;;;;;;;;;;;;;;;;;;713:25:8;;;701:2;686:18;3904:31:6;567:177:8;4293:186:2;;;;;;;;;;-1:-1:-1;4293:186:2;;;;;:::i;:::-;;:::i;:::-;;;1351:14:8;;1344:22;1326:41;;1314:2;1299:18;4293:186:2;1186:187:8;14186:238:6;;;;;;;;;;;;;:::i;3247:25::-;;;;;;;;;;;;;;;;3108:29;;;;;;;;;;;;;;;;3144:97:2;;;;;;;;;;-1:-1:-1;3222:12:2;;3144:97;;5039:244;;;;;;;;;;-1:-1:-1;5039:244:2;;;;;:::i;:::-;;:::i;3003:26:6:-;;;;;;;;;;;;;;;;3433:34;;;;;;;;;;;;;;;;3002:82:2;;;;;;;;;;-1:-1:-1;3002:82:2;;3075:2;1853:36:8;;1841:2;1826:18;3002:82:2;1711:184:8;3310:27:6;;;;;;;;;;;;;;;;12233:762;;;;;;;;;;;;;:::i;11133:188::-;;;;;;;;;;;;;:::i;3662:58::-;;;;;;;;;;-1:-1:-1;3662:58:6;;;;;:::i;:::-;;;;;;;;;;;;;;9717:231;;;;;;;;;;;;;:::i;3299:116:2:-;;;;;;;;;;-1:-1:-1;3299:116:2;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;:9;:18;;;;;;;3299:116;2167:101:0;;;;;;;;;;;;;:::i;3211:30:6:-;;;;;;;;;;;;;;;;10085:1042;;;;;;;;;;;;;:::i;3541:22::-;;;;;;;;;;-1:-1:-1;3541:22:6;;;;;;;;;;;3473:32;;;;;;;;;;;;;;;;3569:23;;;;;;;;;;-1:-1:-1;3569:23:6;;;;;;;;;;;1512:85:0;;;;;;;;;;-1:-1:-1;1558:7:0;1584:6;-1:-1:-1;;;;;1584:6:0;1512:85;;;-1:-1:-1;;;;;2255:32:8;;;2237:51;;2225:2;2210:18;1512:85:0;2091:203:8;3071:31:6;;;;;;;;;;;;;;;;2276:93:2;;;;;;;;;;;;;:::i;3512:23:6:-;;;;;;;;;;-1:-1:-1;3512:23:6;;;;;;;;2972:24;;;;;;;;;;-1:-1:-1;2972:24:6;;;;-1:-1:-1;;;;;2972:24:6;;;3143:30;;;;;;;;;;;;;;;;3610:178:2;;;;;;;;;;-1:-1:-1;3610:178:2;;;;;:::i;:::-;;:::i;3841:56:6:-;;;;;;;;;;-1:-1:-1;3841:56:6;;;;;:::i;:::-;;;;;;;;;;;;;;7144:1733;;;;;;;;;;-1:-1:-1;7144:1733:6;;;;;:::i;:::-;;:::i;13245:607::-;;;;;;;;;;-1:-1:-1;13245:607:6;;;;;:::i;:::-;;:::i;3396:31::-;;;;;;;;;;;;;;;;3785:50;;;;;;;;;;-1:-1:-1;3785:50:6;;;;;:::i;:::-;;;;;;;;;;;;;;8883:657;;;;;;;;;;;;;:::i;3179:26::-;;;;;;;;;;;;;;;;3941:40;;;;;;;;;;;;;;;;13858:322;;;;;;;;;;-1:-1:-1;13858:322:6;;;;;:::i;:::-;;:::i;3726:53::-;;;;;;;;;;-1:-1:-1;3726:53:6;;;;;:::i;:::-;;;;;;;;;;;;;;3846:140:2;;;;;;;;;;-1:-1:-1;3846:140:2;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;3599:57:6;;;;;;;;;;-1:-1:-1;3599:57:6;;;;;:::i;:::-;;;;;;;;;;;;;;2417:215:0;;;;;;;;;;-1:-1:-1;2417:215:0;;;;;:::i;:::-;;:::i;3035:29:6:-;;;;;;;;;;-1:-1:-1;3035:29:6;;;;-1:-1:-1;;;;;3035:29:6;;;12052:175;1405:13:0;:11;:13::i;:::-;12135:1:6::1;12111:21;:25;12103:56;;;::::0;-1:-1:-1;;;12103:56:6;;3173:2:8;12103:56:6::1;::::0;::::1;3155:21:8::0;3212:2;3192:18;;;3185:30;-1:-1:-1;;;3231:18:8;;;3224:48;3289:18;;12103:56:6::1;;;;;;;;;12169:51;::::0;12177:10:::1;::::0;12198:21:::1;12169:51:::0;::::1;;;::::0;::::1;::::0;;;12198:21;12177:10;12169:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;12052:175::o:0;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;14186:238:6:-;1405:13:0;:11;:13::i;:::-;14237:21:6::1;14290:3;14276:10;;14262:11;;:24;;;;:::i;:::-;14261:32;;;;:::i;:::-;14303:10;::::0;:65:::1;::::0;-1:-1:-1;;;14303:65:6;;14327:10:::1;14303:65;::::0;::::1;4470:34:8::0;14347:4:6::1;4520:18:8::0;;;4513:43;4572:18;;;4565:34;;;14237:56:6;;-1:-1:-1;;;;;;14303:10:6::1;::::0;:23:::1;::::0;4405:18:8;;14303:65:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;14384:33:6::1;::::0;713:25:8;;;14384:33:6::1;::::0;701:2:8;686:18;14384:33:6::1;;;;;;;14227:197;14186:238::o:0;5039:244:2:-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;12233:762:6:-;12276:21;12335:7;12319:12;;12301:15;:30;;;;:::i;:::-;12300:42;;;;:::i;:::-;12395:10;12376:30;;;;:18;:30;;;;;;12276:66;;-1:-1:-1;12360:46:6;;12352:122;;;;-1:-1:-1;;;12352:122:6;;5227:2:8;12352:122:6;;;5209:21:8;5266:2;5246:18;;;5239:30;5305:34;5285:18;;;5278:62;5376:33;5356:18;;;5349:61;5427:19;;12352:122:6;5025:427:8;12352:122:6;12542:10;12485:19;12523:30;;;:18;:30;;;;;;12507:46;;:13;:46;:::i;:::-;12582:10;12563:30;;;;:18;:30;;;;;:46;;;12485:68;;-1:-1:-1;12898:91:6;12922:11;12918:1;:15;12898:91;;;12954:24;12967:10;12954:12;:24::i;:::-;12935:3;;12898:91;;;;12265:730;;12233:762::o;11133:188::-;1405:13:0;:11;:13::i;:::-;11182:14:6::1;:12;:14::i;:::-;11206:11;:18:::0;;-1:-1:-1;;11206:18:6::1;::::0;::::1;::::0;;11250:15:::1;11235:12;:30:::0;;;11281:33:::1;::::0;::::1;::::0;::::1;::::0;713:25:8;;;701:2;686:18;;567:177;11281:33:6::1;;;;;;;;11133:188::o:0;9717:231::-;1405:13:0;:11;:13::i;:::-;4624:11:6::1;::::0;::::1;;4623:12;4615:54;;;;-1:-1:-1::0;;;4615:54:6::1;;;;;;;:::i;:::-;4774:16:::2;;4755:15;:35;;:87;;;;;4828:14;;4810:15;:32;4755:87;4734:206;;;;-1:-1:-1::0;;;4734:206:6::2;;;;;;;:::i;:::-;5015:10:::3;::::0;::::3;::::0;::::3;;;5014:11;5006:53;;;::::0;-1:-1:-1;;;5006:53:6;;6498:2:8;5006:53:6::3;::::0;::::3;6480:21:8::0;6537:2;6517:18;;;6510:30;6576:31;6556:18;;;6549:59;6625:18;;5006:53:6::3;6296:353:8::0;5006:53:6::3;9879:11:::4;:18:::0;;-1:-1:-1;;9879:18:6::4;9893:4;9879:18;::::0;;9926:15:::4;::::0;9907:16:::4;:34:::0;9717:231::o;2167:101:0:-;1405:13;:11;:13::i;:::-;2231:30:::1;2258:1;2231:18;:30::i;:::-;2167:101::o:0;10085:1042:6:-;1911:1;2482:7;;:19;2474:63;;;;-1:-1:-1;;;2474:63:6;;;;;;;:::i;:::-;1911:1;2612:7;:18;10179:11:::1;::::0;::::1;;::::0;:65:::1;;;10214:14;;10195:15;:33;;:48;;;;-1:-1:-1::0;10233:10:6::1;::::0;::::1;::::0;::::1;;;10232:11;10195:48;10158:148;;;::::0;-1:-1:-1;;;10158:148:6;;7216:2:8;10158:148:6::1;::::0;::::1;7198:21:8::0;7255:2;7235:18;;;7228:30;7294:34;7274:18;;;7267:62;-1:-1:-1;;;7345:18:8;;;7338:34;7389:19;;10158:148:6::1;7014:400:8::0;10158:148:6::1;10360:10;10374:1;10337:34:::0;;;:22:::1;:34;::::0;;;;;10316:122:::1;;;;-1:-1:-1::0;;;10316:122:6::1;;;;;;;:::i;:::-;10488:1;10469:16;;:20;:129;;;;-1:-1:-1::0;10587:10:6::1;10564:34;::::0;;;:22:::1;:34;::::0;;;;;;;10509:10:::1;::::0;:35;;-1:-1:-1;;;10509:35:6;;10538:4:::1;10509:35;::::0;::::1;2237:51:8::0;10564:34:6;;-1:-1:-1;;;;;10509:10:6::1;::::0;:20:::1;::::0;2210:18:8;;10509:35:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:89;;10469:129;10448:206;;;::::0;-1:-1:-1;;;10448:206:6;;8216:2:8;10448:206:6::1;::::0;::::1;8198:21:8::0;8255:2;8235:18;;;8228:30;8294:32;8274:18;;;8267:60;8344:18;;10448:206:6::1;8014:354:8::0;10448:206:6::1;10719:10;10665:28;10696:34:::0;;;:22:::1;:34;::::0;;;;;10740:19:::1;:43:::0;;10696:34;;;;10740:43:::1;::::0;10696:34;;10740:43:::1;:::i;:::-;::::0;;;-1:-1:-1;;10816:10:6::1;10830:1;10793:34:::0;;;:22:::1;:34;::::0;;;;;;;:38;;;10860:15:::1;:27:::0;;;;;;10841:15:::1;:46:::0;;10860:27;;10841:15;;:46:::1;::::0;10860:27;;10841:46:::1;:::i;:::-;::::0;;;-1:-1:-1;;10933:10:6::1;10917:27;::::0;;;:15:::1;:27;::::0;;;;;10897:16:::1;:47:::0;;10917:27;;10897:16;;:47:::1;::::0;10917:27;;10897:47:::1;:::i;:::-;::::0;;;-1:-1:-1;;10970:10:6::1;10984:1;10954:27:::0;;;:15:::1;:27;::::0;;;;;:31;;;;10996:10:::1;::::0;:53;;-1:-1:-1;;;10996:53:6;;::::1;::::0;::::1;8677:51:8::0;;;;8744:18;;;8737:34;;;-1:-1:-1;;;;;10996:10:6::1;::::0;:19:::1;::::0;8650:18:8;;10996:53:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;11065:55:6::1;::::0;713:25:8;;;11092:4:6::1;::::0;11072:10:::1;::::0;11065:55:::1;::::0;701:2:8;686:18;11065:55:6::1;;;;;;;-1:-1:-1::0;1868:1:6;2785:7;:22;10085:1042::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;7144:1733:6:-;4624:11;;;;4623:12;4615:54;;;;-1:-1:-1;;;4615:54:6;;;;;;;:::i;:::-;4774:16:::1;;4755:15;:35;;:87;;;;;4828:14;;4810:15;:32;4755:87;4734:206;;;;-1:-1:-1::0;;;4734:206:6::1;;;;;;;:::i;:::-;5015:10:::2;::::0;::::2;::::0;::::2;;;5014:11;5006:53;;;::::0;-1:-1:-1;;;5006:53:6;;6498:2:8;5006:53:6::2;::::0;::::2;6480:21:8::0;6537:2;6517:18;;;6510:30;6576:31;6556:18;;;6549:59;6625:18;;5006:53:6::2;6296:353:8::0;5006:53:6::2;1911:1:::3;2482:7;;:19:::0;2474:63:::3;;;;-1:-1:-1::0;;;2474:63:6::3;;;;;;;:::i;:::-;1911:1;2612:7;:18:::0;7351:19;;;;;:67:::4;;;7393:25;;7374:15;:44;;7351:67;7330:170;;;::::0;-1:-1:-1;;;7330:170:6;;8984:2:8;7330:170:6::4;::::0;::::4;8966:21:8::0;9023:2;9003:18;;;8996:30;9062:34;9042:18;;;9035:62;9133:26;9113:18;;;9106:54;9177:19;;7330:170:6::4;8782:420:8::0;7330:170:6::4;7641:15;::::0;7586:10:::4;::::0;:35:::4;::::0;-1:-1:-1;;;7586:35:6;;7615:4:::4;7586:35;::::0;::::4;2237:51:8::0;-1:-1:-1;;;;;7586:10:6;;::::4;::::0;:20:::4;::::0;2210:18:8;;7586:35:6::4;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7551:15;7532:16;;:34;;;;:::i;:::-;7531:90;;;;:::i;:::-;:125;;7510:206;;;::::0;-1:-1:-1;;;7510:206:6;;9409:2:8;7510:206:6::4;::::0;::::4;9391:21:8::0;9448:2;9428:18;;;9421:30;9487:34;9467:18;;;9460:62;-1:-1:-1;;;9538:18:8;;;9531:32;9580:19;;7510:206:6::4;9207:398:8::0;7510:206:6::4;7812:25;::::0;7763:10:::4;7747:27;::::0;;;:15:::4;:27;::::0;;;;;:45:::4;::::0;7777:15;;7747:45:::4;:::i;:::-;:90;;7726:179;;;::::0;-1:-1:-1;;;7726:179:6;;9812:2:8;7726:179:6::4;::::0;::::4;9794:21:8::0;9851:2;9831:18;;;9824:30;9890:34;9870:18;;;9863:62;-1:-1:-1;;;9941:18:8;;;9934:40;9991:19;;7726:179:6::4;9610:406:8::0;7726:179:6::4;7916:30;7968:15;7949:16;;:34;;;;:::i;:::-;7916:67;;8017:25;;7998:15;:44:::0;7994:289:::4;;8058:10;:17:::0;;-1:-1:-1;;8058:17:6::4;;;::::0;;7994:289:::4;;;8215:15;::::0;8164:10:::4;::::0;:35:::4;::::0;-1:-1:-1;;;8164:35:6;;8193:4:::4;8164:35;::::0;::::4;2237:51:8::0;-1:-1:-1;;;;;8164:10:6;;::::4;::::0;:20:::4;::::0;2210:18:8;;8164:35:6::4;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8129:15;8110:16;;:34;;;;:::i;:::-;8109:90;;;;:::i;:::-;:121;8092:191;;8255:10;:17:::0;;-1:-1:-1;;8255:17:6::4;;;::::0;;8092:191:::4;8293:10;::::0;:120:::4;::::0;-1:-1:-1;;;8293:120:6;;8330:10:::4;8293:120;::::0;::::4;4470:34:8::0;8362:4:6::4;4520:18:8::0;;;4513:43;4572:18;;;4565:34;;;-1:-1:-1;;;;;8293:10:6;;::::4;::::0;:23:::4;::::0;4405:18:8;;8293:120:6::4;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8505:10:6::4;8482:34;::::0;;;:22:::4;:34;::::0;;;;:60;;8520:22;;8482:34;:60:::4;::::0;8520:22;;8482:60:::4;:::i;:::-;::::0;;;-1:-1:-1;;8618:10:6::4;8602:27;::::0;;;:15:::4;:27;::::0;;;;:46;;8633:15;;8602:27;:46:::4;::::0;8633:15;;8602:46:::4;:::i;:::-;;;;;;;;8725:22;8710:11;;:37;;;;;;;:::i;:::-;;;;;;;;8776:15;8757;;:34;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;8807:63:6::4;::::0;713:25:8;;;8840:4:6::4;::::0;8820:10:::4;::::0;8807:63:::4;::::0;701:2:8;686:18;8807:63:6::4;;;;;;;-1:-1:-1::0;;1868:1:6::3;2785:7;:22:::0;7144:1733::o;13245:607::-;-1:-1:-1;;;;;13365:33:6;;13326:7;13365:33;;;:22;:33;;;;;;13344:121;;;;-1:-1:-1;;;13344:121:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;13506:34:6;;13476:16;13506:34;;;:23;:34;;;;;;:39;;13503:204;;13590:12;;13572:30;;:15;:30;:::i;:::-;13561:41;;13503:204;;;-1:-1:-1;;;;;13662:34:6;;;;;;:23;:34;;;;;;13644:52;;:15;:52;:::i;:::-;13633:63;;13503:204;13777:10;;-1:-1:-1;;;;;13741:33:6;;13717:20;13741:33;;;:22;:33;;;;;;13717:20;;13803:11;;13790:8;;13741:46;;;:::i;:::-;:57;;;;:::i;:::-;13740:75;;;;:::i;:::-;13717:98;13245:607;-1:-1:-1;;;;13245:607:6:o;8883:657::-;4624:11;;;;4623:12;4615:54;;;;-1:-1:-1;;;4615:54:6;;;;;;;:::i;:::-;1911:1:::1;2482:7;;:19:::0;2474:63:::1;;;;-1:-1:-1::0;;;2474:63:6::1;;;;;;;:::i;:::-;1911:1;2612:7;:18:::0;8970:11:::2;::::0;;;::::2;;;8962:58;;;::::0;-1:-1:-1;;;8962:58:6;;10223:2:8;8962:58:6::2;::::0;::::2;10205:21:8::0;10262:2;10242:18;;;10235:30;10301:34;10281:18;;;10274:62;-1:-1:-1;;;10352:18:8;;;10345:32;10394:19;;8962:58:6::2;10021:398:8::0;8962:58:6::2;9074:10;9088:1;9051:34:::0;;;:22:::2;:34;::::0;;;;;9030:122:::2;;;;-1:-1:-1::0;;;9030:122:6::2;;;;;;;:::i;:::-;9254:10;9212:23;9238:27:::0;;;:15:::2;:27;::::0;;;;;;;;9331:21:::2;:33:::0;;;;;:52;;9238:27;;;;9331:52:::2;::::0;9238:27;;9331:52:::2;:::i;:::-;::::0;;;-1:-1:-1;9394:34:6::2;::::0;-1:-1:-1;9400:10:6::2;9412:15:::0;9394:5:::2;:34::i;:::-;9460:15;9439:17;;:36;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9491:42:6::2;::::0;;9505:10:::2;8677:51:8::0;;8759:2;8744:18;;8737:34;;;9491:42:6::2;::::0;8650:18:8;9491:42:6::2;;;;;;;-1:-1:-1::0;1868:1:6::1;2785:7;:22:::0;8883:657::o;13858:322::-;1405:13:0;:11;:13::i;:::-;13967:10:6::1;::::0;-1:-1:-1;;;;;13967:10:6;;::::1;13947:30:::0;;::::1;::::0;13926:127:::1;;;::::0;-1:-1:-1;;;13926:127:6;;10626:2:8;13926:127:6::1;::::0;::::1;10608:21:8::0;10665:2;10645:18;;;10638:30;10704:34;10684:18;;;10677:62;-1:-1:-1;;;10755:18:8;;;10748:48;10813:19;;13926:127:6::1;10424:414:8::0;13926:127:6::1;14080:41;::::0;-1:-1:-1;;;14080:41:6;;14115:4:::1;14080:41;::::0;::::1;2237:51:8::0;14063:14:6::1;::::0;-1:-1:-1;;;;;14080:26:6;::::1;::::0;::::1;::::0;2210:18:8;;14080:41:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14063:58;;14138:8;-1:-1:-1::0;;;;;14131:25:6::1;;14157:7;1558::0::0;1584:6;-1:-1:-1;;;;;1584:6:0;;1512:85;14157:7:6::1;14131:42;::::0;-1:-1:-1;;;;;;14131:42:6::1;::::0;;;;;;-1:-1:-1;;;;;8695:32:8;;;14131:42:6::1;::::0;::::1;8677:51:8::0;8744:18;;;8737:34;;;8650:18;;14131:42:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2417:215:0:-:0;1405:13;:11;:13::i;:::-;-1:-1:-1;;;;;2501:22:0;::::1;2497:91;;2546:31;::::0;-1:-1:-1;;;2546:31:0;;2574:1:::1;2546:31;::::0;::::1;2237:51:8::0;2210:18;;2546:31:0::1;2091:203:8::0;2497:91:0::1;2597:28;2616:8;2597:18;:28::i;1670:162::-:0;1558:7;1584:6;-1:-1:-1;;;;;1584:6:0;735:10:5;1729:23:0;1725:101;;1775:40;;-1:-1:-1;;;1775:40:0;;735:10:5;1775:40:0;;;2237:51:8;2210:18;;1775:40:0;2091:203:8;8989:128:2;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;11063:32:8;;10936:60:2;;;11045:51:8;11112:18;;;11105:34;;;11155:18;;;11148:34;;;11018:18;;10936:60:2;10843:345:8;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;2237:51:8;2210:18;;5780:30:2;2091:203:8;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;2237:51:8;2210:18;;5873:32:2;2091:203:8;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;13001:238:6:-;13061:19;13083:43;13116:9;13083:32;:43::i;:::-;13136:10;;:43;;-1:-1:-1;;;13136:43:6;;-1:-1:-1;;;;;8695:32:8;;;13136:43:6;;;8677:51:8;8744:18;;;8737:34;;;13061:65:6;;-1:-1:-1;13136:10:6;;;:19;;8650:18:8;;13136:43:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13195:37:6;;;-1:-1:-1;;;;;8695:32:8;;8677:51;;8759:2;8744:18;;8737:34;;;13195:37:6;;8650:18:8;13195:37:6;;;;;;;13051:188;13001:238;:::o;11449:597::-;11500:10;;;;;;;11492:55;;;;-1:-1:-1;;;11492:55:6;;11395:2:8;11492:55:6;;;11377:21:8;;;11414:18;;;11407:30;11473:34;11453:18;;;11446:62;11525:18;;11492:55:6;11193:356:8;11492:55:6;11558:26;11616:3;11602:10;;11588:11;;:24;;;;:::i;:::-;11587:32;;;;:::i;:::-;11558:61;;11629:25;11722:3;11707:11;;11673:18;11659:11;;:32;;;;:::i;:::-;11658:60;;;;:::i;:::-;11657:68;;;;:::i;:::-;11629:96;;11735:29;11826:17;11793:18;11767:11;;:44;;;;:::i;:::-;:76;;;;:::i;:::-;11854:10;;11874:14;;11854:54;;-1:-1:-1;;;11854:54:6;;-1:-1:-1;;;;;11874:14:6;;;11854:54;;;8677:51:8;8744:18;;;8737:34;;;11735:108:6;;-1:-1:-1;11854:10:6;;:19;;8650:18:8;;11854:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11918:10:6;;:54;;-1:-1:-1;;;11918:54:6;;11938:10;11918:54;;;8677:51:8;8744:18;;;8737:34;;;-1:-1:-1;;;;;11918:10:6;;;;:19;;8650:18:8;;11918:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12023:15:6;;11987:52;;713:25:8;;;12016:4:6;;11996:10;;11987:52;;701:2:8;686:18;11987:52:6;;;;;;;;11482:564;;;11449:597::o;2786:187:0:-;2859:16;2878:6;;-1:-1:-1;;;;;2894:17:0;;;-1:-1:-1;;;;;;2894:17:0;;;;;;2926:40;;2878:6;;;;;;;2926:40;;2859:16;2926:40;2849:124;2786:187;:::o;7721:208:2:-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2237:51:8;2210:18;;7835:32:2;2091:203:8;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;2237:51:8;2210:18;;10103:32:2;2091:203:8;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;2237:51:8;2210:18;;10203:31:2;2091:203:8;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;713:25:8;;701:2;686:18;;567:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;:9;:15;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;11063:32:8;;6649:50:2;;;11045:51:8;11112:18;;;11105:34;;;11155:18;;;11148:34;;;11018:18;;6649:50:2;10843:345:8;6599:115:2;-1:-1:-1;;;;;6834:15:2;;;;;;:9;:15;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;;;;;:9;:13;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;713::8;;701:2;686:18;;567:177;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;749:173::-;817:20;;-1:-1:-1;;;;;866:31:8;;856:42;;846:70;;912:1;909;902:12;846:70;749:173;;;:::o;927:254::-;995:6;1003;1056:2;1044:9;1035:7;1031:23;1027:32;1024:52;;;1072:1;1069;1062:12;1024:52;1095:29;1114:9;1095:29;:::i;:::-;1085:39;1171:2;1156:18;;;;1143:32;;-1:-1:-1;;;927:254:8:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:8:o;2521:180::-;2580:6;2633:2;2621:9;2612:7;2608:23;2604:32;2601:52;;;2649:1;2646;2639:12;2601:52;-1:-1:-1;2672:23:8;;2521:180;-1:-1:-1;2521:180:8:o;2706:260::-;2774:6;2782;2835:2;2823:9;2814:7;2810:23;2806:32;2803:52;;;2851:1;2848;2841:12;2803:52;2874:29;2893:9;2874:29;:::i;:::-;2864:39;;2922:38;2956:2;2945:9;2941:18;2922:38;:::i;:::-;2912:48;;2706:260;;;;;:::o;3318:380::-;3397:1;3393:12;;;;3440;;;3461:61;;3515:4;3507:6;3503:17;3493:27;;3461:61;3568:2;3560:6;3557:14;3537:18;3534:38;3531:161;;3614:10;3609:3;3605:20;3602:1;3595:31;3649:4;3646:1;3639:15;3677:4;3674:1;3667:15;3531:161;;3318:380;;;:::o;3703:127::-;3764:10;3759:3;3755:20;3752:1;3745:31;3795:4;3792:1;3785:15;3819:4;3816:1;3809:15;3835:168;3908:9;;;3939;;3956:15;;;3950:22;;3936:37;3926:71;;3977:18;;:::i;4008:217::-;4048:1;4074;4064:132;;4118:10;4113:3;4109:20;4106:1;4099:31;4153:4;4150:1;4143:15;4181:4;4178:1;4171:15;4064:132;-1:-1:-1;4210:9:8;;4008:217::o;4610:277::-;4677:6;4730:2;4718:9;4709:7;4705:23;4701:32;4698:52;;;4746:1;4743;4736:12;4698:52;4778:9;4772:16;4831:5;4824:13;4817:21;4810:5;4807:32;4797:60;;4853:1;4850;4843:12;4892:128;4959:9;;;4980:11;;;4977:37;;;4994:18;;:::i;5457:353::-;5659:2;5641:21;;;5698:2;5678:18;;;5671:30;5737:31;5732:2;5717:18;;5710:59;5801:2;5786:18;;5457:353::o;5815:476::-;6017:2;5999:21;;;6056:2;6036:18;;;6029:30;6095:34;6090:2;6075:18;;6068:62;6166:34;6161:2;6146:18;;6139:62;-1:-1:-1;;;6232:3:8;6217:19;;6210:39;6281:3;6266:19;;5815:476::o;6654:355::-;6856:2;6838:21;;;6895:2;6875:18;;;6868:30;6934:33;6929:2;6914:18;;6907:61;7000:2;6985:18;;6654:355::o;7419:401::-;7621:2;7603:21;;;7660:2;7640:18;;;7633:30;7699:34;7694:2;7679:18;;7672:62;-1:-1:-1;;;7765:2:8;7750:18;;7743:35;7810:3;7795:19;;7419:401::o;7825:184::-;7895:6;7948:2;7936:9;7927:7;7923:23;7919:32;7916:52;;;7964:1;7961;7954:12;7916:52;-1:-1:-1;7987:16:8;;7825:184;-1:-1:-1;7825:184:8:o;8373:125::-;8438:9;;;8459:10;;;8456:36;;;8472:18;;:::i"
            },
            "methodIdentifiers": {
              "APYStartTime()": "43d25e82",
              "_claim_Refund_on_cancellation()": "7921ba96",
              "_claim_Shares()": "c2ced7e5",
              "_participate(uint256)": "ba53c283",
              "addressToContributions(address)": "e7afeeed",
              "addressToMintedTokens(address)": "abd6192c",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "calculateClaimableAPYForInvestor(address)": "baad7d85",
              "cancel_Project()": "6d1e6516",
              "claimReturn()": "49a1ae91",
              "contributionAmnt()": "07e87512",
              "decimals()": "313ce567",
              "depositAPR()": "1008e961",
              "finalize()": "4bb278f3",
              "fundraisingGoal()": "9e7b08d5",
              "investorClaimCount(address)": "cfb2b5e9",
              "investorToLastClaimTime(address)": "5d97c1a0",
              "investorToShare(address)": "c16a0383",
              "isCancelled()": "95ee1221",
              "isFinalized()": "8d4e4083",
              "isFinished()": "7b352962",
              "maxAllowedSharesPerWallet()": "ca34da20",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "platformFee()": "26232a2e",
              "platformWallet()": "fa2af9da",
              "projectAPY()": "10642509",
              "projectEndTime()": "15643554",
              "projectStartTime()": "94febbf3",
              "recoverETH()": "0614117a",
              "refundableShares()": "c0daee49",
              "renounceOwnership()": "715018a6",
              "rescueERC20(address)": "ccec3716",
              "stableCoin()": "992642e5",
              "symbol()": "95d89b41",
              "totalAmountRefunded()": "26493848",
              "totalRaised()": "c5c4744c",
              "totalSharesSold()": "73aff5af",
              "totalSupply()": "18160ddd",
              "totalTokensMinted()": "7d549e99",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stableCoin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_fundraisingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_contributionAmnt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_projectStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_projectEndTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_projectOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_platformWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_projectAPY\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"AnnualAPRDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ListingFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"name\":\"ReturnClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SharesClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"APYStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_claim_Refund_on_cancellation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_claim_Shares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numberOfShares\",\"type\":\"uint256\"}],\"name\":\"_participate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToMintedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"calculateClaimableAPYForInvestor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel_Project\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReturn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contributionAmnt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundraisingGoal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investorClaimCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investorToLastClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investorToShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAllowedSharesPerWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoverETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundableShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAdd\",\"type\":\"address\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmountRefunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSharesSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Arrnaya (t.me/arrnaya)\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"_participate(uint256)\":{\"details\":\"If an address' contributions put the contract over or equal the fundraising limit, it's a valid contribution but the fundraising project is finished immediately\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"The project expiration time will always be 30 days from creation\",\"params\":{\"_fundraisingGoal\":\"The total ether goal of the new fundraising project\",\"_name\":\"The name of the fundraising project to be used in the NFT badges given to contributors of >= 1 ether\",\"_projectOwner\":\"The true owner of the project (and which instantly gains ownership on completion of instantiating the contract)\",\"_symbol\":\"The NFT token symbol\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"A contract for holding a fundraising project\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_claim_Refund_on_cancellation()\":{\"notice\":\"Refunds an address' funds if the project is either cancelled or has expired without finishing successfully\"},\"_participate(uint256)\":{\"notice\":\"Allows any address to contribute to the contract if the project has not been cancelled, is not expired, and has not already been finished successfully\"},\"cancel_Project()\":{\"notice\":\"Allows the owner of the project to cancel it if the project has not been cancelled, is not expired, and has not already been finished successfully\"},\"constructor\":{\"notice\":\"Instantiates a new fundraising project and instantly transfers ownership to the _projectOwner address provided\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BEATListings.sol\":\"BEATListings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x525584152442a11c9ed6b04064454f1c41dca045c3d123c5bcb7a956a016a9fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93647e8ed871f0d61ff2a12854ad3edaa910a2915569c152bb782ddede31950f\",\"dweb:/ipfs/QmZPc7EZfB1R25FsJKRdA6Pe7VywBdSJHgEfTx1Z6iK996\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/BEATListings.sol\":{\"keccak256\":\"0xb479d724d3f2c3285cbcf9c2ad1ecf45cc210b5f0c8d4efd8839b28900536bff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc710c22743771bcb9d59004025e2436560c7695820f0b6a7a8b9e75e2211393\",\"dweb:/ipfs/QmUtPe9UX33GnMxGwxGd2oCxBiKUyR84F7MYuFgJLF7Qth\"]}},\"version\":1}"
        },
        "ReentrancyGuard": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from ReentrancyGuard will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single nonReentrant guard, functions marked as nonReentrant may not call one another. This can be worked around by making those functions private, and then adding external nonReentrant entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BEATListings.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x525584152442a11c9ed6b04064454f1c41dca045c3d123c5bcb7a956a016a9fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93647e8ed871f0d61ff2a12854ad3edaa910a2915569c152bb782ddede31950f\",\"dweb:/ipfs/QmZPc7EZfB1R25FsJKRdA6Pe7VywBdSJHgEfTx1Z6iK996\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/BEATListings.sol\":{\"keccak256\":\"0xb479d724d3f2c3285cbcf9c2ad1ecf45cc210b5f0c8d4efd8839b28900536bff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc710c22743771bcb9d59004025e2436560c7695820f0b6a7a8b9e75e2211393\",\"dweb:/ipfs/QmUtPe9UX33GnMxGwxGd2oCxBiKUyR84F7MYuFgJLF7Qth\"]}},\"version\":1}"
        }
      },
      "contracts/BeatFactory.sol": {
        "BEATFactory": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "name": "PlatformFeeUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                }
              ],
              "name": "PlatformWalletUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "listing",
                  "type": "address"
                }
              ],
              "name": "ProjectCreated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOTB",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "contractsList",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_stableCoin",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_projectSymbol",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_fundraisingGoal",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_contributionAmnt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_projectStartTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_projectEndTime",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_projectOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_projectAPY",
                  "type": "uint256"
                }
              ],
              "name": "createListing",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "newProjectAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deployedContracts",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deployedCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "__counter",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                }
              ],
              "name": "getUserProjects",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "contracts",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_platformFee",
                  "type": "uint256"
                }
              ],
              "name": "modifyPlatformFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "platformFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "platformWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newWallet",
                  "type": "address"
                }
              ],
              "name": "updatePlatformWallet",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1972": {
                  "entryPoint": null,
                  "id": 1972,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_34": {
                  "entryPoint": null,
                  "id": 34,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_transferOwnership_130": {
                  "entryPoint": 92,
                  "id": 130,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040526019600255600380546001600160a01b03191673cc4ef3fc58aa1ee91626f50037734b5f3ca1358a17905534801561003b57600080fd5b506100453361005c565b600480546001600160a01b031916331790556100ac565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6130d3806100bb6000396000f3fe60806040523480156200001157600080fd5b5060043610620000e05760003560e01c8063ada4ef301162000097578063e32e723c116200006e578063e32e723c14620001b5578063f2fde38b14620001cc578063f807905214620001e3578063fa2af9da14620001fa57600080fd5b8063ada4ef30146200017b578063c54a95881462000192578063d396f33614620001ab57600080fd5b806326232a2e14620000e5578063381aa7561462000102578063532f52781462000132578063715018a614620001465780638da5cb5b1462000152578063a5d0bcff1462000164575b600080fd5b620000ef60025481565b6040519081526020015b60405180910390f35b6200011962000113366004620006ed565b6200020e565b6040516001600160a01b039091168152602001620000f9565b60045462000119906001600160a01b031681565b620001506200033f565b005b6000546001600160a01b031662000119565b6200015062000175366004620007b4565b62000357565b620001506200018c366004620007ce565b6200039d565b6200019c62000443565b604051620000f99190620007f5565b620000ef620004a7565b6200019c620001c6366004620007ce565b620004b8565b62000150620001dd366004620007ce565b62000530565b62000119620001f4366004620007b4565b62000574565b60035462000119906001600160a01b031681565b60006200021a6200059f565b60008a8a8a8a8a8a8a8a600254600360009054906101000a90046001600160a01b03168c6040516200024c906200061e565b620002629b9a999897969594939291906200088c565b604051809103906000f0801580156200027f573d6000803e3d6000fd5b506005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0384166001600160a01b0319918216811790925582548301835533600090815260066020908152604080832080549687018155835291819020909401805490921683179091558051918252519293507f3815a547ca4b753ae5cc6a73f3e019b6791faedad7fe0614a6e08d0bcfb137f1929081900390910190a19a9950505050505050505050565b620003496200059f565b620003556000620005ce565b565b620003616200059f565b60028190556040518181527f45610d581145924dd7090a5017e5f2b1d6f42213bb2e95707ff86846bbfcb1ca906020015b60405180910390a150565b6004546001600160a01b03163314620003f45760405162461bcd60e51b81526020600482015260146024820152736f6e6c7920444f54422063616e2075706461746560601b60448201526064015b60405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f73238e3ae0a71b401b31ae67204506d074de41bd5c084082fba9b64b1c7fa28f9060200162000392565b606060058054806020026020016040519081016040528092919081815260200182805480156200049d57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200047e575b5050505050905090565b6000620004b360015490565b905090565b6001600160a01b03811660009081526006602090815260408083208054825181850281018501909352808352606094938301828280156200052357602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000504575b5093979650505050505050565b6200053a6200059f565b6001600160a01b0381166200056657604051631e4fbdf760e01b815260006004820152602401620003eb565b6200057181620005ce565b50565b600581815481106200058557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314620003555760405163118cdaa760e01b8152336004820152602401620003eb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61278e806200091083390190565b6001600160a01b03811681146200057157600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200066a57600080fd5b813567ffffffffffffffff8082111562000688576200068862000642565b604051601f8301601f19908116603f01168101908282118183101715620006b357620006b362000642565b81604052838152866020858801011115620006cd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060008060006101208a8c0312156200070d57600080fd5b89356200071a816200062c565b985060208a013567ffffffffffffffff808211156200073857600080fd5b620007468d838e0162000658565b995060408c01359150808211156200075d57600080fd5b506200076c8c828d0162000658565b97505060608a0135955060808a0135945060a08a0135935060c08a0135925060e08a01356200079b816200062c565b809250506101008a013590509295985092959850929598565b600060208284031215620007c757600080fd5b5035919050565b600060208284031215620007e157600080fd5b8135620007ee816200062c565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015620008385783516001600160a01b03168352928401929184019160010162000811565b50909695505050505050565b6000815180845260005b818110156200086c576020818501810151868301820152016200084e565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038c8116825261016060208301819052600091620008b48483018f62000844565b91508382036040850152620008ca828e62000844565b606085019c909c52608084019a909a52505060a081019690965260c086019490945291851660e08501526101008401529092166101208201526101400152939250505056fe60806040523480156200001157600080fd5b506040516200278e3803806200278e833981016040819052620000349162000347565b898962000041336200019d565b60046200004f8382620004be565b5060056200005e8282620004be565b5050600160065550858511620000c75760405162461bcd60e51b815260206004820152602360248201527f456e642074696d652063616e2774206265206265666f72652073746172742074604482015262696d6560e81b60648201526084015b60405180910390fd5b6001600160a01b038b166200011f5760405162461bcd60e51b815260206004820152601660248201527f43616e277420736574207a65726f2061646472657373000000000000000000006044820152606401620000be565b600780546001600160a01b0319166001600160a01b038d161790556200014584620001ed565b600c889055601a8790556200015c600a896200058a565b601b55600a95909555600b9390935560085550600980546001600160a01b0319166001600160a01b03909216919091179055600f5550620005ad9350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001f762000231565b6001600160a01b0381166200022357604051631e4fbdf760e01b815260006004820152602401620000be565b6200022e816200019d565b50565b6000546001600160a01b03163314620002605760405163118cdaa760e01b8152336004820152602401620000be565b565b80516001600160a01b03811681146200027a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a757600080fd5b81516001600160401b0380821115620002c457620002c46200027f565b604051601f8301601f19908116603f01168101908282118183101715620002ef57620002ef6200027f565b81604052838152602092508660208588010111156200030d57600080fd5b600091505b8382101562000331578582018301518183018401529082019062000312565b6000602085830101528094505050505092915050565b60008060008060008060008060008060006101608c8e0312156200036a57600080fd5b620003758c62000262565b60208d0151909b506001600160401b038111156200039257600080fd5b620003a08e828f0162000295565b60408e0151909b5090506001600160401b03811115620003bf57600080fd5b620003cd8e828f0162000295565b99505060608c0151975060808c0151965060a08c0151955060c08c01519450620003fa60e08d0162000262565b93506101008c01519250620004136101208d0162000262565b91506101408c015190509295989b509295989b9093969950565b600181811c908216806200044257607f821691505b6020821081036200046357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004b9576000816000526020600020601f850160051c81016020861015620004945750805b601f850160051c820191505b81811015620004b557828155600101620004a0565b5050505b505050565b81516001600160401b03811115620004da57620004da6200027f565b620004f281620004eb84546200042d565b8462000469565b602080601f8311600181146200052a5760008415620005115750858301515b600019600386901b1c1916600185901b178555620004b5565b600085815260208120601f198616915b828110156200055b578886015182559484019460019091019084016200053a565b50858210156200057a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082620005a857634e487b7160e01b600052601260045260246000fd5b500490565b6121d180620005bd6000396000f3fe6080604052600436106102765760003560e01c80637d549e991161014f578063baad7d85116100c1578063ccec37161161007a578063ccec3716146106e1578063cfb2b5e914610701578063dd62ed3e1461072e578063e7afeeed14610774578063f2fde38b146107a1578063fa2af9da146107c157600080fd5b8063baad7d851461063d578063c0daee491461065d578063c16a038314610673578063c2ced7e5146106a0578063c5c4744c146106b5578063ca34da20146106cb57600080fd5b806395ee12211161011357806395ee122114610580578063992642e51461059a5780639e7b08d5146105ba578063a9059cbb146105d0578063abd6192c146105f0578063ba53c2831461061d57600080fd5b80637d549e99146104ed5780638d4e4083146105035780638da5cb5b1461052357806394febbf31461055557806395d89b411461056b57600080fd5b8063313ce567116101e85780636d1e6516116101ac5780636d1e65161461044357806370a0823114610458578063715018a61461048e57806373aff5af146104a35780637921ba96146104b95780637b352962146104ce57600080fd5b8063313ce567146103ba57806343d25e82146103d657806349a1ae91146103ec5780634bb278f3146104015780635d97c1a01461041657600080fd5b8063106425091161023a578063106425091461032d578063156435541461034357806318160ddd1461035957806323b872dd1461036e57806326232a2e1461038e57806326493848146103a457600080fd5b80630614117a1461028257806306fdde031461029957806307e87512146102c4578063095ea7b3146102e85780631008e9611461031857600080fd5b3661027d57005b600080fd5b34801561028e57600080fd5b506102976107e1565b005b3480156102a557600080fd5b506102ae610862565b6040516102bb9190611e51565b60405180910390f35b3480156102d057600080fd5b506102da601a5481565b6040519081526020016102bb565b3480156102f457600080fd5b50610308610303366004611ebc565b6108f4565b60405190151581526020016102bb565b34801561032457600080fd5b5061029761090e565b34801561033957600080fd5b506102da600f5481565b34801561034f57600080fd5b506102da600b5481565b34801561036557600080fd5b506003546102da565b34801561037a57600080fd5b50610308610389366004611ee6565b6109e7565b34801561039a57600080fd5b506102da60085481565b3480156103b057600080fd5b506102da60125481565b3480156103c657600080fd5b50604051601281526020016102bb565b3480156103e257600080fd5b506102da60105481565b3480156103f857600080fd5b50610297610a0b565b34801561040d57600080fd5b50610297610afe565b34801561042257600080fd5b506102da610431366004611f22565b60166020526000908152604090205481565b34801561044f57600080fd5b50610297610b61565b34801561046457600080fd5b506102da610473366004611f22565b6001600160a01b031660009081526001602052604090205490565b34801561049a57600080fd5b50610297610c28565b3480156104af57600080fd5b506102da600e5481565b3480156104c557600080fd5b50610297610c3c565b3480156104da57600080fd5b5060145461030890610100900460ff1681565b3480156104f957600080fd5b506102da60135481565b34801561050f57600080fd5b506014546103089062010000900460ff1681565b34801561052f57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016102bb565b34801561056157600080fd5b506102da600a5481565b34801561057757600080fd5b506102ae610f33565b34801561058c57600080fd5b506014546103089060ff1681565b3480156105a657600080fd5b5060075461053d906001600160a01b031681565b3480156105c657600080fd5b506102da600c5481565b3480156105dc57600080fd5b506103086105eb366004611ebc565b610f42565b3480156105fc57600080fd5b506102da61060b366004611f22565b60196020526000908152604090205481565b34801561062957600080fd5b50610297610638366004611f44565b610f50565b34801561064957600080fd5b506102da610658366004611f22565b611404565b34801561066957600080fd5b506102da60115481565b34801561067f57600080fd5b506102da61068e366004611f22565b60186020526000908152604090205481565b3480156106ac57600080fd5b506102976114dd565b3480156106c157600080fd5b506102da600d5481565b3480156106d757600080fd5b506102da601b5481565b3480156106ed57600080fd5b506102976106fc366004611f22565b611649565b34801561070d57600080fd5b506102da61071c366004611f22565b60176020526000908152604090205481565b34801561073a57600080fd5b506102da610749366004611f5d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561078057600080fd5b506102da61078f366004611f22565b60156020526000908152604090205481565b3480156107ad57600080fd5b506102976107bc366004611f22565b6117c9565b3480156107cd57600080fd5b5060095461053d906001600160a01b031681565b6107e9611804565b600047116108335760405162461bcd60e51b81526020600482015260126024820152712737ba3434b733903a37903932b1b7bb32b960711b60448201526064015b60405180910390fd5b60405133904780156108fc02916000818181858888f1935050505015801561085f573d6000803e3d6000fd5b50565b60606004805461087190611f90565b80601f016020809104026020016040519081016040528092919081815260200182805461089d90611f90565b80156108ea5780601f106108bf576101008083540402835291602001916108ea565b820191906000526020600020905b8154815290600101906020018083116108cd57829003601f168201915b5050505050905090565b600033610902818585611831565b60019150505b92915050565b610916611804565b60006064600f54600d5461092a9190611fe0565b6109349190611ff7565b6007546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af115801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b09190612019565b506040518181527f5bd597f43e1aaceef3ddd1a4ef7f8c1cd0898cab692b0988cd731bbd40920fcb9060200160405180910390a150565b6000336109f585828561183e565b610a008585856118bc565b506001949350505050565b600062278d0060105442610a1f919061203b565b610a299190611ff7565b336000908152601760205260409020549091508111610ab05760405162461bcd60e51b815260206004820152603f60248201527f596f75206861766520616c726561647920636c61696d656420666f722074686960448201527f7320706572696f64206f72206974206973206e6f74207965742074696d652e00606482015260840161082a565b33600090815260176020526040812054610aca908361203b565b3360009081526017602052604081208490559091505b81811015610af957610af13361191b565b600101610ae0565b505050565b610b06611804565b610b0e6119e6565b6014805462ff00001916620100001790554260108190556040517f9d7c6bbe8ca6f2433812f43ed204a1d7ea4ae548db3a3d6e83f8d1ce67e31a5391610b579190815260200190565b60405180910390a1565b610b69611804565b60145460ff1615610b8c5760405162461bcd60e51b815260040161082a9061204e565b600a544210158015610b9f5750600b5442105b610bbb5760405162461bcd60e51b815260040161082a90612085565b601454610100900460ff1615610c135760405162461bcd60e51b815260206004820152601d60248201527f50726f6a6563743a2070726f6a656374206861732066696e6973686564000000604482015260640161082a565b6014805460ff19166001179055600e54601155565b610c30611804565b610c3a6000611bd5565b565b600260065403610c5e5760405162461bcd60e51b815260040161082a906120f3565b600260065560145460ff1680610c895750600b544210158015610c895750601454610100900460ff16155b610ce15760405162461bcd60e51b8152602060048201526024808201527f50726f6a6563743a2063616e6e6f7420726566756e642070726f6a6563742066604482015263756e647360e01b606482015260840161082a565b33600090815260156020526040902054610d0d5760405162461bcd60e51b815260040161082a9061212a565b6000601154118015610d9a575033600090815260156020526040908190205460075491516370a0823160e01b815230600482015290916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d97919061216f565b10155b610de65760405162461bcd60e51b815260206004820152601e60248201527f4e6f207368617265732072656d61696e696e6720666f7220726566756e640000604482015260640161082a565b336000908152601560205260408120546012805491928392610e09908490612188565b90915550503360009081526015602090815260408083208390556018909152812054600e805491929091610e3e90849061203b565b9091555050336000908152601860205260408120546011805491929091610e6690849061203b565b90915550503360008181526018602052604080822091909155600754905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef39190612019565b50604051818152309033907ff40cc8c1a1d17359049ba500cfc894596a692cffc9d03943cd92ec2e159cf6ae9060200160405180910390a3506001600655565b60606005805461087190611f90565b6000336109028185856118bc565b60145460ff1615610f735760405162461bcd60e51b815260040161082a9061204e565b600a544210158015610f865750600b5442105b610fa25760405162461bcd60e51b815260040161082a90612085565b601454610100900460ff1615610ffa5760405162461bcd60e51b815260206004820152601d60248201527f50726f6a6563743a2070726f6a656374206861732066696e6973686564000000604482015260640161082a565b60026006540361101c5760405162461bcd60e51b815260040161082a906120f3565b600260065580158015906110325750601b548111155b6110a45760405162461bcd60e51b815260206004820152603860248201527f5368617265732063616e2774206265206c657373207468616e207a65726f206160448201527f6e64206d6f7265207468616e206d617820616c6c6f7765640000000000000000606482015260840161082a565b600c546007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156110ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611113919061216f565b82601a546111219190611fe0565b61112b9190612188565b11156111845760405162461bcd60e51b815260206004820152602260248201527f457863656564696e6720746f74616c2066756e642072616973696e6720676f616044820152616c2160f01b606482015260840161082a565b601b54336000908152601860205260409020546111a2908390612188565b11156112035760405162461bcd60e51b815260206004820152602a60248201527f43616e277420627579206d6f7265207468616e20746865206d617820736861726044820152696520616c6c6f7765642160b01b606482015260840161082a565b600081601a546112139190611fe0565b9050601b548203611232576014805461ff0019166101001790556112ce565b600c546007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a1919061216f565b83601a546112af9190611fe0565b6112b99190612188565b106112ce576014805461ff0019166101001790555b6007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611325573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113499190612019565b503360009081526015602052604081208054839290611369908490612188565b9091555050336000908152601860205260408120805484929061138d908490612188565b9250508190555080600d60008282546113a69190612188565b9250508190555081600e60008282546113bf9190612188565b9091555050604051818152309033907f71be8766c1bd9bb33623f518aecc1d98612c75b596f4a0c38408f72239ef4e609060200160405180910390a350506001600655565b6001600160a01b0381166000908152601560205260408120546114395760405162461bcd60e51b815260040161082a9061212a565b6001600160a01b038216600090815260166020526040812054810361146c57601054611465904261203b565b9050611492565b6001600160a01b03831660009081526016602052604090205461148f904261203b565b90505b600f546001600160a01b03841660009081526015602052604081205490916301e133809184916114c191611fe0565b6114cb9190611fe0565b6114d59190611ff7565b949350505050565b60145460ff16156115005760405162461bcd60e51b815260040161082a9061204e565b6002600654036115225760405162461bcd60e51b815260040161082a906120f3565b600260065560145462010000900460ff1661158a5760405162461bcd60e51b815260206004820152602260248201527f50726f6a6563743a2053616c65206973206e6f742066696e6973686564207965604482015261742160f01b606482015260840161082a565b336000908152601560205260409020546115b65760405162461bcd60e51b815260040161082a9061212a565b33600090815260186020908152604080832054601990925282208054919283926115e1908490612188565b909155506115f190503382611c25565b80601360008282546116039190612188565b909155505060408051338152602081018390527f649fde579b8ba49bd4fbcb330614cb075b8d53c352c5adc49161b6f654e400a2910160405180910390a1506001600655565b611651611804565b6007546001600160a01b03908116908216036116ca5760405162461bcd60e51b815260206004820152603260248201527f43616e277420636c61696d2066756e642072616973696e6720746f6b656e73206044820152717573696e672074686973206d6574686f642160701b606482015260840161082a565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611711573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611735919061216f565b9050816001600160a01b031663a9059cbb6117586000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156117a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af99190612019565b6117d1611804565b6001600160a01b0381166117fb57604051631e4fbdf760e01b81526000600482015260240161082a565b61085f81611bd5565b6000546001600160a01b03163314610c3a5760405163118cdaa760e01b815233600482015260240161082a565b610af98383836001611c5f565b6001600160a01b0383811660009081526002602090815260408083209386168352929052205460001981146118b657818110156118a757604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161082a565b6118b684848484036000611c5f565b50505050565b6001600160a01b0383166118e657604051634b637e8f60e11b81526000600482015260240161082a565b6001600160a01b0382166119105760405163ec442f0560e01b81526000600482015260240161082a565b610af9838383611d34565b600061192682611404565b60075460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af115801561197b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199f9190612019565b50604080516001600160a01b0384168152602081018390527fd6a45326680045c471b7b30597d25e52e420f1e7535046ca9ad2944a1bb53487910160405180910390a15050565b601454610100900460ff16611a3d5760405162461bcd60e51b815260206004820181905260248201527f50726f6a6563743a2070726f6a656374206973206e6f742066696e6973686564604482015260640161082a565b60006064600f54600d54611a519190611fe0565b611a5b9190611ff7565b90506000606460085483600d54611a72919061203b565b611a7c9190611fe0565b611a869190611ff7565b905060008183600d54611a99919061203b565b611aa3919061203b565b60075460095460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101869052929350169063a9059cbb906044016020604051808303816000875af1158015611afa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1e9190612019565b5060075460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015611b70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b949190612019565b50600c54604051908152309033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb906020015b60405180910390a3505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216611c4f5760405163ec442f0560e01b81526000600482015260240161082a565b611c5b60008383611d34565b5050565b6001600160a01b038416611c895760405163e602df0560e01b81526000600482015260240161082a565b6001600160a01b038316611cb357604051634a1406b160e11b81526000600482015260240161082a565b6001600160a01b03808516600090815260026020908152604080832093871683529290522082905580156118b657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d2691815260200190565b60405180910390a350505050565b6001600160a01b038316611d5f578060036000828254611d549190612188565b90915550611dd19050565b6001600160a01b03831660009081526001602052604090205481811015611db25760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161082a565b6001600160a01b03841660009081526001602052604090209082900390555b6001600160a01b038216611ded57600380548290039055611e0c565b6001600160a01b03821660009081526001602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611bc891815260200190565b60006020808352835180602085015260005b81811015611e7f57858101830151858201604001528201611e63565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611eb757600080fd5b919050565b60008060408385031215611ecf57600080fd5b611ed883611ea0565b946020939093013593505050565b600080600060608486031215611efb57600080fd5b611f0484611ea0565b9250611f1260208501611ea0565b9150604084013590509250925092565b600060208284031215611f3457600080fd5b611f3d82611ea0565b9392505050565b600060208284031215611f5657600080fd5b5035919050565b60008060408385031215611f7057600080fd5b611f7983611ea0565b9150611f8760208401611ea0565b90509250929050565b600181811c90821680611fa457607f821691505b602082108103611fc457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761090857610908611fca565b60008261201457634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561202b57600080fd5b81518015158114611f3d57600080fd5b8181038181111561090857610908611fca565b6020808252601d908201527f50726f6a6563743a2070726f6a6563742069732063616e63656c6c6564000000604082015260600190565b60208082526048908201527f50726f6a6563743a2045697468657220697420686173206e6f7420737461727460408201527f6564206f72207468652074696d65206c696d697420666f722070726f6a65637460608201526708195e1c1a5c995960c21b608082015260a00190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526025908201527f50726f6a6563743a206164647265737320686173206e6f20636f6e747269627560408201526474696f6e7360d81b606082015260800190565b60006020828403121561218157600080fd5b5051919050565b8082018082111561090857610908611fca56fea2646970667358221220e041ba8942f5db4642c66740a7061b1e285d8972db6620d46b5d595022033b1764736f6c63430008180033a264697066735822122040cde58275fdc8ed1d1089ab503ca2764fbce3f84081a930e51fa0297c79d2b664736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x19 PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xCC4EF3FC58AA1EE91626F50037734B5F3CA1358A OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45 CALLER PUSH2 0x5C JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xAC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x30D3 DUP1 PUSH2 0xBB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xE0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xADA4EF30 GT PUSH3 0x97 JUMPI DUP1 PUSH4 0xE32E723C GT PUSH3 0x6E JUMPI DUP1 PUSH4 0xE32E723C EQ PUSH3 0x1B5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x1CC JUMPI DUP1 PUSH4 0xF8079052 EQ PUSH3 0x1E3 JUMPI DUP1 PUSH4 0xFA2AF9DA EQ PUSH3 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xADA4EF30 EQ PUSH3 0x17B JUMPI DUP1 PUSH4 0xC54A9588 EQ PUSH3 0x192 JUMPI DUP1 PUSH4 0xD396F336 EQ PUSH3 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26232A2E EQ PUSH3 0xE5 JUMPI DUP1 PUSH4 0x381AA756 EQ PUSH3 0x102 JUMPI DUP1 PUSH4 0x532F5278 EQ PUSH3 0x132 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x146 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x152 JUMPI DUP1 PUSH4 0xA5D0BCFF EQ PUSH3 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xEF PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x119 PUSH3 0x113 CALLDATASIZE PUSH1 0x4 PUSH3 0x6ED JUMP JUMPDEST PUSH3 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xF9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH3 0x119 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0x150 PUSH3 0x33F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x119 JUMP JUMPDEST PUSH3 0x150 PUSH3 0x175 CALLDATASIZE PUSH1 0x4 PUSH3 0x7B4 JUMP JUMPDEST PUSH3 0x357 JUMP JUMPDEST PUSH3 0x150 PUSH3 0x18C CALLDATASIZE PUSH1 0x4 PUSH3 0x7CE JUMP JUMPDEST PUSH3 0x39D JUMP JUMPDEST PUSH3 0x19C PUSH3 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xF9 SWAP2 SWAP1 PUSH3 0x7F5 JUMP JUMPDEST PUSH3 0xEF PUSH3 0x4A7 JUMP JUMPDEST PUSH3 0x19C PUSH3 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH3 0x7CE JUMP JUMPDEST PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0x150 PUSH3 0x1DD CALLDATASIZE PUSH1 0x4 PUSH3 0x7CE JUMP JUMPDEST PUSH3 0x530 JUMP JUMPDEST PUSH3 0x119 PUSH3 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH3 0x7B4 JUMP JUMPDEST PUSH3 0x574 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH3 0x119 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x21A PUSH3 0x59F JUMP JUMPDEST PUSH1 0x0 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x2 SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x40 MLOAD PUSH3 0x24C SWAP1 PUSH3 0x61E JUMP JUMPDEST PUSH3 0x262 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x27F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE DUP3 SLOAD DUP4 ADD DUP4 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP7 DUP8 ADD DUP2 SSTORE DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP1 SWAP3 AND DUP4 OR SWAP1 SWAP2 SSTORE DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP3 SWAP4 POP PUSH32 0x3815A547CA4B753AE5CC6A73F3E019B6791FAEDAD7FE0614A6E08D0BCFB137F1 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x349 PUSH3 0x59F JUMP JUMPDEST PUSH3 0x355 PUSH1 0x0 PUSH3 0x5CE JUMP JUMPDEST JUMP JUMPDEST PUSH3 0x361 PUSH3 0x59F JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x45610D581145924DD7090A5017E5F2B1D6F42213BB2E95707FF86846BBFCB1CA SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x6F6E6C7920444F54422063616E20757064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x73238E3AE0A71B401B31AE67204506D074DE41BD5C084082FBA9B64B1C7FA28F SWAP1 PUSH1 0x20 ADD PUSH3 0x392 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x49D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x47E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B3 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH3 0x523 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x504 JUMPI JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x53A PUSH3 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x566 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x571 DUP2 PUSH3 0x5CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x355 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0x3EB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x278E DUP1 PUSH3 0x910 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x688 JUMPI PUSH3 0x688 PUSH3 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x6B3 JUMPI PUSH3 0x6B3 PUSH3 0x642 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x6CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH3 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH3 0x71A DUP2 PUSH3 0x62C JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x746 DUP14 DUP4 DUP15 ADD PUSH3 0x658 JUMP JUMPDEST SWAP10 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x76C DUP13 DUP3 DUP14 ADD PUSH3 0x658 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP3 POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD PUSH3 0x79B DUP2 PUSH3 0x62C JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH2 0x100 DUP11 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0x7EE DUP2 PUSH3 0x62C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x838 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0x811 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x86C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x84E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND DUP3 MSTORE PUSH2 0x160 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH3 0x8B4 DUP5 DUP4 ADD DUP16 PUSH3 0x844 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH3 0x8CA DUP3 DUP15 PUSH3 0x844 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD SWAP13 SWAP1 SWAP13 MSTORE PUSH1 0x80 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE POP POP PUSH1 0xA0 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xC0 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP6 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x278E CODESIZE SUB DUP1 PUSH3 0x278E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x347 JUMP JUMPDEST DUP10 DUP10 PUSH3 0x41 CALLER PUSH3 0x19D JUMP JUMPDEST PUSH1 0x4 PUSH3 0x4F DUP4 DUP3 PUSH3 0x4BE JUMP JUMPDEST POP PUSH1 0x5 PUSH3 0x5E DUP3 DUP3 PUSH3 0x4BE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP DUP6 DUP6 GT PUSH3 0xC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D652063616E2774206265206265666F72652073746172742074 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696D65 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH3 0x11F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420736574207A65726F206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xBE JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND OR SWAP1 SSTORE PUSH3 0x145 DUP5 PUSH3 0x1ED JUMP JUMPDEST PUSH1 0xC DUP9 SWAP1 SSTORE PUSH1 0x1A DUP8 SWAP1 SSTORE PUSH3 0x15C PUSH1 0xA DUP10 PUSH3 0x58A JUMP JUMPDEST PUSH1 0x1B SSTORE PUSH1 0xA SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xB SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SSTORE POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xF SSTORE POP PUSH3 0x5AD SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x1F7 PUSH3 0x231 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x223 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xBE JUMP JUMPDEST PUSH3 0x22E DUP2 PUSH3 0x19D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x260 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xBE JUMP JUMPDEST JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2C4 JUMPI PUSH3 0x2C4 PUSH3 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2EF JUMPI PUSH3 0x2EF PUSH3 0x27F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x331 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x312 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH3 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x375 DUP13 PUSH3 0x262 JUMP JUMPDEST PUSH1 0x20 DUP14 ADD MLOAD SWAP1 SWAP12 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3A0 DUP15 DUP3 DUP16 ADD PUSH3 0x295 JUMP JUMPDEST PUSH1 0x40 DUP15 ADD MLOAD SWAP1 SWAP12 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3CD DUP15 DUP3 DUP16 ADD PUSH3 0x295 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 DUP13 ADD MLOAD SWAP8 POP PUSH1 0x80 DUP13 ADD MLOAD SWAP7 POP PUSH1 0xA0 DUP13 ADD MLOAD SWAP6 POP PUSH1 0xC0 DUP13 ADD MLOAD SWAP5 POP PUSH3 0x3FA PUSH1 0xE0 DUP14 ADD PUSH3 0x262 JUMP JUMPDEST SWAP4 POP PUSH2 0x100 DUP13 ADD MLOAD SWAP3 POP PUSH3 0x413 PUSH2 0x120 DUP14 ADD PUSH3 0x262 JUMP JUMPDEST SWAP2 POP PUSH2 0x140 DUP13 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x442 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x463 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4B9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x494 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4B5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4A0 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x4DA JUMPI PUSH3 0x4DA PUSH3 0x27F JUMP JUMPDEST PUSH3 0x4F2 DUP2 PUSH3 0x4EB DUP5 SLOAD PUSH3 0x42D JUMP JUMPDEST DUP5 PUSH3 0x469 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x52A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x511 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4B5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x55B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x53A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x57A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x5A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH2 0x21D1 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x276 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D549E99 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xBAAD7D85 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xCCEC3716 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xCCEC3716 EQ PUSH2 0x6E1 JUMPI DUP1 PUSH4 0xCFB2B5E9 EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xE7AFEEED EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A1 JUMPI DUP1 PUSH4 0xFA2AF9DA EQ PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBAAD7D85 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xC0DAEE49 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xC16A0383 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xC2CED7E5 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xC5C4744C EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0xCA34DA20 EQ PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EE1221 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x95EE1221 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x9E7B08D5 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xABD6192C EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xBA53C283 EQ PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D549E99 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x8D4E4083 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x94FEBBF3 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x6D1E6516 GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x6D1E6516 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x73AFF5AF EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x7921BA96 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x43D25E82 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x49A1AE91 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x5D97C1A0 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10642509 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x10642509 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x15643554 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x26232A2E EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x26493848 EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x614117A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x7E87512 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x1008E961 EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x27D JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x90E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH2 0x9E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xA0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xAFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xB61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xC28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xC3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xF33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x53D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x5EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x638 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x658 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x1404 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x68E CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x14DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x6FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x1649 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x71C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x749 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x17C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x53D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2737BA3434B733903A37903932B1B7BB32B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x871 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x89D SWAP1 PUSH2 0x1F90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x902 DUP2 DUP6 DUP6 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x916 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xF SLOAD PUSH1 0xD SLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x934 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x5BD597F43E1AACEEF3DDD1A4EF7F8C1CD0898CAB692B0988CD731BBD40920FCB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x9F5 DUP6 DUP3 DUP6 PUSH2 0x183E JUMP JUMPDEST PUSH2 0xA00 DUP6 DUP6 DUP6 PUSH2 0x18BC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x278D00 PUSH1 0x10 SLOAD TIMESTAMP PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C726561647920636C61696D656420666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7320706572696F64206F72206974206973206E6F74207965742074696D652E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xACA SWAP1 DUP4 PUSH2 0x203B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE SWAP1 SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAF9 JUMPI PUSH2 0xAF1 CALLER PUSH2 0x191B JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB06 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xB0E PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9D7C6BBE8CA6F2433812F43ED204A1D7EA4AE548DB3A3D6E83F8D1CE67E31A53 SWAP2 PUSH2 0xB57 SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xB69 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xB9F JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT JUMPDEST PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206861732066696E6973686564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xE SLOAD PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH2 0xC30 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xC3A PUSH1 0x0 PUSH2 0x1BD5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xC5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x14 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xC89 JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xC89 JUMPI POP PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2063616E6E6F7420726566756E642070726F6A6563742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x756E6473 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD GT DUP1 ISZERO PUSH2 0xD9A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0xDE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207368617265732072656D61696E696E6720666F7220726566756E640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x12 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0xE09 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x18 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xE DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE3E SWAP1 DUP5 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x11 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE66 SWAP1 DUP5 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0xF40CC8C1A1D17359049BA500CFC894596A692CFFC9D03943CD92EC2E159CF6AE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x871 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x902 DUP2 DUP6 DUP6 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xF86 JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT JUMPDEST PUSH2 0xFA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206861732066696E6973686564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1032 JUMPI POP PUSH1 0x1B SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265732063616E2774206265206C657373207468616E207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E64206D6F7265207468616E206D617820616C6C6F7765640000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST DUP3 PUSH1 0x1A SLOAD PUSH2 0x1121 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x112B SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST GT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457863656564696E6720746F74616C2066756E642072616973696E6720676F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6C21 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1B SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x11A2 SWAP1 DUP4 SWAP1 PUSH2 0x2188 JUMP JUMPDEST GT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420627579206D6F7265207468616E20746865206D61782073686172 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6520616C6C6F77656421 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1A SLOAD PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1B SLOAD DUP3 SUB PUSH2 0x1232 JUMPI PUSH1 0x14 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH2 0x12CE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x127D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A1 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST DUP4 PUSH1 0x1A SLOAD PUSH2 0x12AF SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x12B9 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST LT PUSH2 0x12CE JUMPI PUSH1 0x14 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1369 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x138D SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13A6 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13BF SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x71BE8766C1BD9BB33623F518AECC1D98612C75B596F4A0C38408F72239EF4E60 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SUB PUSH2 0x146C JUMPI PUSH1 0x10 SLOAD PUSH2 0x1465 SWAP1 TIMESTAMP PUSH2 0x203B JUMP JUMPDEST SWAP1 POP PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x148F SWAP1 TIMESTAMP PUSH2 0x203B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH4 0x1E13380 SWAP2 DUP5 SWAP2 PUSH2 0x14C1 SWAP2 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x14CB SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1500 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x14 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2053616C65206973206E6F742066696E6973686564207965 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7421 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x19 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x15E1 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15F1 SWAP1 POP CALLER DUP3 PUSH2 0x1C25 JUMP JUMPDEST DUP1 PUSH1 0x13 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x649FDE579B8BA49BD4FBCB330614CB075B8D53C352C5ADC49161B6F654E400A2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1651 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x16CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420636C61696D2066756E642072616973696E6720746F6B656E7320 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x7573696E672074686973206D6574686F6421 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1711 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1758 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF9 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x17D1 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x85F DUP2 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0xAF9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x18B6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x18A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x18B6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1C5F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x18E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1910 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0xAF9 DUP4 DUP4 DUP4 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1926 DUP3 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x197B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x199F SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xD6A45326680045C471B7B30597D25E52E420F1E7535046CA9AD2944A1BB53487 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206973206E6F742066696E6973686564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xF SLOAD PUSH1 0xD SLOAD PUSH2 0x1A51 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1A5B SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH1 0xD SLOAD PUSH2 0x1A72 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x1A7C SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1A86 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0xD SLOAD PUSH2 0x1A99 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x1AA3 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B1E SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B94 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C4F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x1C5B PUSH1 0x0 DUP4 DUP4 PUSH2 0x1D34 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C89 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1CB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x18B6 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D26 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D5F JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D54 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1DD1 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DED JUMPI PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BC8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E7F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1E63 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ED8 DUP4 PUSH2 0x1EA0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F04 DUP5 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1F12 PUSH1 0x20 DUP6 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3D DUP3 PUSH2 0x1EA0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F79 DUP4 PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F87 PUSH1 0x20 DUP5 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1FA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2014 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A6563742069732063616E63656C6C6564000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x48 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2045697468657220697420686173206E6F74207374617274 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6564206F72207468652074696D65206C696D697420666F722070726F6A656374 PUSH1 0x60 DUP3 ADD MSTORE PUSH8 0x8195E1C1A5C9959 PUSH1 0xC2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A206164647265737320686173206E6F20636F6E7472696275 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x74696F6E73 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 COINBASE 0xBA DUP10 TIMESTAMP CREATE2 0xDB CHAINID TIMESTAMP 0xC6 PUSH8 0x40A7061B1E285D89 PUSH19 0xDB6620D46B5D595022033B1764736F6C634300 ADDMOD XOR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xCD 0xE5 DUP3 PUSH22 0xFDC8ED1D1089AB503CA2764FBCE3F84081A930E51FA0 0x29 PUSH29 0x79D2B664736F6C63430008180033000000000000000000000000000000 ",
              "sourceMap": "1374:2496:7:-:0;;;1522:2;1493:31;;1537:74;;;-1:-1:-1;;;;;;1537:74:7;1569:42;1537:74;;;1962:48;;;;;;;;;-1:-1:-1;1249:30:0;1268:10;1249:18;:30::i;:::-;1986:4:7;:17;;-1:-1:-1;;;;;;1986:17:7;1993:10;1986:17;;;1374:2496;;2786:187:0;2859:16;2878:6;;-1:-1:-1;;;;;2894:17:0;;;-1:-1:-1;;;;;;2894:17:0;;;;;;2926:40;;2878:6;;;;;;;2926:40;;2859:16;2926:40;2849:124;2786:187;:::o;1374:2496:7:-;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@DOTB_1943": {
                  "entryPoint": null,
                  "id": 1943,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_checkOwner_68": {
                  "entryPoint": 1439,
                  "id": 68,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_899": {
                  "entryPoint": null,
                  "id": 899,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_130": {
                  "entryPoint": 1486,
                  "id": 130,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@contractsList_1946": {
                  "entryPoint": 1396,
                  "id": 1946,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@createListing_2055": {
                  "entryPoint": 526,
                  "id": 2055,
                  "parameterSlots": 9,
                  "returnSlots": 1
                },
                "@current_1870": {
                  "entryPoint": null,
                  "id": 1870,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@deployedContracts_2074": {
                  "entryPoint": 1091,
                  "id": 2074,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@deployedCounter_2065": {
                  "entryPoint": 1191,
                  "id": 2065,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getUserProjects_2094": {
                  "entryPoint": 1208,
                  "id": 2094,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@increment_1884": {
                  "entryPoint": null,
                  "id": 1884,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@modifyPlatformFee_2110": {
                  "entryPoint": 855,
                  "id": 2110,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@owner_51": {
                  "entryPoint": null,
                  "id": 51,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@platformFee_1938": {
                  "entryPoint": null,
                  "id": 1938,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@platformWallet_1941": {
                  "entryPoint": null,
                  "id": 1941,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@renounceOwnership_82": {
                  "entryPoint": 831,
                  "id": 82,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferOwnership_110": {
                  "entryPoint": 1328,
                  "id": 110,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@updatePlatformWallet_2132": {
                  "entryPoint": 925,
                  "id": 2132,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_string": {
                  "entryPoint": 1624,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 1998,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_IERC20_$861t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_addresst_uint256": {
                  "entryPoint": 1773,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 9
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 1972,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 2116,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
                  "entryPoint": 2037,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC20_$861_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_address_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": 2188,
                  "id": null,
                  "parameterSlots": 12,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_278a566a288b8bea9076f94580f0a67393d0666cb2b9d9c5af46d595140a83d2__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 1602,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_contract_IERC20": {
                  "entryPoint": 1580,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:5623:8",
                    "nodeType": "YulBlock",
                    "src": "0:5623:8",
                    "statements": [
                      {
                        "nativeSrc": "6:3:8",
                        "nodeType": "YulBlock",
                        "src": "6:3:8",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "115:76:8",
                          "nodeType": "YulBlock",
                          "src": "115:76:8",
                          "statements": [
                            {
                              "nativeSrc": "125:26:8",
                              "nodeType": "YulAssignment",
                              "src": "125:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "137:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "148:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "133:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:8"
                                },
                                "nativeSrc": "133:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "125:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "167:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:8"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "178:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "160:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:8"
                                },
                                "nativeSrc": "160:25:8",
                                "nodeType": "YulFunctionCall",
                                "src": "160:25:8"
                              },
                              "nativeSrc": "160:25:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "160:25:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "14:177:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "84:9:8",
                            "nodeType": "YulTypedName",
                            "src": "84:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "95:6:8",
                            "nodeType": "YulTypedName",
                            "src": "95:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "106:4:8",
                            "nodeType": "YulTypedName",
                            "src": "106:4:8",
                            "type": ""
                          }
                        ],
                        "src": "14:177:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "249:86:8",
                          "nodeType": "YulBlock",
                          "src": "249:86:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "313:16:8",
                                "nodeType": "YulBlock",
                                "src": "313:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "322:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "322:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "325:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "325:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "315:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "315:6:8"
                                      },
                                      "nativeSrc": "315:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "315:12:8"
                                    },
                                    "nativeSrc": "315:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "315:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "272:5:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "272:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "283:5:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "283:5:8"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "298:3:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "298:3:8",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "303:1:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "303:1:8",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "294:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "294:3:8"
                                                },
                                                "nativeSrc": "294:11:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "294:11:8"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "307:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "307:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "290:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "290:3:8"
                                            },
                                            "nativeSrc": "290:19:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "290:19:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "279:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "279:3:8"
                                        },
                                        "nativeSrc": "279:31:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "279:31:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "269:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "269:2:8"
                                    },
                                    "nativeSrc": "269:42:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "269:42:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "262:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "262:6:8"
                                },
                                "nativeSrc": "262:50:8",
                                "nodeType": "YulFunctionCall",
                                "src": "262:50:8"
                              },
                              "nativeSrc": "259:70:8",
                              "nodeType": "YulIf",
                              "src": "259:70:8"
                            }
                          ]
                        },
                        "name": "validator_revert_contract_IERC20",
                        "nativeSrc": "196:139:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "238:5:8",
                            "nodeType": "YulTypedName",
                            "src": "238:5:8",
                            "type": ""
                          }
                        ],
                        "src": "196:139:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "372:95:8",
                          "nodeType": "YulBlock",
                          "src": "372:95:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "389:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "389:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "396:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "396:3:8",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "401:10:8",
                                        "nodeType": "YulLiteral",
                                        "src": "401:10:8",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "392:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "392:3:8"
                                    },
                                    "nativeSrc": "392:20:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "392:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "382:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "382:6:8"
                                },
                                "nativeSrc": "382:31:8",
                                "nodeType": "YulFunctionCall",
                                "src": "382:31:8"
                              },
                              "nativeSrc": "382:31:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "382:31:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "429:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "429:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "432:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "432:4:8",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "422:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "422:6:8"
                                },
                                "nativeSrc": "422:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "422:15:8"
                              },
                              "nativeSrc": "422:15:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "422:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "453:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "453:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "456:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "456:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "446:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "446:6:8"
                                },
                                "nativeSrc": "446:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "446:15:8"
                              },
                              "nativeSrc": "446:15:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "446:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "340:127:8",
                        "nodeType": "YulFunctionDefinition",
                        "src": "340:127:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "525:666:8",
                          "nodeType": "YulBlock",
                          "src": "525:666:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "574:16:8",
                                "nodeType": "YulBlock",
                                "src": "574:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "583:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "583:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "586:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "586:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "576:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "576:6:8"
                                      },
                                      "nativeSrc": "576:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "576:12:8"
                                    },
                                    "nativeSrc": "576:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "576:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "553:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "553:6:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "561:4:8",
                                            "nodeType": "YulLiteral",
                                            "src": "561:4:8",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "549:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "549:3:8"
                                        },
                                        "nativeSrc": "549:17:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "549:17:8"
                                      },
                                      {
                                        "name": "end",
                                        "nativeSrc": "568:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "568:3:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "545:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "545:3:8"
                                    },
                                    "nativeSrc": "545:27:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "545:27:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "538:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "538:6:8"
                                },
                                "nativeSrc": "538:35:8",
                                "nodeType": "YulFunctionCall",
                                "src": "538:35:8"
                              },
                              "nativeSrc": "535:55:8",
                              "nodeType": "YulIf",
                              "src": "535:55:8"
                            },
                            {
                              "nativeSrc": "599:30:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "599:30:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "622:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "622:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "609:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "609:12:8"
                                },
                                "nativeSrc": "609:20:8",
                                "nodeType": "YulFunctionCall",
                                "src": "609:20:8"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "603:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "603:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "638:28:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "638:28:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "648:18:8",
                                "nodeType": "YulLiteral",
                                "src": "648:18:8",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nativeSrc": "642:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "642:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "689:22:8",
                                "nodeType": "YulBlock",
                                "src": "689:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "691:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "691:16:8"
                                      },
                                      "nativeSrc": "691:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "691:18:8"
                                    },
                                    "nativeSrc": "691:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "691:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nativeSrc": "681:2:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "681:2:8"
                                  },
                                  {
                                    "name": "_2",
                                    "nativeSrc": "685:2:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "685:2:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "678:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "678:2:8"
                                },
                                "nativeSrc": "678:10:8",
                                "nodeType": "YulFunctionCall",
                                "src": "678:10:8"
                              },
                              "nativeSrc": "675:36:8",
                              "nodeType": "YulIf",
                              "src": "675:36:8"
                            },
                            {
                              "nativeSrc": "720:17:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "720:17:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "734:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "734:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nativeSrc": "730:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "730:3:8"
                                },
                                "nativeSrc": "730:7:8",
                                "nodeType": "YulFunctionCall",
                                "src": "730:7:8"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nativeSrc": "724:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "724:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "746:23:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "746:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "766:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "766:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "760:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "760:5:8"
                                },
                                "nativeSrc": "760:9:8",
                                "nodeType": "YulFunctionCall",
                                "src": "760:9:8"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "750:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "750:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "778:71:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "778:71:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "800:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "800:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_1",
                                                    "nativeSrc": "824:2:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "824:2:8"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "828:4:8",
                                                    "nodeType": "YulLiteral",
                                                    "src": "828:4:8",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "820:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "820:3:8"
                                                },
                                                "nativeSrc": "820:13:8",
                                                "nodeType": "YulFunctionCall",
                                                "src": "820:13:8"
                                              },
                                              {
                                                "name": "_3",
                                                "nativeSrc": "835:2:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "835:2:8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nativeSrc": "816:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "816:3:8"
                                            },
                                            "nativeSrc": "816:22:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "816:22:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "840:2:8",
                                            "nodeType": "YulLiteral",
                                            "src": "840:2:8",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "812:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "812:3:8"
                                        },
                                        "nativeSrc": "812:31:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "812:31:8"
                                      },
                                      {
                                        "name": "_3",
                                        "nativeSrc": "845:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "845:2:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "808:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "808:3:8"
                                    },
                                    "nativeSrc": "808:40:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "808:40:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "796:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "796:3:8"
                                },
                                "nativeSrc": "796:53:8",
                                "nodeType": "YulFunctionCall",
                                "src": "796:53:8"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "782:10:8",
                                  "nodeType": "YulTypedName",
                                  "src": "782:10:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "908:22:8",
                                "nodeType": "YulBlock",
                                "src": "908:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "910:16:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "910:16:8"
                                      },
                                      "nativeSrc": "910:18:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "910:18:8"
                                    },
                                    "nativeSrc": "910:18:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "910:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "867:10:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "867:10:8"
                                      },
                                      {
                                        "name": "_2",
                                        "nativeSrc": "879:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "879:2:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "864:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "864:2:8"
                                    },
                                    "nativeSrc": "864:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "864:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "887:10:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "887:10:8"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "899:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "899:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "884:2:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "884:2:8"
                                    },
                                    "nativeSrc": "884:22:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "884:22:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "861:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "861:2:8"
                                },
                                "nativeSrc": "861:46:8",
                                "nodeType": "YulFunctionCall",
                                "src": "861:46:8"
                              },
                              "nativeSrc": "858:72:8",
                              "nodeType": "YulIf",
                              "src": "858:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "946:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "946:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nativeSrc": "950:10:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "950:10:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "939:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "939:6:8"
                                },
                                "nativeSrc": "939:22:8",
                                "nodeType": "YulFunctionCall",
                                "src": "939:22:8"
                              },
                              "nativeSrc": "939:22:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "939:22:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "977:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "977:6:8"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "985:2:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "985:2:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "970:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "970:6:8"
                                },
                                "nativeSrc": "970:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "970:18:8"
                              },
                              "nativeSrc": "970:18:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "970:18:8"
                            },
                            {
                              "body": {
                                "nativeSrc": "1036:16:8",
                                "nodeType": "YulBlock",
                                "src": "1036:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1045:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1045:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1048:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1048:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1038:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1038:6:8"
                                      },
                                      "nativeSrc": "1038:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1038:12:8"
                                    },
                                    "nativeSrc": "1038:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1038:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "1011:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1011:6:8"
                                          },
                                          {
                                            "name": "_1",
                                            "nativeSrc": "1019:2:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1019:2:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1007:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1007:3:8"
                                        },
                                        "nativeSrc": "1007:15:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1007:15:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1024:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1024:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1003:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1003:3:8"
                                    },
                                    "nativeSrc": "1003:26:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1003:26:8"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "1031:3:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1031:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1000:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1000:2:8"
                                },
                                "nativeSrc": "1000:35:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1000:35:8"
                              },
                              "nativeSrc": "997:55:8",
                              "nodeType": "YulIf",
                              "src": "997:55:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "1078:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1078:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1086:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1086:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1074:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1074:3:8"
                                    },
                                    "nativeSrc": "1074:17:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1074:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "1097:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1097:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1105:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1105:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1093:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1093:3:8"
                                    },
                                    "nativeSrc": "1093:17:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1093:17:8"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "1112:2:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1112:2:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nativeSrc": "1061:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1061:12:8"
                                },
                                "nativeSrc": "1061:54:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1061:54:8"
                              },
                              "nativeSrc": "1061:54:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "1061:54:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nativeSrc": "1139:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1139:6:8"
                                          },
                                          {
                                            "name": "_1",
                                            "nativeSrc": "1147:2:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "1147:2:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1135:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "1135:3:8"
                                        },
                                        "nativeSrc": "1135:15:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1135:15:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1152:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1152:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1131:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1131:3:8"
                                    },
                                    "nativeSrc": "1131:26:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1131:26:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1159:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1159:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1124:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1124:6:8"
                                },
                                "nativeSrc": "1124:37:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1124:37:8"
                              },
                              "nativeSrc": "1124:37:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "1124:37:8"
                            },
                            {
                              "nativeSrc": "1170:15:8",
                              "nodeType": "YulAssignment",
                              "src": "1170:15:8",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "1179:6:8",
                                "nodeType": "YulIdentifier",
                                "src": "1179:6:8"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nativeSrc": "1170:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1170:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_string",
                        "nativeSrc": "472:719:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "499:6:8",
                            "nodeType": "YulTypedName",
                            "src": "499:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "507:3:8",
                            "nodeType": "YulTypedName",
                            "src": "507:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nativeSrc": "515:5:8",
                            "nodeType": "YulTypedName",
                            "src": "515:5:8",
                            "type": ""
                          }
                        ],
                        "src": "472:719:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "1436:955:8",
                          "nodeType": "YulBlock",
                          "src": "1436:955:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1483:16:8",
                                "nodeType": "YulBlock",
                                "src": "1483:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1492:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1492:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1495:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1495:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1485:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1485:6:8"
                                      },
                                      "nativeSrc": "1485:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1485:12:8"
                                    },
                                    "nativeSrc": "1485:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1485:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1457:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1457:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1466:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1466:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1453:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1453:3:8"
                                    },
                                    "nativeSrc": "1453:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1453:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1478:3:8",
                                    "nodeType": "YulLiteral",
                                    "src": "1478:3:8",
                                    "type": "",
                                    "value": "288"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1449:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1449:3:8"
                                },
                                "nativeSrc": "1449:33:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1449:33:8"
                              },
                              "nativeSrc": "1446:53:8",
                              "nodeType": "YulIf",
                              "src": "1446:53:8"
                            },
                            {
                              "nativeSrc": "1508:36:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1508:36:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1534:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1534:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1521:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1521:12:8"
                                },
                                "nativeSrc": "1521:23:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1521:23:8"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1512:5:8",
                                  "nodeType": "YulTypedName",
                                  "src": "1512:5:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "1586:5:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1586:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_IERC20",
                                  "nativeSrc": "1553:32:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1553:32:8"
                                },
                                "nativeSrc": "1553:39:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1553:39:8"
                              },
                              "nativeSrc": "1553:39:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "1553:39:8"
                            },
                            {
                              "nativeSrc": "1601:15:8",
                              "nodeType": "YulAssignment",
                              "src": "1601:15:8",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1611:5:8",
                                "nodeType": "YulIdentifier",
                                "src": "1611:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1601:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1601:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1625:46:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1625:46:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1656:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1656:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1667:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1667:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1652:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1652:3:8"
                                    },
                                    "nativeSrc": "1652:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1652:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1639:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1639:12:8"
                                },
                                "nativeSrc": "1639:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1639:32:8"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "1629:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "1629:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1680:28:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1680:28:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1690:18:8",
                                "nodeType": "YulLiteral",
                                "src": "1690:18:8",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "1684:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "1684:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1735:16:8",
                                "nodeType": "YulBlock",
                                "src": "1735:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1744:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1744:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1747:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1747:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1737:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1737:6:8"
                                      },
                                      "nativeSrc": "1737:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1737:12:8"
                                    },
                                    "nativeSrc": "1737:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1737:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1723:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1723:6:8"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "1731:2:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1731:2:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1720:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1720:2:8"
                                },
                                "nativeSrc": "1720:14:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1720:14:8"
                              },
                              "nativeSrc": "1717:34:8",
                              "nodeType": "YulIf",
                              "src": "1717:34:8"
                            },
                            {
                              "nativeSrc": "1760:60:8",
                              "nodeType": "YulAssignment",
                              "src": "1760:60:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1792:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1792:9:8"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "1803:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1803:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1788:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1788:3:8"
                                    },
                                    "nativeSrc": "1788:22:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1788:22:8"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "1812:7:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1812:7:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string",
                                  "nativeSrc": "1770:17:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1770:17:8"
                                },
                                "nativeSrc": "1770:50:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1770:50:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1760:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1760:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1829:48:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1829:48:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1862:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1862:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1873:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "1873:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1858:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1858:3:8"
                                    },
                                    "nativeSrc": "1858:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1858:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1845:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1845:12:8"
                                },
                                "nativeSrc": "1845:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1845:32:8"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nativeSrc": "1833:8:8",
                                  "nodeType": "YulTypedName",
                                  "src": "1833:8:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1906:16:8",
                                "nodeType": "YulBlock",
                                "src": "1906:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1915:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1915:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1918:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "1918:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1908:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1908:6:8"
                                      },
                                      "nativeSrc": "1908:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1908:12:8"
                                    },
                                    "nativeSrc": "1908:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1908:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nativeSrc": "1892:8:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1892:8:8"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "1902:2:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1902:2:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1889:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1889:2:8"
                                },
                                "nativeSrc": "1889:16:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1889:16:8"
                              },
                              "nativeSrc": "1886:36:8",
                              "nodeType": "YulIf",
                              "src": "1886:36:8"
                            },
                            {
                              "nativeSrc": "1931:62:8",
                              "nodeType": "YulAssignment",
                              "src": "1931:62:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1963:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1963:9:8"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nativeSrc": "1974:8:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "1974:8:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1959:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1959:3:8"
                                    },
                                    "nativeSrc": "1959:24:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1959:24:8"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "1985:7:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "1985:7:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string",
                                  "nativeSrc": "1941:17:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1941:17:8"
                                },
                                "nativeSrc": "1941:52:8",
                                "nodeType": "YulFunctionCall",
                                "src": "1941:52:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "1931:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1931:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2002:42:8",
                              "nodeType": "YulAssignment",
                              "src": "2002:42:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2029:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2029:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2040:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2040:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2025:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2025:3:8"
                                    },
                                    "nativeSrc": "2025:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2025:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2012:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2012:12:8"
                                },
                                "nativeSrc": "2012:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2012:32:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nativeSrc": "2002:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2002:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2053:43:8",
                              "nodeType": "YulAssignment",
                              "src": "2053:43:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2080:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2080:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2091:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2091:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2076:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2076:3:8"
                                    },
                                    "nativeSrc": "2076:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2076:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2063:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2063:12:8"
                                },
                                "nativeSrc": "2063:33:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2063:33:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nativeSrc": "2053:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2053:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2105:43:8",
                              "nodeType": "YulAssignment",
                              "src": "2105:43:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2132:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2132:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2143:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2143:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2128:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2128:3:8"
                                    },
                                    "nativeSrc": "2128:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2128:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2115:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2115:12:8"
                                },
                                "nativeSrc": "2115:33:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2115:33:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nativeSrc": "2105:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2105:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2157:43:8",
                              "nodeType": "YulAssignment",
                              "src": "2157:43:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2184:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2184:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2195:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2195:3:8",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2180:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2180:3:8"
                                    },
                                    "nativeSrc": "2180:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2180:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2167:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2167:12:8"
                                },
                                "nativeSrc": "2167:33:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2167:33:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value6",
                                  "nativeSrc": "2157:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2157:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2209:48:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2209:48:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2241:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2241:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2252:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2252:3:8",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2237:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2237:3:8"
                                    },
                                    "nativeSrc": "2237:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2237:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2224:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2224:12:8"
                                },
                                "nativeSrc": "2224:33:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2224:33:8"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "2213:7:8",
                                  "nodeType": "YulTypedName",
                                  "src": "2213:7:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nativeSrc": "2299:7:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2299:7:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_IERC20",
                                  "nativeSrc": "2266:32:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2266:32:8"
                                },
                                "nativeSrc": "2266:41:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2266:41:8"
                              },
                              "nativeSrc": "2266:41:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "2266:41:8"
                            },
                            {
                              "nativeSrc": "2316:17:8",
                              "nodeType": "YulAssignment",
                              "src": "2316:17:8",
                              "value": {
                                "name": "value_1",
                                "nativeSrc": "2326:7:8",
                                "nodeType": "YulIdentifier",
                                "src": "2326:7:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value7",
                                  "nativeSrc": "2316:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2316:6:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2342:43:8",
                              "nodeType": "YulAssignment",
                              "src": "2342:43:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2369:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2369:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2380:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "2380:3:8",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2365:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2365:3:8"
                                    },
                                    "nativeSrc": "2365:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2365:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2352:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2352:12:8"
                                },
                                "nativeSrc": "2352:33:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2352:33:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value8",
                                  "nativeSrc": "2342:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2342:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IERC20_$861t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_addresst_uint256",
                        "nativeSrc": "1196:1195:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1338:9:8",
                            "nodeType": "YulTypedName",
                            "src": "1338:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1349:7:8",
                            "nodeType": "YulTypedName",
                            "src": "1349:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1361:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1361:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1369:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1369:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1377:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1377:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nativeSrc": "1385:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1385:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nativeSrc": "1393:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1393:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nativeSrc": "1401:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1401:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nativeSrc": "1409:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1409:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nativeSrc": "1417:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1417:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nativeSrc": "1425:6:8",
                            "nodeType": "YulTypedName",
                            "src": "1425:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1196:1195:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2497:102:8",
                          "nodeType": "YulBlock",
                          "src": "2497:102:8",
                          "statements": [
                            {
                              "nativeSrc": "2507:26:8",
                              "nodeType": "YulAssignment",
                              "src": "2507:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2519:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2519:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2530:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2530:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2515:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2515:3:8"
                                },
                                "nativeSrc": "2515:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2515:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "2507:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2507:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2549:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2549:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "2564:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2564:6:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2580:3:8",
                                                "nodeType": "YulLiteral",
                                                "src": "2580:3:8",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2585:1:8",
                                                "nodeType": "YulLiteral",
                                                "src": "2585:1:8",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "2576:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "2576:3:8"
                                            },
                                            "nativeSrc": "2576:11:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2576:11:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2589:1:8",
                                            "nodeType": "YulLiteral",
                                            "src": "2589:1:8",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "2572:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "2572:3:8"
                                        },
                                        "nativeSrc": "2572:19:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2572:19:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "2560:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2560:3:8"
                                    },
                                    "nativeSrc": "2560:32:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2560:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2542:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2542:6:8"
                                },
                                "nativeSrc": "2542:51:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2542:51:8"
                              },
                              "nativeSrc": "2542:51:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "2542:51:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "2396:203:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2466:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2466:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2477:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2477:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2488:4:8",
                            "nodeType": "YulTypedName",
                            "src": "2488:4:8",
                            "type": ""
                          }
                        ],
                        "src": "2396:203:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2674:110:8",
                          "nodeType": "YulBlock",
                          "src": "2674:110:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2720:16:8",
                                "nodeType": "YulBlock",
                                "src": "2720:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2729:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2729:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2732:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2732:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2722:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2722:6:8"
                                      },
                                      "nativeSrc": "2722:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2722:12:8"
                                    },
                                    "nativeSrc": "2722:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2722:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2695:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2695:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2704:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2704:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2691:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2691:3:8"
                                    },
                                    "nativeSrc": "2691:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2691:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2716:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2716:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2687:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2687:3:8"
                                },
                                "nativeSrc": "2687:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2687:32:8"
                              },
                              "nativeSrc": "2684:52:8",
                              "nodeType": "YulIf",
                              "src": "2684:52:8"
                            },
                            {
                              "nativeSrc": "2745:33:8",
                              "nodeType": "YulAssignment",
                              "src": "2745:33:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2768:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2768:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2755:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2755:12:8"
                                },
                                "nativeSrc": "2755:23:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2755:23:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2745:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2745:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nativeSrc": "2604:180:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2640:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2640:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2651:7:8",
                            "nodeType": "YulTypedName",
                            "src": "2651:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2663:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2663:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2604:180:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "2859:185:8",
                          "nodeType": "YulBlock",
                          "src": "2859:185:8",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2905:16:8",
                                "nodeType": "YulBlock",
                                "src": "2905:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2914:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2914:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2917:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "2917:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2907:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2907:6:8"
                                      },
                                      "nativeSrc": "2907:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2907:12:8"
                                    },
                                    "nativeSrc": "2907:12:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2907:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2880:7:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2880:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2889:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2889:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2876:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2876:3:8"
                                    },
                                    "nativeSrc": "2876:23:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2876:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2901:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "2901:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2872:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2872:3:8"
                                },
                                "nativeSrc": "2872:32:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2872:32:8"
                              },
                              "nativeSrc": "2869:52:8",
                              "nodeType": "YulIf",
                              "src": "2869:52:8"
                            },
                            {
                              "nativeSrc": "2930:36:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2930:36:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2956:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "2956:9:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2943:12:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2943:12:8"
                                },
                                "nativeSrc": "2943:23:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2943:23:8"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2934:5:8",
                                  "nodeType": "YulTypedName",
                                  "src": "2934:5:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "3008:5:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3008:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_IERC20",
                                  "nativeSrc": "2975:32:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2975:32:8"
                                },
                                "nativeSrc": "2975:39:8",
                                "nodeType": "YulFunctionCall",
                                "src": "2975:39:8"
                              },
                              "nativeSrc": "2975:39:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "2975:39:8"
                            },
                            {
                              "nativeSrc": "3023:15:8",
                              "nodeType": "YulAssignment",
                              "src": "3023:15:8",
                              "value": {
                                "name": "value",
                                "nativeSrc": "3033:5:8",
                                "nodeType": "YulIdentifier",
                                "src": "3033:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3023:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3023:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "2789:255:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2825:9:8",
                            "nodeType": "YulTypedName",
                            "src": "2825:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2836:7:8",
                            "nodeType": "YulTypedName",
                            "src": "2836:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2848:6:8",
                            "nodeType": "YulTypedName",
                            "src": "2848:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2789:255:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3200:507:8",
                          "nodeType": "YulBlock",
                          "src": "3200:507:8",
                          "statements": [
                            {
                              "nativeSrc": "3210:12:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3210:12:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3220:2:8",
                                "nodeType": "YulLiteral",
                                "src": "3220:2:8",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "3214:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3214:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3231:32:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3231:32:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3249:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3249:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3260:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3260:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3245:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3245:3:8"
                                },
                                "nativeSrc": "3245:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3245:18:8"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nativeSrc": "3235:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3235:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3279:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3279:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3290:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3290:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3272:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3272:6:8"
                                },
                                "nativeSrc": "3272:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3272:21:8"
                              },
                              "nativeSrc": "3272:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3272:21:8"
                            },
                            {
                              "nativeSrc": "3302:17:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3302:17:8",
                              "value": {
                                "name": "tail_1",
                                "nativeSrc": "3313:6:8",
                                "nodeType": "YulIdentifier",
                                "src": "3313:6:8"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "3306:3:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3306:3:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3328:27:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3328:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "3348:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3348:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "3342:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3342:5:8"
                                },
                                "nativeSrc": "3342:13:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3342:13:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "3332:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3332:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nativeSrc": "3371:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3371:6:8"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "3379:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3379:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3364:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3364:6:8"
                                },
                                "nativeSrc": "3364:22:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3364:22:8"
                              },
                              "nativeSrc": "3364:22:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3364:22:8"
                            },
                            {
                              "nativeSrc": "3395:25:8",
                              "nodeType": "YulAssignment",
                              "src": "3395:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3406:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3406:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3417:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3417:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3402:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3402:3:8"
                                },
                                "nativeSrc": "3402:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3402:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "3395:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3395:3:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3429:29:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3429:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "3447:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3447:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3455:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "3455:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3443:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3443:3:8"
                                },
                                "nativeSrc": "3443:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3443:15:8"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nativeSrc": "3433:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3433:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3467:10:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3467:10:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3476:1:8",
                                "nodeType": "YulLiteral",
                                "src": "3476:1:8",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "3471:1:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3471:1:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3535:146:8",
                                "nodeType": "YulBlock",
                                "src": "3535:146:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "3556:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3556:3:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "srcPtr",
                                                  "nativeSrc": "3571:6:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3571:6:8"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nativeSrc": "3565:5:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3565:5:8"
                                              },
                                              "nativeSrc": "3565:13:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "3565:13:8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "3588:3:8",
                                                      "nodeType": "YulLiteral",
                                                      "src": "3588:3:8",
                                                      "type": "",
                                                      "value": "160"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "3593:1:8",
                                                      "nodeType": "YulLiteral",
                                                      "src": "3593:1:8",
                                                      "type": "",
                                                      "value": "1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nativeSrc": "3584:3:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3584:3:8"
                                                  },
                                                  "nativeSrc": "3584:11:8",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3584:11:8"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "3597:1:8",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3597:1:8",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nativeSrc": "3580:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3580:3:8"
                                              },
                                              "nativeSrc": "3580:19:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "3580:19:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nativeSrc": "3561:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3561:3:8"
                                          },
                                          "nativeSrc": "3561:39:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3561:39:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3549:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3549:6:8"
                                      },
                                      "nativeSrc": "3549:52:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3549:52:8"
                                    },
                                    "nativeSrc": "3549:52:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3549:52:8"
                                  },
                                  {
                                    "nativeSrc": "3614:19:8",
                                    "nodeType": "YulAssignment",
                                    "src": "3614:19:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "3625:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3625:3:8"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "3630:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3630:2:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "3621:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3621:3:8"
                                      },
                                      "nativeSrc": "3621:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3621:12:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "3614:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3614:3:8"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3646:25:8",
                                    "nodeType": "YulAssignment",
                                    "src": "3646:25:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nativeSrc": "3660:6:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3660:6:8"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "3668:2:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3668:2:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "3656:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3656:3:8"
                                      },
                                      "nativeSrc": "3656:15:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3656:15:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nativeSrc": "3646:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3646:6:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "3497:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3497:1:8"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "3500:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3500:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "3494:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3494:2:8"
                                },
                                "nativeSrc": "3494:13:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3494:13:8"
                              },
                              "nativeSrc": "3486:195:8",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "3508:18:8",
                                "nodeType": "YulBlock",
                                "src": "3508:18:8",
                                "statements": [
                                  {
                                    "nativeSrc": "3510:14:8",
                                    "nodeType": "YulAssignment",
                                    "src": "3510:14:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "3519:1:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3519:1:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3522:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3522:1:8",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "3515:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3515:3:8"
                                      },
                                      "nativeSrc": "3515:9:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3515:9:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "3510:1:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3510:1:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "3490:3:8",
                                "nodeType": "YulBlock",
                                "src": "3490:3:8",
                                "statements": []
                              },
                              "src": "3486:195:8"
                            },
                            {
                              "nativeSrc": "3690:11:8",
                              "nodeType": "YulAssignment",
                              "src": "3690:11:8",
                              "value": {
                                "name": "pos",
                                "nativeSrc": "3698:3:8",
                                "nodeType": "YulIdentifier",
                                "src": "3698:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3690:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3690:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
                        "nativeSrc": "3049:658:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3169:9:8",
                            "nodeType": "YulTypedName",
                            "src": "3169:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3180:6:8",
                            "nodeType": "YulTypedName",
                            "src": "3180:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3191:4:8",
                            "nodeType": "YulTypedName",
                            "src": "3191:4:8",
                            "type": ""
                          }
                        ],
                        "src": "3049:658:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "3762:373:8",
                          "nodeType": "YulBlock",
                          "src": "3762:373:8",
                          "statements": [
                            {
                              "nativeSrc": "3772:26:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3772:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "3792:5:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3792:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "3786:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3786:5:8"
                                },
                                "nativeSrc": "3786:12:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3786:12:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "3776:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3776:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "3814:3:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3814:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "3819:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3819:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3807:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3807:6:8"
                                },
                                "nativeSrc": "3807:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3807:19:8"
                              },
                              "nativeSrc": "3807:19:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "3807:19:8"
                            },
                            {
                              "nativeSrc": "3835:10:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3835:10:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3844:1:8",
                                "nodeType": "YulLiteral",
                                "src": "3844:1:8",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "3839:1:8",
                                  "nodeType": "YulTypedName",
                                  "src": "3839:1:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3906:110:8",
                                "nodeType": "YulBlock",
                                "src": "3906:110:8",
                                "statements": [
                                  {
                                    "nativeSrc": "3920:14:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "3920:14:8",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3930:4:8",
                                      "nodeType": "YulLiteral",
                                      "src": "3930:4:8",
                                      "type": "",
                                      "value": "0x20"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "3924:2:8",
                                        "nodeType": "YulTypedName",
                                        "src": "3924:2:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nativeSrc": "3962:3:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3962:3:8"
                                                },
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "3967:1:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3967:1:8"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "3958:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3958:3:8"
                                              },
                                              "nativeSrc": "3958:11:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "3958:11:8"
                                            },
                                            {
                                              "name": "_1",
                                              "nativeSrc": "3971:2:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "3971:2:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "3954:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3954:3:8"
                                          },
                                          "nativeSrc": "3954:20:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3954:20:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value",
                                                      "nativeSrc": "3990:5:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3990:5:8"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nativeSrc": "3997:1:8",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3997:1:8"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "3986:3:8",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3986:3:8"
                                                  },
                                                  "nativeSrc": "3986:13:8",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3986:13:8"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nativeSrc": "4001:2:8",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4001:2:8"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "3982:3:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "3982:3:8"
                                              },
                                              "nativeSrc": "3982:22:8",
                                              "nodeType": "YulFunctionCall",
                                              "src": "3982:22:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "3976:5:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "3976:5:8"
                                          },
                                          "nativeSrc": "3976:29:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3976:29:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3947:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3947:6:8"
                                      },
                                      "nativeSrc": "3947:59:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3947:59:8"
                                    },
                                    "nativeSrc": "3947:59:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3947:59:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "3865:1:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3865:1:8"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "3868:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "3868:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "3862:2:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3862:2:8"
                                },
                                "nativeSrc": "3862:13:8",
                                "nodeType": "YulFunctionCall",
                                "src": "3862:13:8"
                              },
                              "nativeSrc": "3854:162:8",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "3876:21:8",
                                "nodeType": "YulBlock",
                                "src": "3876:21:8",
                                "statements": [
                                  {
                                    "nativeSrc": "3878:17:8",
                                    "nodeType": "YulAssignment",
                                    "src": "3878:17:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "3887:1:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "3887:1:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3890:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "3890:4:8",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "3883:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3883:3:8"
                                      },
                                      "nativeSrc": "3883:12:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3883:12:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "3878:1:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3878:1:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "3858:3:8",
                                "nodeType": "YulBlock",
                                "src": "3858:3:8",
                                "statements": []
                              },
                              "src": "3854:162:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nativeSrc": "4040:3:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4040:3:8"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "4045:6:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "4045:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4036:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4036:3:8"
                                        },
                                        "nativeSrc": "4036:16:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4036:16:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4054:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "4054:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4032:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4032:3:8"
                                    },
                                    "nativeSrc": "4032:27:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4032:27:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4061:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "4061:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4025:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4025:6:8"
                                },
                                "nativeSrc": "4025:38:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4025:38:8"
                              },
                              "nativeSrc": "4025:38:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "4025:38:8"
                            },
                            {
                              "nativeSrc": "4072:57:8",
                              "nodeType": "YulAssignment",
                              "src": "4072:57:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "4087:3:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4087:3:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nativeSrc": "4100:6:8",
                                                "nodeType": "YulIdentifier",
                                                "src": "4100:6:8"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4108:2:8",
                                                "nodeType": "YulLiteral",
                                                "src": "4108:2:8",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "4096:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4096:3:8"
                                            },
                                            "nativeSrc": "4096:15:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4096:15:8"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4117:2:8",
                                                "nodeType": "YulLiteral",
                                                "src": "4117:2:8",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nativeSrc": "4113:3:8",
                                              "nodeType": "YulIdentifier",
                                              "src": "4113:3:8"
                                            },
                                            "nativeSrc": "4113:7:8",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4113:7:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "4092:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "4092:3:8"
                                        },
                                        "nativeSrc": "4092:29:8",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4092:29:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4083:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4083:3:8"
                                    },
                                    "nativeSrc": "4083:39:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4083:39:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4124:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "4124:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4079:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4079:3:8"
                                },
                                "nativeSrc": "4079:50:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4079:50:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "4072:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4072:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_string",
                        "nativeSrc": "3712:423:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "3739:5:8",
                            "nodeType": "YulTypedName",
                            "src": "3739:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nativeSrc": "3746:3:8",
                            "nodeType": "YulTypedName",
                            "src": "3746:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "3754:3:8",
                            "nodeType": "YulTypedName",
                            "src": "3754:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3712:423:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "4576:696:8",
                          "nodeType": "YulBlock",
                          "src": "4576:696:8",
                          "statements": [
                            {
                              "nativeSrc": "4586:13:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4586:13:8",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "4596:3:8",
                                "nodeType": "YulLiteral",
                                "src": "4596:3:8",
                                "type": "",
                                "value": "352"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "4590:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "4590:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4608:29:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4608:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4626:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "4626:3:8",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4631:1:8",
                                        "nodeType": "YulLiteral",
                                        "src": "4631:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "4622:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4622:3:8"
                                    },
                                    "nativeSrc": "4622:11:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4622:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4635:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "4635:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "4618:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4618:3:8"
                                },
                                "nativeSrc": "4618:19:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4618:19:8"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nativeSrc": "4612:2:8",
                                  "nodeType": "YulTypedName",
                                  "src": "4612:2:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4653:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4653:9:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "4668:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4668:6:8"
                                      },
                                      {
                                        "name": "_2",
                                        "nativeSrc": "4676:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4676:2:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4664:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4664:3:8"
                                    },
                                    "nativeSrc": "4664:15:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4664:15:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4646:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4646:6:8"
                                },
                                "nativeSrc": "4646:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4646:34:8"
                              },
                              "nativeSrc": "4646:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "4646:34:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4700:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4700:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4711:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "4711:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4696:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4696:3:8"
                                    },
                                    "nativeSrc": "4696:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4696:18:8"
                                  },
                                  {
                                    "name": "_1",
                                    "nativeSrc": "4716:2:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4716:2:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4689:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4689:6:8"
                                },
                                "nativeSrc": "4689:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4689:30:8"
                              },
                              "nativeSrc": "4689:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "4689:30:8"
                            },
                            {
                              "nativeSrc": "4728:59:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4728:59:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "4760:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4760:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4772:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4772:9:8"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "4783:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4783:2:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4768:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4768:3:8"
                                    },
                                    "nativeSrc": "4768:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4768:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string",
                                  "nativeSrc": "4742:17:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4742:17:8"
                                },
                                "nativeSrc": "4742:45:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4742:45:8"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nativeSrc": "4732:6:8",
                                  "nodeType": "YulTypedName",
                                  "src": "4732:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4807:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4807:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4818:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "4818:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4803:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4803:3:8"
                                    },
                                    "nativeSrc": "4803:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4803:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail_1",
                                        "nativeSrc": "4827:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4827:6:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4835:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4835:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "4823:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4823:3:8"
                                    },
                                    "nativeSrc": "4823:22:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4823:22:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4796:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4796:6:8"
                                },
                                "nativeSrc": "4796:50:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4796:50:8"
                              },
                              "nativeSrc": "4796:50:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "4796:50:8"
                            },
                            {
                              "nativeSrc": "4855:41:8",
                              "nodeType": "YulAssignment",
                              "src": "4855:41:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nativeSrc": "4881:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4881:6:8"
                                  },
                                  {
                                    "name": "tail_1",
                                    "nativeSrc": "4889:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4889:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string",
                                  "nativeSrc": "4863:17:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4863:17:8"
                                },
                                "nativeSrc": "4863:33:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4863:33:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4855:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4855:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4916:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4916:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4927:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "4927:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4912:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4912:3:8"
                                    },
                                    "nativeSrc": "4912:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4912:18:8"
                                  },
                                  {
                                    "name": "value3",
                                    "nativeSrc": "4932:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4932:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4905:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4905:6:8"
                                },
                                "nativeSrc": "4905:34:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4905:34:8"
                              },
                              "nativeSrc": "4905:34:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "4905:34:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4959:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "4959:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4970:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "4970:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4955:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4955:3:8"
                                    },
                                    "nativeSrc": "4955:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4955:19:8"
                                  },
                                  {
                                    "name": "value4",
                                    "nativeSrc": "4976:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "4976:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4948:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4948:6:8"
                                },
                                "nativeSrc": "4948:35:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4948:35:8"
                              },
                              "nativeSrc": "4948:35:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "4948:35:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5003:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5003:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5014:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5014:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4999:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4999:3:8"
                                    },
                                    "nativeSrc": "4999:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4999:19:8"
                                  },
                                  {
                                    "name": "value5",
                                    "nativeSrc": "5020:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5020:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4992:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4992:6:8"
                                },
                                "nativeSrc": "4992:35:8",
                                "nodeType": "YulFunctionCall",
                                "src": "4992:35:8"
                              },
                              "nativeSrc": "4992:35:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "4992:35:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5047:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5047:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5058:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5058:3:8",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5043:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5043:3:8"
                                    },
                                    "nativeSrc": "5043:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5043:19:8"
                                  },
                                  {
                                    "name": "value6",
                                    "nativeSrc": "5064:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5064:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5036:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5036:6:8"
                                },
                                "nativeSrc": "5036:35:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5036:35:8"
                              },
                              "nativeSrc": "5036:35:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5036:35:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5091:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5091:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5102:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5102:3:8",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5087:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5087:3:8"
                                    },
                                    "nativeSrc": "5087:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5087:19:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value7",
                                        "nativeSrc": "5112:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5112:6:8"
                                      },
                                      {
                                        "name": "_2",
                                        "nativeSrc": "5120:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5120:2:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5108:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5108:3:8"
                                    },
                                    "nativeSrc": "5108:15:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5108:15:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5080:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5080:6:8"
                                },
                                "nativeSrc": "5080:44:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5080:44:8"
                              },
                              "nativeSrc": "5080:44:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5080:44:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5144:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5144:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5155:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5155:3:8",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5140:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5140:3:8"
                                    },
                                    "nativeSrc": "5140:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5140:19:8"
                                  },
                                  {
                                    "name": "value8",
                                    "nativeSrc": "5161:6:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5161:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5133:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5133:6:8"
                                },
                                "nativeSrc": "5133:35:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5133:35:8"
                              },
                              "nativeSrc": "5133:35:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5133:35:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5188:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5188:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5199:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5199:3:8",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5184:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5184:3:8"
                                    },
                                    "nativeSrc": "5184:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5184:19:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value9",
                                        "nativeSrc": "5209:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5209:6:8"
                                      },
                                      {
                                        "name": "_2",
                                        "nativeSrc": "5217:2:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5217:2:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5205:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5205:3:8"
                                    },
                                    "nativeSrc": "5205:15:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5205:15:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5177:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5177:6:8"
                                },
                                "nativeSrc": "5177:44:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5177:44:8"
                              },
                              "nativeSrc": "5177:44:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5177:44:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5241:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5241:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5252:3:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5252:3:8",
                                        "type": "",
                                        "value": "320"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5237:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5237:3:8"
                                    },
                                    "nativeSrc": "5237:19:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5237:19:8"
                                  },
                                  {
                                    "name": "value10",
                                    "nativeSrc": "5258:7:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5258:7:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5230:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5230:6:8"
                                },
                                "nativeSrc": "5230:36:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5230:36:8"
                              },
                              "nativeSrc": "5230:36:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5230:36:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$861_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_address_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
                        "nativeSrc": "4140:1132:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4464:9:8",
                            "nodeType": "YulTypedName",
                            "src": "4464:9:8",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nativeSrc": "4475:7:8",
                            "nodeType": "YulTypedName",
                            "src": "4475:7:8",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nativeSrc": "4484:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4484:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nativeSrc": "4492:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4492:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nativeSrc": "4500:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4500:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nativeSrc": "4508:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4508:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nativeSrc": "4516:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4516:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nativeSrc": "4524:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4524:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nativeSrc": "4532:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4532:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "4540:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4540:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "4548:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4548:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4556:6:8",
                            "nodeType": "YulTypedName",
                            "src": "4556:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4567:4:8",
                            "nodeType": "YulTypedName",
                            "src": "4567:4:8",
                            "type": ""
                          }
                        ],
                        "src": "4140:1132:8"
                      },
                      {
                        "body": {
                          "nativeSrc": "5451:170:8",
                          "nodeType": "YulBlock",
                          "src": "5451:170:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5468:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5468:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5479:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5479:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5461:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5461:6:8"
                                },
                                "nativeSrc": "5461:21:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5461:21:8"
                              },
                              "nativeSrc": "5461:21:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5461:21:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5502:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5502:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5513:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5513:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5498:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5498:3:8"
                                    },
                                    "nativeSrc": "5498:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5498:18:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5518:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5518:2:8",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5491:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5491:6:8"
                                },
                                "nativeSrc": "5491:30:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5491:30:8"
                              },
                              "nativeSrc": "5491:30:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5491:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5541:9:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "5541:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5552:2:8",
                                        "nodeType": "YulLiteral",
                                        "src": "5552:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5537:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5537:3:8"
                                    },
                                    "nativeSrc": "5537:18:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5537:18:8"
                                  },
                                  {
                                    "hexValue": "6f6e6c7920444f54422063616e20757064617465",
                                    "kind": "string",
                                    "nativeSrc": "5557:22:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5557:22:8",
                                    "type": "",
                                    "value": "only DOTB can update"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5530:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5530:6:8"
                                },
                                "nativeSrc": "5530:50:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5530:50:8"
                              },
                              "nativeSrc": "5530:50:8",
                              "nodeType": "YulExpressionStatement",
                              "src": "5530:50:8"
                            },
                            {
                              "nativeSrc": "5589:26:8",
                              "nodeType": "YulAssignment",
                              "src": "5589:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5601:9:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5601:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5612:2:8",
                                    "nodeType": "YulLiteral",
                                    "src": "5612:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5597:3:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5597:3:8"
                                },
                                "nativeSrc": "5597:18:8",
                                "nodeType": "YulFunctionCall",
                                "src": "5597:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5589:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5589:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_278a566a288b8bea9076f94580f0a67393d0666cb2b9d9c5af46d595140a83d2__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "5277:344:8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5428:9:8",
                            "nodeType": "YulTypedName",
                            "src": "5428:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5442:4:8",
                            "nodeType": "YulTypedName",
                            "src": "5442:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5277:344:8"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$861t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        let value_1 := calldataload(add(headStart, 224))\n        validator_revert_contract_IERC20(value_1)\n        value7 := value_1\n        value8 := calldataload(add(headStart, 256))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$861_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_address_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 352\n        let _2 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _2))\n        mstore(add(headStart, 32), _1)\n        let tail_1 := abi_encode_string(value1, add(headStart, _1))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), and(value7, _2))\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), and(value9, _2))\n        mstore(add(headStart, 320), value10)\n    }\n    function abi_encode_tuple_t_stringliteral_278a566a288b8bea9076f94580f0a67393d0666cb2b9d9c5af46d595140a83d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"only DOTB can update\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xE0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xADA4EF30 GT PUSH3 0x97 JUMPI DUP1 PUSH4 0xE32E723C GT PUSH3 0x6E JUMPI DUP1 PUSH4 0xE32E723C EQ PUSH3 0x1B5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x1CC JUMPI DUP1 PUSH4 0xF8079052 EQ PUSH3 0x1E3 JUMPI DUP1 PUSH4 0xFA2AF9DA EQ PUSH3 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xADA4EF30 EQ PUSH3 0x17B JUMPI DUP1 PUSH4 0xC54A9588 EQ PUSH3 0x192 JUMPI DUP1 PUSH4 0xD396F336 EQ PUSH3 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26232A2E EQ PUSH3 0xE5 JUMPI DUP1 PUSH4 0x381AA756 EQ PUSH3 0x102 JUMPI DUP1 PUSH4 0x532F5278 EQ PUSH3 0x132 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x146 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x152 JUMPI DUP1 PUSH4 0xA5D0BCFF EQ PUSH3 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xEF PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x119 PUSH3 0x113 CALLDATASIZE PUSH1 0x4 PUSH3 0x6ED JUMP JUMPDEST PUSH3 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xF9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH3 0x119 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0x150 PUSH3 0x33F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x119 JUMP JUMPDEST PUSH3 0x150 PUSH3 0x175 CALLDATASIZE PUSH1 0x4 PUSH3 0x7B4 JUMP JUMPDEST PUSH3 0x357 JUMP JUMPDEST PUSH3 0x150 PUSH3 0x18C CALLDATASIZE PUSH1 0x4 PUSH3 0x7CE JUMP JUMPDEST PUSH3 0x39D JUMP JUMPDEST PUSH3 0x19C PUSH3 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xF9 SWAP2 SWAP1 PUSH3 0x7F5 JUMP JUMPDEST PUSH3 0xEF PUSH3 0x4A7 JUMP JUMPDEST PUSH3 0x19C PUSH3 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH3 0x7CE JUMP JUMPDEST PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0x150 PUSH3 0x1DD CALLDATASIZE PUSH1 0x4 PUSH3 0x7CE JUMP JUMPDEST PUSH3 0x530 JUMP JUMPDEST PUSH3 0x119 PUSH3 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH3 0x7B4 JUMP JUMPDEST PUSH3 0x574 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH3 0x119 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x21A PUSH3 0x59F JUMP JUMPDEST PUSH1 0x0 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x2 SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x40 MLOAD PUSH3 0x24C SWAP1 PUSH3 0x61E JUMP JUMPDEST PUSH3 0x262 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x27F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE DUP3 SLOAD DUP4 ADD DUP4 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP7 DUP8 ADD DUP2 SSTORE DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP1 SWAP3 AND DUP4 OR SWAP1 SWAP2 SSTORE DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP3 SWAP4 POP PUSH32 0x3815A547CA4B753AE5CC6A73F3E019B6791FAEDAD7FE0614A6E08D0BCFB137F1 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x349 PUSH3 0x59F JUMP JUMPDEST PUSH3 0x355 PUSH1 0x0 PUSH3 0x5CE JUMP JUMPDEST JUMP JUMPDEST PUSH3 0x361 PUSH3 0x59F JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x45610D581145924DD7090A5017E5F2B1D6F42213BB2E95707FF86846BBFCB1CA SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x6F6E6C7920444F54422063616E20757064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x73238E3AE0A71B401B31AE67204506D074DE41BD5C084082FBA9B64B1C7FA28F SWAP1 PUSH1 0x20 ADD PUSH3 0x392 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x49D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x47E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B3 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH3 0x523 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x504 JUMPI JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x53A PUSH3 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x566 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x571 DUP2 PUSH3 0x5CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x355 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0x3EB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x278E DUP1 PUSH3 0x910 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x688 JUMPI PUSH3 0x688 PUSH3 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x6B3 JUMPI PUSH3 0x6B3 PUSH3 0x642 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x6CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH3 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH3 0x71A DUP2 PUSH3 0x62C JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x746 DUP14 DUP4 DUP15 ADD PUSH3 0x658 JUMP JUMPDEST SWAP10 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x76C DUP13 DUP3 DUP14 ADD PUSH3 0x658 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP3 POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD PUSH3 0x79B DUP2 PUSH3 0x62C JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH2 0x100 DUP11 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0x7EE DUP2 PUSH3 0x62C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x838 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0x811 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x86C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x84E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND DUP3 MSTORE PUSH2 0x160 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH3 0x8B4 DUP5 DUP4 ADD DUP16 PUSH3 0x844 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH3 0x8CA DUP3 DUP15 PUSH3 0x844 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD SWAP13 SWAP1 SWAP13 MSTORE PUSH1 0x80 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE POP POP PUSH1 0xA0 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xC0 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP6 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x278E CODESIZE SUB DUP1 PUSH3 0x278E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x347 JUMP JUMPDEST DUP10 DUP10 PUSH3 0x41 CALLER PUSH3 0x19D JUMP JUMPDEST PUSH1 0x4 PUSH3 0x4F DUP4 DUP3 PUSH3 0x4BE JUMP JUMPDEST POP PUSH1 0x5 PUSH3 0x5E DUP3 DUP3 PUSH3 0x4BE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP DUP6 DUP6 GT PUSH3 0xC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D652063616E2774206265206265666F72652073746172742074 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696D65 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH3 0x11F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420736574207A65726F206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xBE JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND OR SWAP1 SSTORE PUSH3 0x145 DUP5 PUSH3 0x1ED JUMP JUMPDEST PUSH1 0xC DUP9 SWAP1 SSTORE PUSH1 0x1A DUP8 SWAP1 SSTORE PUSH3 0x15C PUSH1 0xA DUP10 PUSH3 0x58A JUMP JUMPDEST PUSH1 0x1B SSTORE PUSH1 0xA SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xB SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SSTORE POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xF SSTORE POP PUSH3 0x5AD SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x1F7 PUSH3 0x231 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x223 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xBE JUMP JUMPDEST PUSH3 0x22E DUP2 PUSH3 0x19D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x260 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xBE JUMP JUMPDEST JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2C4 JUMPI PUSH3 0x2C4 PUSH3 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2EF JUMPI PUSH3 0x2EF PUSH3 0x27F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x331 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x312 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH3 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x375 DUP13 PUSH3 0x262 JUMP JUMPDEST PUSH1 0x20 DUP14 ADD MLOAD SWAP1 SWAP12 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3A0 DUP15 DUP3 DUP16 ADD PUSH3 0x295 JUMP JUMPDEST PUSH1 0x40 DUP15 ADD MLOAD SWAP1 SWAP12 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3CD DUP15 DUP3 DUP16 ADD PUSH3 0x295 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 DUP13 ADD MLOAD SWAP8 POP PUSH1 0x80 DUP13 ADD MLOAD SWAP7 POP PUSH1 0xA0 DUP13 ADD MLOAD SWAP6 POP PUSH1 0xC0 DUP13 ADD MLOAD SWAP5 POP PUSH3 0x3FA PUSH1 0xE0 DUP14 ADD PUSH3 0x262 JUMP JUMPDEST SWAP4 POP PUSH2 0x100 DUP13 ADD MLOAD SWAP3 POP PUSH3 0x413 PUSH2 0x120 DUP14 ADD PUSH3 0x262 JUMP JUMPDEST SWAP2 POP PUSH2 0x140 DUP13 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x442 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x463 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4B9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x494 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4B5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4A0 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x4DA JUMPI PUSH3 0x4DA PUSH3 0x27F JUMP JUMPDEST PUSH3 0x4F2 DUP2 PUSH3 0x4EB DUP5 SLOAD PUSH3 0x42D JUMP JUMPDEST DUP5 PUSH3 0x469 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x52A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x511 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4B5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x55B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x53A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x57A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x5A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH2 0x21D1 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x276 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D549E99 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xBAAD7D85 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xCCEC3716 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xCCEC3716 EQ PUSH2 0x6E1 JUMPI DUP1 PUSH4 0xCFB2B5E9 EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xE7AFEEED EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A1 JUMPI DUP1 PUSH4 0xFA2AF9DA EQ PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBAAD7D85 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xC0DAEE49 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xC16A0383 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xC2CED7E5 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xC5C4744C EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0xCA34DA20 EQ PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EE1221 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x95EE1221 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x9E7B08D5 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xABD6192C EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xBA53C283 EQ PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D549E99 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x8D4E4083 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x94FEBBF3 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x6D1E6516 GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x6D1E6516 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x73AFF5AF EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x7921BA96 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x43D25E82 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x49A1AE91 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x5D97C1A0 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10642509 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x10642509 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x15643554 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x26232A2E EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x26493848 EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x614117A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x7E87512 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x1008E961 EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x27D JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x90E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH2 0x9E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xA0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xAFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xB61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xC28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xC3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xF33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x308 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x53D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x5EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x638 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x658 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x1404 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x68E CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x14DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x6FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x1649 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x71C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x749 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x17C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x53D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2737BA3434B733903A37903932B1B7BB32B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x871 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x89D SWAP1 PUSH2 0x1F90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x902 DUP2 DUP6 DUP6 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x916 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xF SLOAD PUSH1 0xD SLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x934 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x5BD597F43E1AACEEF3DDD1A4EF7F8C1CD0898CAB692B0988CD731BBD40920FCB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x9F5 DUP6 DUP3 DUP6 PUSH2 0x183E JUMP JUMPDEST PUSH2 0xA00 DUP6 DUP6 DUP6 PUSH2 0x18BC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x278D00 PUSH1 0x10 SLOAD TIMESTAMP PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C726561647920636C61696D656420666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7320706572696F64206F72206974206973206E6F74207965742074696D652E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xACA SWAP1 DUP4 PUSH2 0x203B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE SWAP1 SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAF9 JUMPI PUSH2 0xAF1 CALLER PUSH2 0x191B JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB06 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xB0E PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9D7C6BBE8CA6F2433812F43ED204A1D7EA4AE548DB3A3D6E83F8D1CE67E31A53 SWAP2 PUSH2 0xB57 SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xB69 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xB9F JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT JUMPDEST PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206861732066696E6973686564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xE SLOAD PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH2 0xC30 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xC3A PUSH1 0x0 PUSH2 0x1BD5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xC5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x14 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xC89 JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xC89 JUMPI POP PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2063616E6E6F7420726566756E642070726F6A6563742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x756E6473 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD GT DUP1 ISZERO PUSH2 0xD9A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0xDE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207368617265732072656D61696E696E6720666F7220726566756E640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x12 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0xE09 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x18 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xE DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE3E SWAP1 DUP5 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x11 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE66 SWAP1 DUP5 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0xF40CC8C1A1D17359049BA500CFC894596A692CFFC9D03943CD92EC2E159CF6AE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x871 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x902 DUP2 DUP6 DUP6 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0xF86 JUMPI POP PUSH1 0xB SLOAD TIMESTAMP LT JUMPDEST PUSH2 0xFA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206861732066696E6973686564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1032 JUMPI POP PUSH1 0x1B SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265732063616E2774206265206C657373207468616E207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E64206D6F7265207468616E206D617820616C6C6F7765640000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST DUP3 PUSH1 0x1A SLOAD PUSH2 0x1121 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x112B SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST GT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457863656564696E6720746F74616C2066756E642072616973696E6720676F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6C21 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1B SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x11A2 SWAP1 DUP4 SWAP1 PUSH2 0x2188 JUMP JUMPDEST GT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420627579206D6F7265207468616E20746865206D61782073686172 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6520616C6C6F77656421 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1A SLOAD PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1B SLOAD DUP3 SUB PUSH2 0x1232 JUMPI PUSH1 0x14 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH2 0x12CE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x127D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A1 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST DUP4 PUSH1 0x1A SLOAD PUSH2 0x12AF SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x12B9 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST LT PUSH2 0x12CE JUMPI PUSH1 0x14 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1369 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x138D SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13A6 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13BF SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x71BE8766C1BD9BB33623F518AECC1D98612C75B596F4A0C38408F72239EF4E60 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SUB PUSH2 0x146C JUMPI PUSH1 0x10 SLOAD PUSH2 0x1465 SWAP1 TIMESTAMP PUSH2 0x203B JUMP JUMPDEST SWAP1 POP PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x148F SWAP1 TIMESTAMP PUSH2 0x203B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH4 0x1E13380 SWAP2 DUP5 SWAP2 PUSH2 0x14C1 SWAP2 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x14CB SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1500 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x14 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2053616C65206973206E6F742066696E6973686564207965 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7421 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x212A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x19 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x15E1 SWAP1 DUP5 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15F1 SWAP1 POP CALLER DUP3 PUSH2 0x1C25 JUMP JUMPDEST DUP1 PUSH1 0x13 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x649FDE579B8BA49BD4FBCB330614CB075B8D53C352C5ADC49161B6F654E400A2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1651 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x16CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420636C61696D2066756E642072616973696E6720746F6B656E7320 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x7573696E672074686973206D6574686F6421 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1711 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x216F JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1758 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF9 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x17D1 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x85F DUP2 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0xAF9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x18B6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x18A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x18B6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1C5F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x18E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1910 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0xAF9 DUP4 DUP4 DUP4 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1926 DUP3 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x197B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x199F SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xD6A45326680045C471B7B30597D25E52E420F1E7535046CA9AD2944A1BB53487 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A656374206973206E6F742066696E6973686564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xF SLOAD PUSH1 0xD SLOAD PUSH2 0x1A51 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1A5B SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH1 0xD SLOAD PUSH2 0x1A72 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x1A7C SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1A86 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0xD SLOAD PUSH2 0x1A99 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x1AA3 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B1E SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B94 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C4F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH2 0x1C5B PUSH1 0x0 DUP4 DUP4 PUSH2 0x1D34 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C89 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1CB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x18B6 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D26 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D5F JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D54 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1DD1 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DED JUMPI PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BC8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E7F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1E63 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ED8 DUP4 PUSH2 0x1EA0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F04 DUP5 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1F12 PUSH1 0x20 DUP6 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3D DUP3 PUSH2 0x1EA0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F79 DUP4 PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F87 PUSH1 0x20 DUP5 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1FA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2014 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2070726F6A6563742069732063616E63656C6C6564000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x48 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A2045697468657220697420686173206E6F74207374617274 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6564206F72207468652074696D65206C696D697420666F722070726F6A656374 PUSH1 0x60 DUP3 ADD MSTORE PUSH8 0x8195E1C1A5C9959 PUSH1 0xC2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F6A6563743A206164647265737320686173206E6F20636F6E7472696275 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x74696F6E73 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1FCA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 COINBASE 0xBA DUP10 TIMESTAMP CREATE2 0xDB CHAINID TIMESTAMP 0xC6 PUSH8 0x40A7061B1E285D89 PUSH19 0xDB6620D46B5D595022033B1764736F6C634300 ADDMOD XOR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xCD 0xE5 DUP3 PUSH22 0xFDC8ED1D1089AB503CA2764FBCE3F84081A930E51FA0 0x29 PUSH29 0x79D2B664736F6C63430008180033000000000000000000000000000000 ",
              "sourceMap": "1374:2496:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:31;;;;;;;;;160:25:8;;;148:2;133:18;1493:31:7;;;;;;;;2016:979;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2560:32:8;;;2542:51;;2530:2;2515:18;2016:979:7;2396:203:8;1618:19:7;;;;;-1:-1:-1;;;;;1618:19:7;;;2167:101:0;;;:::i;:::-;;1512:85;1558:7;1584:6;-1:-1:-1;;;;;1584:6:0;1512:85;;3490:158:7;;;;;;:::i;:::-;;:::i;3654:214::-;;;;;;:::i;:::-;;:::i;3116:105::-;;;:::i;:::-;;;;;;;:::i;3001:109::-;;;:::i;3278:206::-;;;;;;:::i;:::-;;:::i;2417:215:0:-;;;;;;:::i;:::-;;:::i;1644:30:7:-;;;;;;:::i;:::-;;:::i;1537:74::-;;;;;-1:-1:-1;;;;;1537:74:7;;;2016:979;2365:25;1405:13:0;:11;:13::i;:::-;2402:23:7::1;2454:11;2475:5;2490:14;2514:16;2540:17;2567;2594:15;2619:13;2642:11;;2663:14;;;;;;;;;-1:-1:-1::0;;;;;2663:14:7::1;2687:11;2428:280;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2718:13:7::1;:39:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;2718:39:7;::::1;-1:-1:-1::0;;;;;;2718:39:7;;::::1;::::0;::::1;::::0;;;1009:19;;;;;;2864:10:::1;-1:-1:-1::0;2849:26:7;;;:14:::1;:26;::::0;;;;;;;:52;;;;::::1;::::0;;;;;;;;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;2917:35;;2542:51:8;;;2917:35:7;2718:39;;-1:-1:-1;2917:35:7::1;::::0;;;;;;;;;::::1;2977:10:::0;2016:979;-1:-1:-1;;;;;;;;;;2016:979:7:o;2167:101:0:-;1405:13;:11;:13::i;:::-;2231:30:::1;2258:1;2231:18;:30::i;:::-;2167:101::o:0;3490:158:7:-;1405:13:0;:11;:13::i;:::-;3567:11:7::1;:26:::0;;;3609:32:::1;::::0;160:25:8;;;3609:32:7::1;::::0;148:2:8;133:18;3609:32:7::1;;;;;;;;3490:158:::0;:::o;3654:214::-;3745:4;;-1:-1:-1;;;;;3745:4:7;3731:10;:18;3723:51;;;;-1:-1:-1;;;3723:51:7;;5479:2:8;3723:51:7;;;5461:21:8;5518:2;5498:18;;;5491:30;-1:-1:-1;;;5537:18:8;;;5530:50;5597:18;;3723:51:7;;;;;;;;;3785:14;:27;;-1:-1:-1;;;;;;3785:27:7;-1:-1:-1;;;;;3785:27:7;;;;;;;;3828:33;;2542:51:8;;;3828:33:7;;2530:2:8;2515:18;3828:33:7;2396:203:8;3116:105:7;3166:16;3201:13;3194:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3194:20:7;;;;;;;;;;;;;;;;;;;;;;;3116:105;:::o;3001:109::-;3049:17;3085:18;:8;895:14;;804:112;3085:18;3078:25;;3001:109;:::o;3278:206::-;-1:-1:-1;;;;;3433:24:7;;3410:20;3433:24;;;:14;:24;;;;;;;;3410:47;;;;;;;;;;;;;;;;;3368:26;;3410:20;:47;;3433:24;3410:47;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3410:47:7;;;;;;;;;;;;;;;;-1:-1:-1;3410:47:7;;3278:206;-1:-1:-1;;;;;;;3278:206:7:o;2417:215:0:-;1405:13;:11;:13::i;:::-;-1:-1:-1;;;;;2501:22:0;::::1;2497:91;;2546:31;::::0;-1:-1:-1;;;2546:31:0;;2574:1:::1;2546:31;::::0;::::1;2542:51:8::0;2515:18;;2546:31:0::1;2396:203:8::0;2497:91:0::1;2597:28;2616:8;2597:18;:28::i;:::-;2417:215:::0;:::o;1644:30:7:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1644:30:7;;-1:-1:-1;1644:30:7;:::o;1670:162:0:-;1558:7;1584:6;-1:-1:-1;;;;;1584:6:0;735:10:5;1729:23:0;1725:101;;1775:40;;-1:-1:-1;;;1775:40:0;;735:10:5;1775:40:0;;;2542:51:8;2515:18;;1775:40:0;2396:203:8;2786:187:0;2859:16;2878:6;;-1:-1:-1;;;;;2894:17:0;;;-1:-1:-1;;;;;;2894:17:0;;;;;;2926:40;;2878:6;;;;;;;2926:40;;2859:16;2926:40;2849:124;2786:187;:::o;-1:-1:-1:-;;;;;;;;:::o;196:139:8:-;-1:-1:-1;;;;;279:31:8;;269:42;;259:70;;325:1;322;315:12;340:127;401:10;396:3;392:20;389:1;382:31;432:4;429:1;422:15;456:4;453:1;446:15;472:719;515:5;568:3;561:4;553:6;549:17;545:27;535:55;;586:1;583;576:12;535:55;622:6;609:20;648:18;685:2;681;678:10;675:36;;;691:18;;:::i;:::-;766:2;760:9;734:2;820:13;;-1:-1:-1;;816:22:8;;;840:2;812:31;808:40;796:53;;;864:18;;;884:22;;;861:46;858:72;;;910:18;;:::i;:::-;950:10;946:2;939:22;985:2;977:6;970:18;1031:3;1024:4;1019:2;1011:6;1007:15;1003:26;1000:35;997:55;;;1048:1;1045;1038:12;997:55;1112:2;1105:4;1097:6;1093:17;1086:4;1078:6;1074:17;1061:54;1159:1;1152:4;1147:2;1139:6;1135:15;1131:26;1124:37;1179:6;1170:15;;;;;;472:719;;;;:::o;1196:1195::-;1361:6;1369;1377;1385;1393;1401;1409;1417;1425;1478:3;1466:9;1457:7;1453:23;1449:33;1446:53;;;1495:1;1492;1485:12;1446:53;1534:9;1521:23;1553:39;1586:5;1553:39;:::i;:::-;1611:5;-1:-1:-1;1667:2:8;1652:18;;1639:32;1690:18;1720:14;;;1717:34;;;1747:1;1744;1737:12;1717:34;1770:50;1812:7;1803:6;1792:9;1788:22;1770:50;:::i;:::-;1760:60;;1873:2;1862:9;1858:18;1845:32;1829:48;;1902:2;1892:8;1889:16;1886:36;;;1918:1;1915;1908:12;1886:36;;1941:52;1985:7;1974:8;1963:9;1959:24;1941:52;:::i;:::-;1931:62;;;2040:2;2029:9;2025:18;2012:32;2002:42;;2091:3;2080:9;2076:19;2063:33;2053:43;;2143:3;2132:9;2128:19;2115:33;2105:43;;2195:3;2184:9;2180:19;2167:33;2157:43;;2252:3;2241:9;2237:19;2224:33;2266:41;2299:7;2266:41;:::i;:::-;2326:7;2316:17;;;2380:3;2369:9;2365:19;2352:33;2342:43;;1196:1195;;;;;;;;;;;:::o;2604:180::-;2663:6;2716:2;2704:9;2695:7;2691:23;2687:32;2684:52;;;2732:1;2729;2722:12;2684:52;-1:-1:-1;2755:23:8;;2604:180;-1:-1:-1;2604:180:8:o;2789:255::-;2848:6;2901:2;2889:9;2880:7;2876:23;2872:32;2869:52;;;2917:1;2914;2907:12;2869:52;2956:9;2943:23;2975:39;3008:5;2975:39;:::i;:::-;3033:5;2789:255;-1:-1:-1;;;2789:255:8:o;3049:658::-;3220:2;3272:21;;;3342:13;;3245:18;;;3364:22;;;3191:4;;3220:2;3443:15;;;;3417:2;3402:18;;;3191:4;3486:195;3500:6;3497:1;3494:13;3486:195;;;3565:13;;-1:-1:-1;;;;;3561:39:8;3549:52;;3656:15;;;;3621:12;;;;3597:1;3515:9;3486:195;;;-1:-1:-1;3698:3:8;;3049:658;-1:-1:-1;;;;;;3049:658:8:o;3712:423::-;3754:3;3792:5;3786:12;3819:6;3814:3;3807:19;3844:1;3854:162;3868:6;3865:1;3862:13;3854:162;;;3930:4;3986:13;;;3982:22;;3976:29;3958:11;;;3954:20;;3947:59;3883:12;3854:162;;;3858:3;4061:1;4054:4;4045:6;4040:3;4036:16;4032:27;4025:38;4124:4;4117:2;4113:7;4108:2;4100:6;4096:15;4092:29;4087:3;4083:39;4079:50;4072:57;;;3712:423;;;;:::o;4140:1132::-;-1:-1:-1;;;;;4664:15:8;;;4646:34;;4596:3;4711:2;4696:18;;4689:30;;;4567:4;;4742:45;4768:18;;;4760:6;4742:45;:::i;:::-;4728:59;;4835:9;4827:6;4823:22;4818:2;4807:9;4803:18;4796:50;4863:33;4889:6;4881;4863:33;:::i;:::-;4927:2;4912:18;;4905:34;;;;4970:3;4955:19;;4948:35;;;;-1:-1:-1;;5014:3:8;4999:19;;4992:35;;;;5058:3;5043:19;;5036:35;;;;5108:15;;;5102:3;5087:19;;5080:44;5155:3;5140:19;;5133:35;5205:15;;;5199:3;5184:19;;5177:44;5252:3;5237:19;5230:36;4855:41;4140:1132;-1:-1:-1;;;4140:1132:8:o"
            },
            "methodIdentifiers": {
              "DOTB()": "532f5278",
              "contractsList(uint256)": "f8079052",
              "createListing(address,string,string,uint256,uint256,uint256,uint256,address,uint256)": "381aa756",
              "deployedContracts()": "c54a9588",
              "deployedCounter()": "d396f336",
              "getUserProjects(address)": "e32e723c",
              "modifyPlatformFee(uint256)": "a5d0bcff",
              "owner()": "8da5cb5b",
              "platformFee()": "26232a2e",
              "platformWallet()": "fa2af9da",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b",
              "updatePlatformWallet(address)": "ada4ef30"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"PlatformWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"listing\",\"type\":\"address\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOTB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractsList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stableCoin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_projectSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_fundraisingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_contributionAmnt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_projectStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_projectEndTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_projectOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_projectAPY\",\"type\":\"uint256\"}],\"name\":\"createListing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newProjectAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployedContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployedCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"__counter\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"getUserProjects\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"contracts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"}],\"name\":\"modifyPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"updatePlatformWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BeatFactory.sol\":\"BEATFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x525584152442a11c9ed6b04064454f1c41dca045c3d123c5bcb7a956a016a9fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93647e8ed871f0d61ff2a12854ad3edaa910a2915569c152bb782ddede31950f\",\"dweb:/ipfs/QmZPc7EZfB1R25FsJKRdA6Pe7VywBdSJHgEfTx1Z6iK996\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/BEATListings.sol\":{\"keccak256\":\"0xb479d724d3f2c3285cbcf9c2ad1ecf45cc210b5f0c8d4efd8839b28900536bff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc710c22743771bcb9d59004025e2436560c7695820f0b6a7a8b9e75e2211393\",\"dweb:/ipfs/QmUtPe9UX33GnMxGwxGd2oCxBiKUyR84F7MYuFgJLF7Qth\"]},\"contracts/BeatFactory.sol\":{\"keccak256\":\"0xc8bfbf3b08dc70437cd1705e8695f6ccf52fe3b16910b0aeaa4ca2be09ceef9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://394d0e3ac374dd92468b3d9ae3cb348e47ec8e6687269bdeaef4c7e39d41b249\",\"dweb:/ipfs/QmYPBWhvNaAedhNDW48eStHYc2jY6CuBrcJdzi62DWxChQ\"]}},\"version\":1}"
        },
        "Counters": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008bcbd7eda228b076009c5efdb0e62c91dc1f54d399f2199a565ebcbff5fdf1864736f6c63430008180033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xBC 0xBD PUSH31 0xDA228B076009C5EFDB0E62C91DC1F54D399F2199A565EBCBFF5FDF1864736F PUSH13 0x63430008180033000000000000 ",
              "sourceMap": "401:971:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;401:971:7;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008bcbd7eda228b076009c5efdb0e62c91dc1f54d399f2199a565ebcbff5fdf1864736f6c63430008180033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xBC 0xBD PUSH31 0xDA228B076009C5EFDB0E62C91DC1F54D399F2199A565EBCBFF5FDF1864736F PUSH13 0x63430008180033000000000000 ",
              "sourceMap": "401:971:7:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing MAAL721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BeatFactory.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x525584152442a11c9ed6b04064454f1c41dca045c3d123c5bcb7a956a016a9fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93647e8ed871f0d61ff2a12854ad3edaa910a2915569c152bb782ddede31950f\",\"dweb:/ipfs/QmZPc7EZfB1R25FsJKRdA6Pe7VywBdSJHgEfTx1Z6iK996\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/BEATListings.sol\":{\"keccak256\":\"0xb479d724d3f2c3285cbcf9c2ad1ecf45cc210b5f0c8d4efd8839b28900536bff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc710c22743771bcb9d59004025e2436560c7695820f0b6a7a8b9e75e2211393\",\"dweb:/ipfs/QmUtPe9UX33GnMxGwxGd2oCxBiKUyR84F7MYuFgJLF7Qth\"]},\"contracts/BeatFactory.sol\":{\"keccak256\":\"0xc8bfbf3b08dc70437cd1705e8695f6ccf52fe3b16910b0aeaa4ca2be09ceef9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://394d0e3ac374dd92468b3d9ae3cb348e47ec8e6687269bdeaef4c7e39d41b249\",\"dweb:/ipfs/QmYPBWhvNaAedhNDW48eStHYc2jY6CuBrcJdzi62DWxChQ\"]}},\"version\":1}"
        }
      }
    }
  }
}